(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{449:function(t,a,s){"use strict";s.r(a);var v=s(57),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("不以规矩，不能成方圆。 对于团队而言，统一很重要，代码是写给人看的，然后顺便跑在机器上而已。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/standard/standard_1.jpg",alt:"图片"}})]),t._v(" "),s("h2",{attrs:{id:"意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#意义"}},[t._v("#")]),t._v(" 意义")]),t._v(" "),s("p",[t._v("每一种事物都有它被发明时，都会有其用处和目的，每一个事物都是自己擅长和适合的领域； 我们要在对的地方使用它，让它做自己擅长的事。")]),t._v(" "),s("ul",[s("li",[t._v("规范的代码可以提高团队的协作能力 ；")]),t._v(" "),s("li",[t._v("规范的代码可以减少bug处理；")]),t._v(" "),s("li",[t._v("规范的代码可以提高代码的复用利用率；")]),t._v(" "),s("li",[t._v("规范的代码可以降低维护成本；")]),t._v(" "),s("li",[t._v("规范的代码有助于代码审查；")]),t._v(" "),s("li",[t._v("养成代码规范的习惯，有助于程序员自身的成长；")])]),t._v(" "),s("h2",{attrs:{id:"目的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[t._v("#")]),t._v(" 目的")]),t._v(" "),s("p",[t._v("我们知道，当一个团队开始指定并实行编码规范的话，错误就会变得更加显而易见。 如果一段特定的代码不符合规范的话，它有可能只是代码风格错误，而也有可能会是 bug。 早期指定规范就使得代码审核得以更好的开展，并且可以更精确的地定位到错误。 只要开发者们能够保证源代码源文件都严格遵循规范，那接下去所使用的混淆、压缩和编译工具则可投其所好不尽相同。 为了提高工作效率，便于后台人员添加功能及前端后期优化维护，输出高质量的文档。 在项目构建中，使结构更加清晰，代码简明有序，有一个更好的前端架构。")]),t._v(" "),s("h2",{attrs:{id:"愿景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#愿景"}},[t._v("#")]),t._v(" 愿景")]),t._v(" "),s("p",[t._v("本手册的愿景是码出高效，码出质量。现代软件架构都需要协同开发完成，高效 协作即降低协同成本，提升沟通效率，所谓无规矩不成方圆，无规范不能协作。众所 周知，制订交通法规表面上是要限制行车权，实际上是保障公众的人身安全。试想如 果没有限速，没有红绿灯，谁还敢上路行驶。对软件来说，适当的规范和标准绝不是 消灭代码内容的创造性、优雅性，而是限制过度个性化，以一种普遍认可的统一方式 一起做事，提升协作效率。代码的字里行间流淌的是软件生命中的血液，质量的提升 是尽可能少踩坑，杜绝踩重复的坑，切实提升质量意识。")])])}),[],!1,null,null,null);a.default=_.exports}}]);