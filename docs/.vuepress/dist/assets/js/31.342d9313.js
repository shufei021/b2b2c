(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{436:function(a,t,s){"use strict";s.r(t);var i=s(57),v=Object(i.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"前端自动化测试使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端自动化测试使用"}},[a._v("#")]),a._v(" 前端自动化测试使用")]),a._v(" "),s("h2",{attrs:{"data-id":"heading-3"}},[a._v("前端自动化测试简述")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c8b1a25126cd4ddbb078e57792f6969d~tplv-k3u1fbpfcp-zoom-1.image",alt:"什么是测试",loading:"lazy"}})]),a._v(" "),s("p",[a._v("测试其实就是在已经开发完成的软件之上采用"),s("strong",[a._v("人工或非人工")]),a._v("的方式验证软件是否符合工程预期，是否会造成用户/开发商损失等潜在问题的一种方式。")]),a._v(" "),s("p",[a._v("大多数情况下，我们编写的前端代码都是开发手工自测，又或是提测后由专门的测试人员手工测试。")]),a._v(" "),s("p",[a._v("手工测试当然也是没有问题的，但是通过自动化的测试工具，可以更加快速高效且准确定位问题所在。")]),a._v(" "),s("p",[a._v("自动化测试实际上是运行一段测试代码，去验证目标代码是否满足某个期望。")]),a._v(" "),s("p",[a._v("本文后续的内容中，"),s("strong",[a._v("“测试”一词将专门指代自动化测试")]),a._v("。")]),a._v(" "),s("h2",{attrs:{"data-id":"heading-4"}},[a._v("为什么要测试？")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ed3058aad614b4eaffc2889b5b832df~tplv-k3u1fbpfcp-zoom-1.image",alt:"为什么要测试",loading:"lazy"}})]),a._v(" "),s("p",[a._v("我们进行测试的目的在于，及时发现错误，提高代码质量和开发效率，避免存在 BUG 的代码发布上线造成损失。")]),a._v(" "),s("p",[s("strong",[a._v("测试自动化的好处在于反馈及时，能够极大地提高前端的开发效率。")])]),a._v(" "),s("p",[a._v("在我们日常的开发过程中，是不是经常需要在项目跑起来之后去人工测试某些操作或者流程是否能够正常运行？是不是经常需要打断点或者使用 "),s("code",[a._v("console.log")]),a._v(" 查看控制台信息来检查某个函数是否执行？")]),a._v(" "),s("p",[a._v("这些需要我们自己手工测试代码的执行结果是否符合预期的场景，完全可以使用自动化测试的脚本代替。")]),a._v(" "),s("p",[a._v("现有的很多成熟的自动化测试框架完全可以模拟我们的手工操作，使用脚本自动运行测试用例，通常只需要几秒就能给出准确的反馈，同时还能侦听代码变化，自动执行项目中发生了变化的代码对应的测试用例，能够极大提高我们的开发效率。")]),a._v(" "),s("p",[a._v("在公司业务和人员变动都比较快的当下，编写自动化测试脚本的收益越来越高。开发者再也不用害怕引入回归 BUG，也再也不用害怕把代码交给他人维护。有了测试脚本的约束，迭代/重构都能更加从容。")]),a._v(" "),s("blockquote",[s("p",[s("span",{staticClass:"math math-inline"},[s("span",{staticClass:"katex"},[s("span",{staticClass:"katex-mathml"},[s("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[s("semantics",[s("mrow",[s("mtext",[a._v("测试自动化的收益")]),s("mo",[a._v("=")]),s("mtext",[a._v("迭代次数")]),s("mo",[a._v("×")]),s("mtext",[a._v("全手动执行成本")]),s("mo",[a._v("−")]),s("mtext",[a._v("首次自动化成本")]),s("mo",[a._v("−")]),s("mtext",[a._v("维护次数")]),s("mo",[a._v("×")]),s("mtext",[a._v("维护成本")])],1),s("annotation",{attrs:{encoding:"application/x-tex"}},[a._v("测试自动化的收益 = 迭代次数 \\times 全手动执行成本 - 首次自动化成本 - 维护次数 \\times 维护成本")])],1)],1)],1),s("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord cjk_fallback"},[a._v("测")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("试")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("自")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("动")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("化")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("的")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("收")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("益")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),s("span",{staticClass:"mrel"},[a._v("=")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"mord cjk_fallback"},[a._v("迭")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("代")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("次")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("数")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[a._v("×")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"mord cjk_fallback"},[a._v("全")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("手")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("动")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("执")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("行")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("成")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("本")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[a._v("−")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"mord cjk_fallback"},[a._v("首")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("次")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("自")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("动")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("化")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("成")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("本")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[a._v("−")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.76666em","vertical-align":"-0.08333em"}}),s("span",{staticClass:"mord cjk_fallback"},[a._v("维")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("护")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("次")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("数")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),s("span",{staticClass:"mbin"},[a._v("×")]),s("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),s("span",{staticClass:"base"},[s("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),s("span",{staticClass:"mord cjk_fallback"},[a._v("维")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("护")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("成")]),s("span",{staticClass:"mord cjk_fallback"},[a._v("本")])])])])])])]),a._v(" "),s("h2",{attrs:{"data-id":"heading-5"}},[a._v("有哪些测试类型？")]),a._v(" "),s("p",[a._v("前端测试主要分为 3 种："),s("strong",[a._v("单元测试（Unit Test）")]),a._v("、"),s("strong",[a._v("集成测试（Integration Test）")]),a._v("、"),s("strong",[a._v("UI 测试（UI Test）")])]),a._v(" "),s("p",[a._v("三种测试的占比分别为：")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7391f504a49740a696e03869aac48648~tplv-k3u1fbpfcp-zoom-1.image",alt:"测试金字塔",loading:"lazy"}})]),a._v(" "),s("p",[a._v("现实是，大多数公司的测试金字塔是倒过来的，由人工进行"),s("strong",[a._v("UI 测试")]),a._v("反而是最多的，"),s("strong",[a._v("集成测试")]),a._v("和"),s("strong",[a._v("单元测试")]),a._v("却大多被忽略。")]),a._v(" "),s("h3",{attrs:{"data-id":"heading-6"}},[a._v("单元测试（Unit Test）")]),a._v(" "),s("p",[a._v("单元测试是最容易实现的：代码中多个组件共用的工具类库、多个组件共用的子组件等。")]),a._v(" "),s("p",[s("strong",[a._v("通常情况下，在公共函数/组件中一定要有单元测试来保证代码能够正常工作。单元测试也应该是项目中数量最多、覆盖率最高的。")])]),a._v(" "),s("p",[a._v("能进行单元测试的函数/组件，一定是低耦合的，这也从一定程度上保证了我们的代码质量。")]),a._v(" "),s("h3",{attrs:{"data-id":"heading-7"}},[a._v("集成测试（Integration Test）")]),a._v(" "),s("p",[a._v("集成测试通常被应用在：耦合度较高的函数/组件、经过二次封装的函数/组件、多个函数/组件组合而成的函数/组件等。")]),a._v(" "),s("p",[a._v("集成测试的目的在于，测试经过单元测试后的各个模块组合在一起是否能正常工作。会对组合之后的代码整体暴露在外接口进行测试，查看组合后的代码工作是否符合预期。")]),a._v(" "),s("p",[s("strong",[a._v("集成测试是安全感较高的测试，能很大程度提升开发者的信心，集成测试用例设计合理且测试都通过能够很大程度保证产品符合预期。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-8"}},[a._v("UI 测试（UI Test）")]),a._v(" "),s("p",[a._v("在我学习查阅文献的过程中，我发现国内不少文章都将 UI 测试（UI Test）和端到端测试（E2E Test）混为一谈，认为是同一个测试类型。")]),a._v(" "),s("p",[a._v("事实上，UI 测试（UI Test）和端到端测试（E2E Test）是稍有区别的：")]),a._v(" "),s("blockquote",[s("p",[a._v("UI 测试（UI Test）只是对于前端的测试，是脱离真实后端环境的，仅仅只是将前端放在真实环境中运行，而后端和数据都应该使用 Mock 的。")]),a._v(" "),s("p",[a._v("端到端测试（E2E Test）则是将整个应用放到真实的环境中运行，包括数据在内也是需要使用真实的。")])]),a._v(" "),s("p",[a._v("就前端而言，UI 测试（UI Test）更贴近于我们的开发流程。在前后端分离的开发模式中，前端开发通常会使用到 Mock 的服务器和数据。因而我们需要在开发基本完成后进行相应的 UI 测试（UI Test）。")]),a._v(" "),s("p",[a._v("UI 测试的自动化程度还不高，大多数还依赖于手工测试。")]),a._v(" "),s("p",[a._v("在一些自动化测试工具中有创建快照的功能，也能帮助我们在一定程度上实现 UI 测试（UI Test）的自动化。")]),a._v(" "),s("h2",{attrs:{"data-id":"heading-9"}},[a._v("哪些项目适合引入自动化测试？")]),a._v(" "),s("p",[a._v("目前市面上的大多数文章都没有讲过这个问题，但事实上这个问题是最值得思考的！")]),a._v(" "),s("p",[a._v("在化学上有一句名言：")]),a._v(" "),s("blockquote",[s("p",[a._v("抛开剂量谈毒性都是耍流氓。")])]),a._v(" "),s("p",[s("strong",[a._v("同理，在前端自动化测试方面，抛开项目类型、软件开发的人员配置和生命周期而谈论自动化测试的好处和必要性，也是耍流氓。")])]),a._v(" "),s("p",[a._v("于我个人而言，我比较喜欢写测试代码，当看到测试用例都全部 PASS 都是绿色的时候，非常舒服。")]),a._v(" "),s("p",[a._v("但我猜大部分的开发都会觉得：需求这么多，这么紧急，保证完成需求都已经非常困难了，已经没精力再编写测试代码了。")]),a._v(" "),s("p",[a._v("现实中，我们经常会针对一些活动开发一些一次性的代码模块，这样的代码模块功能简单，且后续继续迭代的可能性低，这种代码就完全没有必要引入自动化测试工具。")]),a._v(" "),s("p",[s("strong",[a._v("适合引入自动化测试的场景：")])]),a._v(" "),s("ol",[s("li",[a._v("公共库类的开发维护")]),a._v(" "),s("li",[a._v("中长期项目的迭代/重构")]),a._v(" "),s("li",[a._v("引用了不可控的第三方依赖")])]),a._v(" "),s("p",[a._v("这些场景是需要引入自动化测试来对现有代码进行约束的。"),s("strong",[a._v("尤其是中长期项目，迭代/重构时人力回归困难，自动化测试就显得尤为重要！")])]),a._v(" "),s("h2",{attrs:{"data-id":"heading-10"}},[a._v("如何选择测试工具？")]),a._v(" "),s("p",[a._v("现在市面上有很多流行的测试工具，但普遍都存在一个问题："),s("strong",[a._v("新特性的支持滞后")]),a._v("。")]),a._v(" "),s("p",[a._v("前端测试的框架可谓是百花齐放。")]),a._v(" "),s("ul",[s("li",[a._v("单元测试（Unit Test）有 Mocha, Ava, Karma, Jest, Jasmine 等。")]),a._v(" "),s("li",[a._v("集成测试（Integration Test）和 UI 测试（UI Test）有 ReactTestUtils, Test Render, Enzyme, React-Testing-Library, Vue-Test-Utils 等。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-11"}},[a._v("主流测试工具比较")]),a._v(" "),s("table",[s("thead",[s("tr",[s("th",[a._v("框架")]),s("th",[a._v("断言")]),s("th",[a._v("仿真")]),s("th",[a._v("快照")]),s("th",[a._v("异步测试")])])]),s("tbody",[s("tr",[s("td",[a._v("Mocha")]),s("td",[a._v("默认不支持，可配置")]),s("td",[a._v("默认不支持，可配置")]),s("td",[a._v("默认不支持，可配置")]),s("td",[a._v("友好")])]),s("tr",[s("td",[a._v("Ava")]),s("td",[a._v("默认支持")]),s("td",[a._v("不支持，需第三方配置")]),s("td",[a._v("默认支持")]),s("td",[a._v("友好")])]),s("tr",[s("td",[a._v("Jasmine")]),s("td",[a._v("默认支持")]),s("td",[a._v("默认支持")]),s("td",[a._v("默认支持")]),s("td",[a._v("不友好")])]),s("tr",[s("td",[a._v("Jest")]),s("td",[a._v("默认支持")]),s("td",[a._v("默认支持")]),s("td",[a._v("默认支持")]),s("td",[a._v("友好")])]),s("tr",[s("td",[a._v("Karma")]),s("td",[a._v("不支持，需第三方配置")]),s("td",[a._v("不支持，需第三方配置")]),s("td",[a._v("不支持，需第三方配置")]),s("td",[a._v("不支持，需第三方配置")])])])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-12"}},[a._v("Mocha")]),a._v(" "),s("ul",[s("li",[a._v("Mocha 是生态最好，使用最广泛的单测框架，但是他需要较多的配置来实现它的高扩展性。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-13"}},[a._v("Ava")]),a._v(" "),s("ul",[s("li",[a._v("Ava 是更轻量高效简单的单测框架，但是自身不够稳定，并发运行文件多的时候会撑爆 CPU。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-14"}},[a._v("Jasmine")]),a._v(" "),s("ul",[s("li",[a._v("Jasmine 是单测框架的“元老”，开箱即用，但是异步测试支持较弱。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-15"}},[a._v("Jest")]),a._v(" "),s("ul",[s("li",[a._v("Jest 基于 Jasmine, 做了大量修改并添加了很多特性，同样开箱即用，但异步测试支持良好。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-16"}},[a._v("Karma")]),a._v(" "),s("ul",[s("li",[a._v("Karma 能在真实的浏览器中测试，强大适配器，可配置其他单测框架，一般会配合 Mocha 或 Jasmine 等一起使用。")])]),a._v(" "),s("p",[a._v("每个框架都有自己的优缺点，没有最好的框架，只有最适合的框架。Augular 的默认测试框架就是 Karma + Jasmine，而 React 的默认测试框架是 Jest。")]),a._v(" "),s("p",[a._v("Jest 被各种 React 应用推荐和使用。它基于 Jasmine，至今已经做了大量修改并添加了很多特性，同样也是开箱即用，支持断言，仿真，快照等。Create React App 新建的项目就会默认配置 Jest，我们基本不用做太多改造，就可以直接使用。")]),a._v(" "),s("h2",{attrs:{"data-id":"heading-17"}},[a._v("采用何种测试思想？")]),a._v(" "),s("h3",{attrs:{"data-id":"heading-18"}},[a._v("TDD：Test-Driven Development（测试驱动开发）")]),a._v(" "),s("ul",[s("li",[a._v("TDD：Test-Driven Development（测试驱动开发）：TDD 则要求在编写某个功能的代码之前先编写测试代码，然后只编写使测试通过的功能代码，通过测试来推动整个开发的进行")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-19"}},[a._v("BDD：Behavior-Driven Development（行为驱动开发）")]),a._v(" "),s("ul",[s("li",[a._v("BDD：Behavior-Driven Development（行为驱动开发）：BDD 可以让项目成员（甚至是不懂编程的）使用自然语言来描述系统功能和业务逻辑，从而根据这些描述步骤进行系统自动化的测试")])]),a._v(" "),s("h2",{attrs:{"data-id":"heading-20"}},[a._v("Jest 基本语法")]),a._v(" "),s("p",[s("strong",[a._v("由于大厂普遍使用 React/Vue 进行开发，而 React/Vue 官方推荐的单元测试工具都是 Jest，因此本文我们就简单介绍一下 Jest 的基本语法。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-21"}},[a._v("匹配器")]),a._v(" "),s("h4",{attrs:{"data-id":"heading-22"}},[a._v("Number")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6b59715576894b1da8831dd3d4f91b1d~tplv-k3u1fbpfcp-zoom-1.image",alt:"匹配器(Number)",loading:"lazy"}})]),a._v(" "),s("h4",{attrs:{"data-id":"heading-23"}},[a._v("String")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a3d46935f19e4617ac3262db05c06eeb~tplv-k3u1fbpfcp-zoom-1.image",alt:"匹配器(String)",loading:"lazy"}})]),a._v(" "),s("h4",{attrs:{"data-id":"heading-24"}},[a._v("Array & Iterable")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ed5b0e2718624cb880ffdac5793ef3f6~tplv-k3u1fbpfcp-zoom-1.image",alt:"匹配器(Array & Iterable)",loading:"lazy"}})]),a._v(" "),s("h4",{attrs:{"data-id":"heading-25"}},[a._v("Exception")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1a1dc9504e6f4586a1c94200eadd3ae5~tplv-k3u1fbpfcp-zoom-1.image",alt:"匹配器(Exception)",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{"data-id":"heading-26"}},[a._v("异步代码测试")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0c7c18b2eadd424b9528620ddc156af3~tplv-k3u1fbpfcp-zoom-1.image",alt:"异步代码测试",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62e0c0733d2743cca0ba3eb0eb46253d~tplv-k3u1fbpfcp-zoom-1.image",alt:"异步代码测试",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/860a364cf3434246a2ec6c89f24ff5c7~tplv-k3u1fbpfcp-zoom-1.image",alt:"推荐方法",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{"data-id":"heading-27"}},[a._v("生命周期钩子")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f18326681af048c69ffb6c83f8ff4fd8~tplv-k3u1fbpfcp-zoom-1.image",alt:"生命周期钩子",loading:"lazy"}})]),a._v(" "),s("p",[s("strong",[a._v("生命周期钩子执行顺序符合洋葱模型。")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-28"}},[a._v("执行顺序")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8444f83e4c3e4f79a2ca72d5a7978f9a~tplv-k3u1fbpfcp-zoom-1.image",alt:"执行顺序",loading:"lazy"}})]),a._v(" "),s("p",[s("strong",[a._v("测试单元/用例执行顺序类似异步队列")])]),a._v(" "),s("h3",{attrs:{"data-id":"heading-29"}},[a._v("函数 Mock")]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c66d151d3c0248cc94bcefa9e92595ec~tplv-k3u1fbpfcp-zoom-1.image",alt:"函数 Mock",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"medium-zoom-image",attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f802136d55b4c6eb20fc675f697797b~tplv-k3u1fbpfcp-zoom-1.image",alt:"函数 Mock",loading:"lazy"}})])])}),[],!1,null,null,null);t.default=v.exports}}]);