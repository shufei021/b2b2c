{"version":3,"file":"index.js","sources":["../../../src/lib/date/lib/helper.js","../../../src/lib/date/lib/verify.js","../../../src/lib/date/lib/date.js","../../../src/lib/date/lib/core.js","../../../src/lib/date/lib/stamp.js","../../../src/lib/date/index.js","../../../src/lib/obj/lib/core.js","../../../src/lib/arr/lib/core.js","../../../src/lib/arr/index.js","../../../src/lib/url/lib/core.js","../../../src/lib/url/index.js","../../../src/lib/num/lib/core.js","../../../src/lib/num/index.js","../../../src/lib/str/index.js","../../../src/lib/str/lib/core.js","../../../src/lib/dom/lib/core.js","../../../src/lib/local/lib/core.js","../../../src/lib/local/index.js","../../../src/lib/browser/lib/core.js","../../../src/lib/browser/index.js","../../../src/lib/base/lib/core.js","../../../src/lib/base/index.js","../../../src/lib/dom/index.js","../../../src/lib/download/lib/core.js","../../../src/lib/download/index.js","../../../src/lib/obj/index.js","../../../src/lib/reg/index.js","../../../src/lib/reg/lib/core.js","../../../src/lib/map/index.js","../../../src/lib/map/lib/core.js","../../../src/lib/ListCountDown/index.js","../../../src/lib/session/index.js","../../../src/lib/session/lib/core.js","../../../src/lib/business/index.js","../../../src/lib/handday/index.js"],"sourcesContent":["/**\r\n * ※\r\n * Rdate 的静态方法\r\n * 用于 根据参数获取时间 的兼容：输入日期\r\n * 第1种情况：用户没有传参数，即 dt === undefined，此时返回当前日期时间\r\n * 第2种情况：用户传参数不符合规定（标准的时间戳和日期），此时返回当前日期时间\r\n * 第3种情况：用户传参数符合规定（标准的时间戳和日期），此时返回给定日期\r\n */\r\nexport const _dt = function (dt) {\r\n    return dt ? new Date(typeof dt == 'string' && dt.indexOf('-') > -1 ? dt.replace(/-/g, '/') : dt) : new Date()\r\n}\r\n\r\n/**\r\n * ※\r\n * Rdate 的静态方法\r\n * 初始化 dt 和 format\r\n * @param { Array } args ：参数解构后的数组\r\n * @param { String } ft  ：格式\r\n */\r\nexport const _initFormat = function (args, ft) {\r\n    let [a, b] = args,\r\n        dt = new Date(),\r\n        format = ft\r\n    if (args.length == 1) {\r\n        // 参数长度为1个时，检测传入的值的两种情况，不是格式就是时间，传入参数请按规则\r\n        isNaN(new Date(a).valueOf()) ? (format = a) : (dt = new Date(typeof a == 'string' ? a.replace(/-/g, '/') : a))\r\n    } else if (args.length >= 2) {\r\n        // 参数长度为2个时，正常对应\r\n        dt = new Date(typeof a == 'string' ? a.replace(/-/g, '/') : a)\r\n        format = b\r\n    }\r\n    return { dt, format }\r\n}\r\n\r\n/**\r\n * ※\r\n * Rdate 的静态方法\r\n * 用于获取时间详情\r\n * @param {String | Number | Date} dt ：日期 或 时间戳 或 日期对象\r\n */\r\nexport const _details = function (dt = new Date()) {\r\n    let d = _dt(dt)\r\n    return {\r\n        year: d.getFullYear(),\r\n        month: d.getMonth() + 1,\r\n        date: d.getDate(),\r\n        hour: d.getHours(),\r\n        minute: d.getMinutes(),\r\n        second: d.getSeconds(),\r\n        millisecond: d.getMilliseconds()\r\n    }\r\n}\r\n\r\nexport const padStart = (string, length, pad) => {\r\n    const s = String(string)\r\n    if (!s || s.length >= length) return String(string)\r\n    return `${Array(length + 1 - s.length).join(pad)}${string}`\r\n}\r\n","/**\r\n *\r\n * ***********\r\n * * 验证api *\r\n * ***********\r\n */\r\n\r\n/**\r\n * 是否润年\r\n * 能被4整除而不能被100整除.(如2004年就是闰年,1900年不是)\r\n * @param { Number | String } : 4位数年份，必需\r\n * @return 布尔值\r\n */\r\nexport const isLeapYear = function (y) {\r\n    return (y % 4 === 0 && y % 100 !== 0) || y % 400 === 0\r\n}\r\n\r\n/**\r\n * 判断时间（时分秒）格式是否有效\r\n * @param { String } str ：时分秒，必需\r\n * @return 布尔值\r\n */\r\nexport const isTime = function (str) {\r\n    let ret = str.match(/^(\\d{1,2})(:)?(\\d{1,2})\\2(\\d{1,2})$/)\r\n    if (ret == null) return false\r\n    if (ret[1] >= 24 || ret[3] >= 60 || ret[4] >= 60) return false\r\n    return true\r\n}\r\n\r\n/**\r\n * 判断日期（年月日）格式是否有效\r\n * @param {String} str ：年月日，必需\r\n * @return 布尔值\r\n */\r\nexport const isDate = function (str) {\r\n    let ret = str.match(/^(\\d{1,4})(-|\\/)(\\d{1,2})\\2(\\d{1,2})$/)\r\n    if (ret == null) return false\r\n    let d = new Date(ret[1], ret[3] - 1, ret[4])\r\n    return d.getFullYear() == ret[1] && d.getMonth() + 1 == ret[3] && d.getDate() == ret[4]\r\n}\r\n\r\n/**\r\n * 判断 完整的年月日时分秒格式是否有效\r\n * @param { String } str ：年月日时分秒，必需\r\n * @return 布尔值\r\n */\r\nexport const isDateTime = function (str) {\r\n    let ret = str.match(/^(\\d{4})(-|\\/)(\\d{1,2})\\2(\\d{1,2}) (\\d{1,2}):(\\d{1,2}):(\\d{1,2})$/)\r\n    if (ret == null) return false\r\n    let d = new Date(ret[1], ret[3] - 1, ret[4], ret[5], ret[6], ret[7])\r\n    return d.getFullYear() == ret[1] && d.getMonth() + 1 == ret[3] && d.getDate() == ret[4] && d.getHours() == ret[5] && d.getMinutes() == ret[6] && d.getSeconds() == ret[7]\r\n}\r\n\r\n/**\r\n * 验证一个日期是不是今天\r\n * @param { String } dt： 日期，必需\r\n * @return 布尔值\r\n */\r\nexport const isToday = function (dt) {\r\n    return new Date().toLocaleDateString() == new Date(typeof dt == 'string' ? dt.replace(/-/g, '/') : dt).toLocaleDateString()\r\n}\r\n\r\n/**\r\n * 验证传入的日期是否是昨天\r\n * @param {String} dt： 日期，必需\r\n */\r\nexport const isYesterday = function (dt) {\r\n    let d = new Date()\r\n    d.setDate(d.getDate() - 1)\r\n    return d.toLocaleDateString() === new Date(dt).toLocaleDateString()\r\n}\r\n\r\n/**\r\n * 验证传入的日期年份是否是今年\r\n * @param {String} dt： 日期，必需\r\n */\r\nexport const isThisYear = function (dt) {\r\n    let thisYear = new Date().getFullYear()\r\n    if (!(isDate(dt) || isDateTime(dt))) return false\r\n    let dtYear = new Date(dt).getFullYear()\r\n    return thisYear === dtYear\r\n}\r\n","/**\r\n * 基本方法\r\n * 直接获取当前时间的各个信息 或 获取指定时间的各个信息\r\n * 查看当前时间 或 指定时间的：年月日时分秒 周 星期 季度\r\n * @param {String | Number | Date} dt ：日期 或 时间戳 或 日期对象\r\n */\r\n\r\nimport { _dt, _details, _initFormat, padStart } from './helper'\r\n\r\nimport { format } from './core'\r\n\r\nimport { isYesterday, isToday, isThisYear } from './verify'\r\n\r\nexport const year = function (dt) {\r\n    return _details(dt).year\r\n}\r\nexport const month = function (dt) {\r\n    return _details(dt).month\r\n}\r\nexport const date = function (dt) {\r\n    return _details(dt).date\r\n}\r\nexport const hour = function (dt) {\r\n    return _details(dt).hour\r\n}\r\nexport const minute = function (dt) {\r\n    return _details(dt).minute\r\n}\r\nexport const second = function (dt) {\r\n    return _details(dt).second\r\n}\r\nexport const millisecond = function (dt) {\r\n    return _details(dt).millisecond\r\n}\r\n\r\n/**\r\n * 获取 （给定日期 | 当前日期） 对应的季度\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const quarter = function (dt) {\r\n    let d = _dt(dt)\r\n    let m = d.getMonth()\r\n    return m < 3 ? 1 : m < 6 ? 2 : m < 9 ? 3 : 4\r\n}\r\n\r\n/**\r\n * 计算 当前时辰 或 指定时间 （年月日时分秒）\r\n *\r\n * 凌晨0：00－6：00，\r\n * 早上 6：00-8:00；\r\n * 上午 8：00-12：00，上午是指8-12点工作时间\r\n * 中午12：00-14：00,中午是指12-14点午休时间\r\n * 下午14：00-18：00，下午是指14-18点下午工作时间\r\n * 晚上18：00-21：00；\r\n * 深夜：21：00-24：00\r\n *\r\n * @param { string | number } dt ：指定时间\r\n */\r\nexport const when = function (dt) {\r\n    let hour = _dt(dt).getHours()\r\n    return ['凌晨', '早上', '上午', '中午', '下午', '晚上', '深夜'][\r\n        hour >= 0 && hour <= 6 ? 0 : hour > 6 && hour <= 8 ? 1 : hour > 8 && hour <= 12 ? 2 : hour > 12 && hour <= 14 ? 3 : hour > 14 && hour <= 18 ? 4 : hour > 18 && hour <= 21 ? 5 : 6\r\n    ]\r\n}\r\n\r\n/**\r\n *\r\n * @param { String } key\r\n * @param {String | Number | Date} dt ：日期 或 时间戳 或 日期对象\r\n */\r\nexport const get = function (key, dt) {\r\n    return _details(dt)[Object.keys(_details(dt)).find(i => i.charAt(0) === key || i === key || i.charAt(0) + i.charAt(5) === key || (i === 'month' && key == 'M'))]\r\n}\r\n\r\n/**\r\n * 时间转换成数组\r\n * 获取年月日时分秒\r\n * @param {String | Number} dt\r\n */\r\nexport const toArray = function (dt) {\r\n    return Object.values(_details(dt)).slice(0, 6)\r\n}\r\n/**\r\n *\r\n * 时间转换成对象\r\n * 获取年月日时分秒\r\n */\r\nexport const toObject = function (dt) {\r\n    let r = _details(dt)\r\n    delete r.millisecond\r\n    return r\r\n}\r\n\r\n/**\r\n * 获取 （给定日期 | 当前日期） 对应的回显星期\r\n * 根据 （给定日期 | 当前日期）回显对应的星期\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n * @param {String} prefix :前缀\r\n */\r\nexport const previwWeekByDate = function (dt = new Date(), prefix = '星期') {\r\n    let d = _dt(dt)\r\n    return prefix + ['日', '一', '二', '三', '四', '五', '六'][d.getDay()]\r\n}\r\n\r\n/**\r\n * 获取 （给定日期 | 当前日期） 对应的回显月份\r\n * 根据 （给定日期 | 当前日期）回显对应的月份\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n * @param {String} suffix ：后缀\r\n */\r\nexport const previwMonthByDate = function (dt = new Date(), suffix = '月') {\r\n    let d = _dt(dt)\r\n    return ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'][d.getMonth()] + suffix\r\n}\r\n\r\n/**\r\n * 星期回显\r\n * 只是用来回显\r\n *  @param {String | Number}  i: 回显对应的数字\r\n *  @param {String}  invalidTip: 传入的数字超出有效数字范围的提示语，默认是 Invalid week\r\n *\r\n */\r\nexport const previewWeek = function (i, prefix = '周', invalidTip) {\r\n    if (i === 0) i = 7\r\n    return i > 0 && i < 8 ? prefix + ['一', '二', '三', '四', '五', '六', '日'][i - 1] : invalidTip === undefined ? 'Invalid week' : invalidTip\r\n}\r\n\r\n/**\r\n * 月份回显\r\n * 只是用来回显\r\n * @param { String | Number} i ：回显对应的数字\r\n * @param { String } invalidTip  ：传入的数字超出有效数字范围的提示语，默认是 Invalid week\r\n * @return String\r\n */\r\nexport const previewMonth = function (i, invalidTip) {\r\n    return i > 0 && i < 13 ? ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'][i - 1] + '月' : invalidTip === undefined ? 'Invalid month' : invalidTip\r\n}\r\n\r\n// 周的首末日期\r\nexport const weekFirstLast = function (...args) {\r\n    let dt = _initFormat(args, 'yyyy-MM-dd').dt\r\n    let ft = _initFormat(args, 'yyyy-MM-dd').format\r\n    let w = dt.getDay() == 0 ? 7 : dt.getDay()\r\n    dt.setDate(dt.getDate() - w + 1)\r\n    return {\r\n        first: format(dt, ft),\r\n        last: format(new Date(dt.getFullYear(), dt.getMonth(), dt.getDate() + 6), ft)\r\n    }\r\n}\r\n\r\n// 月的首末日期\r\nexport const monthFirstLast = function (...args) {\r\n    let dt = _initFormat(args, 'yyyy-MM-dd').dt\r\n    let ft = _initFormat(args, 'yyyy-MM-dd').format\r\n    return {\r\n        first: format(new Date(dt.getFullYear(), dt.getMonth(), 1), ft),\r\n        last: format(new Date(dt.getFullYear(), dt.getMonth() + 1, 0), ft)\r\n    }\r\n}\r\n\r\n/**\r\n * ※\r\n * 本周第一天\r\n * @param { String } format ：格式，默认 yyyy-MM-dd\r\n */\r\nexport const getCurWeekFirstDay = function () {\r\n    return weekFirstLast(new Date(), 'yyyy-MM-dd').first\r\n}\r\n\r\n/**\r\n * ※\r\n * 本周最后一天\r\n */\r\nexport const getCurWeekLastDay = function () {\r\n    return weekFirstLast(new Date(), 'yyyy-MM-dd').last\r\n}\r\n\r\n/**\r\n * ※\r\n * 任一月份第一天\r\n */\r\nexport const getMonthFirstDay = function (dt) {\r\n    let d = _dt(dt)\r\n    return format(d, 'yyyy-MM-') + '01'\r\n}\r\n\r\n/**\r\n * ※\r\n * 任一月份最后一天\r\n * @param { String | Number} dt ：日期 或 时间戳\r\n */\r\nexport const getMonthLastDay = function (dt) {\r\n    let d = _dt(dt)\r\n    d.setMonth(d.getMonth() + 1) //月份+1\r\n    d.setDate(1) //日设置成1号\r\n    d.setDate(d.getDate() - 1) //倒退1日到当前月末最后一天\r\n    return format(d, 'yyyy-MM-dd')\r\n}\r\n\r\n/**\r\n * ※\r\n * 获取两个日期相差多少天\r\n * @param {String | Number} d1 ：日期 或 时间戳\r\n * @param {String | Number} d2 ：日期 或 时间戳\r\n */\r\nexport const getDaysByDate = function (d1, d2) {\r\n    let ret = parseInt(Math.abs(new Date(d1) - new Date(d2)) / 86400000)\r\n    return isNaN(ret) ? 0 : ret\r\n}\r\n\r\n/**\r\n * ※\r\n * 获取 （给定日期 | 当前日期）为基准的 半年之前的日期\r\n * @param { String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getHalfYear = function (dt) {\r\n    return format(new Date(_dt(dt) - 15768000000), 'yyyy-MM-dd')\r\n}\r\n\r\n/**\r\n * ※\r\n * gap 间隙，\r\n * 距 （给定日期|当前日期） 所属的周 前进后退 n 周的周首末日期\r\n * @param { Number } n ：前进（+） 后退（-）n 周后的日期\r\n * @param { String | Number } dt ：日期 或 时间戳\r\n * @param { String } ft ：格式\r\n */\r\nexport const getGapWeek = function (n = 0, dt = new Date(), ft = 'yyyy-MM-dd') {\r\n    let { first, last } = weekFirstLast(dt, ft)\r\n    if (!n)\r\n        return {\r\n            first,\r\n            last\r\n        }\r\n    return weekFirstLast(getGapDate(n * 7, n > 0 ? last : first), ft)\r\n}\r\n\r\n/**\r\n * ※\r\n * gap 间隙，意味距  （给定日期|当前日期）前后日期\r\n * 距 （给定日期|当前日期） n 天 的日期\r\n * @param { Number } n ：前进（+） 后退（-）n 天后的日期\r\n * @param { String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getGapDate = function (n = 0, dt = new Date(), ft) {\r\n    let d = _dt(dt)\r\n    d.setDate(d.getDate() + n)\r\n    return format(d, ft || 'yyyy-MM-dd')\r\n}\r\n\r\n/**\r\n * ※\r\n * gap 间隙，意味距  （给定日期|当前日期）工作日（周一~周五的日期）\r\n * @param { String | Number } dt ：日期 或 时间戳\r\n * @param { String } ft ：格式\r\n */\r\nexport const getWeekWorkday = function (dt = new Date(), ft = 'yyyy-MM-dd') {\r\n    let d = new Date(dt)\r\n    let w = d.getDay() == 0 ? 7 : d.getDay()\r\n    d.setDate(d.getDate() - w + 1)\r\n    let first = format(d, ft)\r\n    d.setDate(d.getDate() + 4)\r\n    let last = format(d, ft)\r\n    return {\r\n        first,\r\n        last\r\n    }\r\n}\r\n\r\n/**\r\n * ※\r\n * gap 间隙，意味距  （给定日期|当前日期）工作日（周一~周五的日期）\r\n * @param { Number } n ：n周的工作日的首末日期\r\n * @param { String | Number } dt ：日期 或 时间戳\r\n * @param { String } ft ：格式\r\n */\r\nexport const getGapWeekWorkday = function (n = 0, dt = new Date(), ft = 'yyyy-MM-dd') {\r\n    let { first, last } = getWeekWorkday(dt)\r\n    if (!n)\r\n        return {\r\n            first,\r\n            last\r\n        }\r\n    return getWeekWorkday(getGapDate(n * 5, n > 0 ? last : first), ft)\r\n}\r\n\r\n/**\r\n * ※\r\n * 距 （给定日期|当前日期） n 年 的日期\r\n * @param { Number } n ：前进（+） 后退（-）n 年后的日期\r\n * @param { String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getGapYearDate = function (n = 0, dt = new Date(), ft = 'yyyy-MM-dd') {\r\n    let d = _dt(dt)\r\n    d.setFullYear(d.getFullYear() + n)\r\n    return format(d, ft)\r\n}\r\n\r\n/**\r\n * ※\r\n * 距 （给定日期 | 当前日期） n 月 的日期\r\n * @param { Number } n ：前进（+） 后退（-）n 月后的日期\r\n * @param { String | Number } dt dt ：日期 或 时间戳\r\n */\r\nexport const getGapMonthDate = function (n = 0, dt = new Date(), ft = 'yyyy-MM-dd') {\r\n    let d = _dt(dt)\r\n    d.setMonth(d.getMonth() + n)\r\n    return format(d, ft)\r\n}\r\n\r\n/**\r\n * 获取当前日期所在周任意星期对应的日期 ,比如我想知道这周5的日期你能告诉我吗？这个函数 就可以告诉你\r\n * @param { Number } week ：星期\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getWeekByDate = function (week, dt, ft = 'yyyy-MM-dd') {\r\n    if (!week) return ''\r\n    // 获取日期时间\r\n    let d = _dt(dt)\r\n    //统一：用户传入 0 或 7 都是星期日\r\n    let w = week === 0 ? 7 : week\r\n    let i = d.getDay() === 0 ? 7 : d.getDay()\r\n    if (w !== i) d.setDate(d.getDate() - (i - w))\r\n    return format(d, ft)\r\n}\r\n\r\n/**\r\n * 获取（给定日期 | 当前日期） 所在对应月份的第几周\r\n * @param {String | Number } dt ：日期 或 时间戳info\r\n */\r\nexport const getMonthWeek = function (dt) {\r\n    let d = format(_dt(dt), 'yyyy-MM-dd')\r\n    let info = getMonthWeekInfo(d)\r\n    return info[d].w\r\n}\r\n\r\n/**\r\n * 获取（给定日期 | 当前日期） 所在对应月份的星期信息\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getMonthWeekInfo = function (dt) {\r\n    let dd = _dt(dt),\r\n        ret = {},\r\n        n = 1,\r\n        isFirst = true,\r\n        days = getMonthDays(dd),\r\n        Month = dd.getMonth() + 1,\r\n        prefix = dd.getFullYear() + '-' + padStart(Month, 2, 0) + '-'\r\n    for (let i = 1; i < days + 1; i++) {\r\n        let re = weekFirstLast(prefix + i)\r\n        let last = re.last\r\n        if (month(last) !== Month && isFirst) {\r\n            n++\r\n            isFirst = false\r\n        } else if (new Date(prefix + i).getDay() == 1) {\r\n            n++\r\n        }\r\n        ret[prefix + padStart(i, 2, 0)] = {\r\n            ...re,\r\n            w: n,\r\n            d: days\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * 获取（给定日期 | 当前日期） 所在对应月份天数\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getMonthDays = function (dt) {\r\n    let dd = _dt(dt)\r\n    return new Date(dd.getFullYear(), dd.getMonth() + 1, 0).getDate()\r\n}\r\n\r\n/**\r\n * 获取 （给定日期 | 当前日期） 所在对应年份的第几周\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getYearWeek = function (dt) {\r\n    let dd = _dt(dt)\r\n    let d1 = new Date(dd.getFullYear(), dd.getMonth(), dd.getDate()),\r\n        d2 = new Date(dd.getFullYear(), 0, 1),\r\n        d = Math.round((d1 - d2) / 86400000)\r\n    return Math.ceil((d + (d2.getDay() + 1 - 1)) / 7)\r\n}\r\n\r\n/**\r\n * 获取 （给定日期 | 当前日期） 所在对应季度的第几周\r\n * @param {String | Number } dt ：日期 或 时间戳\r\n */\r\nexport const getQuarterWeek = function (dt) {\r\n    let dd = _dt(dt),\r\n        y = dd.getFullYear(),\r\n        m = dd.getMonth() + 1,\r\n        d = dd.getDate(),\r\n        ret = getYearWeek([y, m, d].join('/'))\r\n    if (m < 4) {\r\n        return ret\r\n    } else {\r\n        let month = m < 7 ? 4 : m < 10 ? 7 : 10\r\n        let week = ret - getYearWeek([y, month, 1].join('/'))\r\n        var day = new Date(y, month, 1)\r\n        if (day.getDay() > 1) week += 1\r\n        return week\r\n    }\r\n}\r\n\r\n/**\r\n * 生成 基于当前 / 指定时间的 过去 n 天时间（包含当天日期）\r\n * @param {Number} days 基于当前 / 指定时间的 过去 n 天时间（包含当天日期）\r\n * @param {Boolean} dt 指定时间\r\n * @return 日期数组\r\n */\r\nexport const getPassDaysDate = function (days, dt) {\r\n    if (!arguments.length) return []\r\n    return [...Array(days * 1 + 1).keys()]\r\n        .map(days => new Date((dt ? new Date(dt) : Date.now()) - 86400000 * days).toLocaleDateString())\r\n        .map(item =>\r\n            item\r\n                .split(/\\/|-/)\r\n                .map(i => padStart(i, 2, 0))\r\n                .join('-')\r\n        )\r\n        .splice(1)\r\n}\r\n\r\n/**\r\n * 计算两个日期间所有日期，以数组形式返回\r\n * 新增时间：2020/8/23\r\n * @param { string | number } startDate : 开始日期（13位时间戳 | 字符串日期）\r\n * @param { string | number } endDate ：结束日期（13位时间戳 | 字符串日期）\r\n * @return 日期间所有日期，以数组形式返回\r\n */\r\nexport const getBetweenDates = function (startDate, endDate) {\r\n    // 如果开始日期都没有，直接返回 []\r\n    if (!startDate) return []\r\n    // 辅助函数\r\n    let helper = (s, i) => new Date(+new Date(s) + i * 86400000).toLocaleDateString().replace(/\\//g, '-')\r\n    // 开始日期时间戳\r\n    let startDateStamp = +new Date(new Date(startDate).toLocaleDateString())\r\n    // 结束日期时间戳\r\n    let endDateStamp = endDate ? +new Date(new Date(endDate).toLocaleDateString()) : +new Date(new Date().toLocaleDateString())\r\n    // 如果两者相等\r\n    if (startDateStamp === endDateStamp) return [helper(new Date(endDate ? new Date() : startDate), 0)]\r\n    // 获取最小的日期作为开始日期\r\n    startDate = startDateStamp < endDateStamp ? new Date(startDateStamp) : new Date(endDate ? endDateStamp : +new Date())\r\n    // 获取最大的日期作为结束日期\r\n    endDate = startDateStamp < endDateStamp ? new Date(endDate ? endDateStamp : +new Date()) : new Date(startDateStamp)\r\n    // 计算相差天数\r\n    let gapDays = parseInt(Math.abs(startDateStamp - endDateStamp) / 86400000) + 1\r\n    // 返回结果\r\n    return Array(gapDays)\r\n        .fill(0)\r\n        .reduce((p, c, i) => [...p, helper(startDate, i)], [])\r\n}\r\n\r\n/**\r\n * @description: 获取指定年/当前分的 所属的52周的所有首末时间段\r\n * @param { String | Number } year: 年份\r\n */\r\nexport const getYearWeeks = function (year) {\r\n    let ret = Array(53)\r\n        .fill(0)\r\n        .map((_, i) => {\r\n            let week = getGapWeek(i, String(year || new Date().getFullYear()), 'MM/dd YYYY')\r\n            return week.first.slice(0, 5) + '~' + week.last.slice(0, 5)\r\n        })\r\n    if (ret && ret.length && ret[0].substr(0, 2) === '12') {\r\n        ret.splice(0, 1)\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * 时刻回显\r\n * @param {Number String Date} dt\r\n */\r\nexport const previewMoment = function (dt) {\r\n    let target = +new Date(_dt(dt)),\r\n        cur = +new Date(),\r\n        diff = parseInt((cur - target) / 1e3),\r\n        minute = parseInt(diff / 60),\r\n        hour = parseInt(diff / 3600)\r\n    return diff <= 60\r\n        ? '刚刚'\r\n        : minute < 60\r\n        ? minute + '分钟前'\r\n        : isToday(_dt(dt))\r\n        ? hour + '小时前'\r\n        : isYesterday(_dt(dt))\r\n        ? '昨天 ' + format(_dt(dt), 'hh:mm')\r\n        : year(_dt(dt)) === year()\r\n        ? format(_dt(dt), 'MM/dd hh:mm')\r\n        : format(_dt(dt), 'YYYY/MM/dd hh:mm')\r\n}\r\n\r\n/*后端时间格式化*/\r\nexport const fmtDt = function (dt, fmt = 'yyyy-MM-dd hh:mm:ss') {\r\n    if (dt.indexOf('Date') > -1) {\r\n        var d = new Date(dt.slice(6, -7) * 1)\r\n        return format(d, fmt)\r\n    } else if (dt.indexOf('T') > -1) {\r\n        return format(dt.split('T').join(' '), fmt)\r\n    } else {\r\n        return format(dt, fmt)\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 倒计时\r\n * @param {*} targetDate ：目标日期\r\n * @param {*} cb：倒计时结束的回调\r\n */\r\nexport const countTime = function (targetDate, cb) {\r\n    let timer = setInterval(function () {\r\n        let targetStemp = new Date(targetDate.replace(/-/g, '/')).getTime() / 1000\r\n        let nowStemp = Date.parse(new Date()) / 1000\r\n        let t = targetStemp - nowStemp\r\n        if (t >= 0) {\r\n            let d = Math.floor(t / 86400)\r\n            let h = padStart(Math.floor((t % 86400) / 3600), 2, 0)\r\n            let m = padStart(Math.floor((t % 86400) % 3600) / 60, 2, 0)\r\n            let s = padStart(t % 60, 2, 0)\r\n            cb &&\r\n                cb({\r\n                    date: d,\r\n                    hour: h,\r\n                    minute: m,\r\n                    second: s\r\n                })\r\n        } else {\r\n            clearInterval(timer)\r\n            timer = null\r\n            cb && cb()\r\n            return false\r\n        }\r\n    }, 1000)\r\n}\r\n","/*\r\n * @Description: Rdate 日期核心方法\r\n * @Author: shufei\r\n * @Date: 2020-10-08 09:38:52\r\n * @LastEditTime: 2020-11-13 11:56:03\r\n * @LastEditors: shufei\r\n */\r\n\r\nimport { _initFormat, padStart } from './helper'\r\nimport { when, previwWeekByDate } from './date'\r\n\r\n/**\r\n * ※  Rdate 核心方法\r\n * @param  {...any} args :形参，生效的最多为前两个参数\r\n * 1个参数情况：\r\n *      1.1 参数为格式，则默认格式化当前时间\r\n *      1.2 参数为时间戳或字符串时间，则使用默认格式去格式化化给定的 时间戳或字符串时间\r\n * 2个参数情况：\r\n * 第一个参数表示格式化的日期，可以是时间戳或字符串时间\r\n * 第二个参数表示格式\r\n */\r\nexport const format = function (...args) {\r\n    let dt = _initFormat(args, 'yyyy-MM-dd hh:mm:ss').dt\r\n    let ft = _initFormat(args, 'yyyy-MM-dd hh:mm:ss').format\r\n    let ret = {\r\n        Y: String(dt.getFullYear()),\r\n        y: String(dt.getFullYear()),\r\n        M: padStart(dt.getMonth() + 1, 2, 0),\r\n        d: padStart(dt.getDate(), 2, 0),\r\n        h: padStart(dt.getHours(), 2, 0),\r\n        H: padStart(dt.getHours(), 2, 0),\r\n        m: padStart(dt.getMinutes(), 2, 0),\r\n        s: padStart(dt.getSeconds(), 2, 0),\r\n        W: previwWeekByDate(dt, '周'),\r\n        w: previwWeekByDate(dt),\r\n        t: when(dt)\r\n    }\r\n    ft = ft.replace(/\\[([^\\]]+)]|y{1,4}|Y{1,4}|M{1,2}|d{1,2}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|t|w|W|S/g, function (b) {\r\n        // 匹配中的首字符\r\n        let k = b.charAt(0)\r\n        // 匹配到的字符串长度\r\n        let len = b.length\r\n        if (b.includes('[')) {\r\n            // 如果是模板字符串，去除首尾返回\r\n            return b.slice(1, -1)\r\n        } else if (['Y', 'y'].includes(k)) {\r\n            // 如果是年份，根据正则处理返回\r\n            return b.replace(new RegExp('((' + k + ')+)', 'g'), a => ret[k].substr(4 - a.length))\r\n        } else {\r\n            // 如果匹配字符串长度为1并且非星期（W、w）和 非时辰（t）转成实际数字 其他一律原样返回\r\n            return len == 1 && !['W', 'w', 't'].includes(k) ? Number(ret[k]) : ret[k]\r\n        }\r\n    })\r\n    return ft\r\n}\r\n","/**\r\n * # 时间戳\r\n */\r\nimport { _dt } from './helper'\r\n/**\r\n * ※\r\n * 获取 （给定日期 | 当前日期） 前进（+）后退（-）n 天后的时间戳\r\n * @param { Number } n : 前进（+）后退（-）n 天后的时间戳，不传默认是0，当天\r\n * @param { String } dt : 给定日期\r\n */\r\n\r\nexport const getStamp = function (dt, n) {\r\n    let a = arguments\r\n    if (!a.length) return +new Date()\r\n    // 如果只有 一个参数,则视为对当前时间的加减\r\n    if (a.length == 1 && typeof a[0] === 'number') {\r\n        n = a[0]\r\n        dt = undefined\r\n    }\r\n    let d = _dt(dt)\r\n    d.setDate(d.getDate() + (n === undefined ? 0 : n))\r\n    return +d\r\n}\r\n\r\n/**\r\n * ※\r\n * 获取基于 （给定日期/当前时间） 的 前一天/后一天的时间戳\r\n * @param  { String } dt : 给定日期\r\n */\r\nexport const getStampBeforAfter = function (dt) {\r\n    let d = _dt(dt),\r\n        b\r\n    d.setDate(d.getDate() - 1)\r\n    b = +d\r\n    d.setDate(d.getDate() + 2)\r\n    return { before: b, after: +d }\r\n}\r\n\r\n/**\r\n * ※\r\n * 定日期/今日 起止日期时间（00：00：00 ~ 23：59：59）\r\n * @param { String } dt: 给定日期\r\n */\r\nexport const getStampStartEnd = function (dt) {\r\n    let d = _dt(dt)\r\n    return {\r\n        start: +new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0),\r\n        end: +new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59, 59)\r\n    }\r\n}\r\n\r\n/**\r\n * ※\r\n * 获取两个时间戳相差多少天\r\n * @param { Number } stamp1 ：时间戳\r\n * @param { Number } stamp2 ：时间戳\r\n */\r\nexport const getDaysByStamp = function (stamp1, stamp2) {\r\n    return parseInt(Math.abs(stamp1 - stamp2) / 86400000)\r\n}\r\n","/*\r\n * @Description: 日期时间集成类 Rdate\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:01:37\r\n * @LastEditors: shufei\r\n */\r\n\r\nimport { format } from './lib/core' //核心方法\r\nimport * as common from './lib/date' //常用方法\r\nimport * as verify from './lib/verify' //时间戳\r\nimport * as stamp from './lib/stamp' //验证\r\nfunction Rdate() {\r\n    if (!(this instanceof Rdate)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRdate.prototype = {\r\n    /** 核心方法*/\r\n    format,\r\n    /** 常用方法*/\r\n    ...common,\r\n    /** 验证方法*/\r\n    ...verify,\r\n    /** 时间戳方法*/\r\n    ...stamp\r\n}\r\nexport default new Rdate()\r\n","/*\r\n * @Description: Obejct 相关的工具函数\r\n * @Author: shufei\r\n * @Date: 2020-11-11 19:20:15\r\n * @LastEditTime: 2020-12-16 11:40:45\r\n * @LastEditors: shufei\r\n */\r\n\r\n/**\r\n * 合并两个对象\r\n * @param { Object } f : 需要合并的第一个对象\r\n * @param { Object } s ：需要合并的第二个对象\r\n * @return Object 合并后的对象\r\n */\r\nexport const merge = function (f, s) {\r\n    for (var i in s) {\r\n        f[i] = f[i] && f[i].toString() === '[object Object]' ? merge(f[i], s[i]) : (f[i] = s[i])\r\n    }\r\n    return f\r\n}\r\n/**\r\n * 深度合并多个对象\r\n * @param  {Object} a\r\n */\r\nexport const mergeMultiple = function (...a) {\r\n    //参数长度\r\n    let l = a.length\r\n    //没有传参 抛出错误\r\n    if (l == 0) throw Error('Pass at least one object parameter')\r\n    //参数传一个 直接返回这个\r\n    if (l == 1) return a[0]\r\n    //参数传一个 直接返回合并后的对象\r\n    if (l == 2) return merge(a[0], a[1])\r\n    //参数大于2，则执行递归合并，并在长度为2时，返回合并对象\r\n    while (a.length > 2) {\r\n        a.splice(0, 2, merge(a[0], a[1]))\r\n        if (a.length == 2) return merge(a[0], a[1])\r\n    }\r\n}\r\n\r\n/**\r\n * 在两个变量之间进行深度比较以确定它们是否全等。\r\n * @param {Object} a\r\n * @param {Object} b\r\n */\r\nexport const equals = function (a, b) {\r\n    if (a === b) return true\r\n    if (a instanceof Date && b instanceof Date) return a.getTime() === b.getTime()\r\n    if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) return a === b\r\n    if (a.prototype !== b.prototype) return false\r\n    let keys = Object.keys(a)\r\n    if (keys.length !== Object.keys(b).length) return false\r\n    return keys.every(k => equals(a[k], b[k]))\r\n}\r\n\r\n/**\r\n * 浅拷贝\r\n * @param {*} p\r\n */\r\nexport const copy = function (p) {\r\n    var o = {}\r\n    for (var i in p) {\r\n        o[i] = p[i]\r\n    }\r\n    return o\r\n}\r\n\r\n/**\r\n * 递归深拷贝\r\n */\r\nexport const deepCopy = function (p, c) {\r\n    var c = c || {}\r\n    for (var i in p) {\r\n        if (Array.isArray(p[i]) || Object.prototype.toString.call(p[i]).slice(8, -1) === 'Object') {\r\n            deepCopy(p[i], (c[i] = Array.isArray(p[i]) ? [] : {}))\r\n        } else {\r\n            c[i] = p[i]\r\n        }\r\n    }\r\n    return c\r\n}\r\n\r\n/**\r\n * @description: 树转数组\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const treeToArr = function (json, splitFlag) {\r\n    let res = []\r\n    let carry = function (_arr, name) {\r\n        for (let i = 0; i < _arr.length; i++) {\r\n            let _name = name ? name + splitFlag + _arr[i].name : _arr[i].name\r\n            if (_arr[i].children) {\r\n                carry(_arr[i].children, _name)\r\n            } else {\r\n                if (name) {\r\n                    res.push(_name)\r\n                } else {\r\n                    res.push(_arr[i].name)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    carry([json])\r\n    return res\r\n}\r\n\r\n/**\r\n * @description: 根据条件删除数组中的值 并改变该对象\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const delObjBy = function (obj, cb) {\r\n    if (typeof cb === 'string') delete obj[cb]\r\n    for (let k in obj) {\r\n        if (typeof cb === 'function' && cb(obj[k])) {\r\n            delete obj[k]\r\n        } else if (Array.isArray(cb)) {\r\n            cb.includes(k) && delete obj[k]\r\n        }\r\n    }\r\n}\r\n","import { equals } from '../../obj/lib/core'\r\n/**\r\n * 1.\r\n * 数组并集\r\n * 多数组并集传值：[...a,...b,...c]\r\n * 已优化\r\n * @param {Array} a：数组\r\n * @param {Array} b：数组\r\n * @param {String} k：键名\r\n */\r\nexport const union = function (a, b, k) {\r\n    return a.concat(b.filter(i => (k ? !a.map(i => i[k]).includes(i[k]) : !a.includes(i))))\r\n}\r\n\r\n/**\r\n * 2.\r\n * 数组交集\r\n * 多数组交集传值：[...a,...b,...c]\r\n * 已优化\r\n * @param {Array} a：数组\r\n * @param {Array} b：数组\r\n * @param {String} k：键名\r\n */\r\nexport const intersection = function (a, b, k) {\r\n    return a.filter(t => (k ? b.map(i => i[k]).includes(t[k]) : b.includes(t)))\r\n}\r\n\r\n/**\r\n * 3.\r\n * 数组差集\r\n * 多数组差集传值：[...a,...b,...c]\r\n * 已优化\r\n * @param {Array} a：数组\r\n * @param {Array} b：数组\r\n * @param {String} k：键名\r\n */\r\nexport const except = function (a, b, k) {\r\n    return [...a, ...b].filter(i => ![a, b].every(t => (k ? t.map(i => i[k]).includes(i[k]) : t.includes(i))))\r\n}\r\n\r\n/**\r\n * 4.\r\n * 数组求和\r\n * 多数组求和传值：[...a,...b,...c]\r\n * 已优化\r\n * @param {Array} a：数组\r\n * @param {String} k：键名\r\n */\r\nexport const sum = function (a, k) {\r\n    return a.reduce((p, c) => p + (k ? c[k] || 0 : c), 0)\r\n}\r\n\r\n/**\r\n * 5.\r\n * 数组去重\r\n * 多数组去重传值：[...a,...b,...c]\r\n * 已优化\r\n * @param {Array} a：数组\r\n * @param {String} k：键名\r\n */\r\nexport const unique = function (a, k) {\r\n    return k ? a.reduce((p, c) => (p.map(i => i[k]).includes(c[k]) ? p : [...p, c]), []) : [...new Set(a)]\r\n}\r\n\r\n/**\r\n * 6.\r\n * 数组转树\r\n * @param {Array} arr ：json数组\r\n * @param {String} id ：每项的id\r\n * @param {String} link ：pid的名字\r\n */\r\nexport const arrayToTree = function (arr, id = null, link = 'pid') {\r\n    return arr.filter(i => i[link] === id).map(i => ({ ...i, children: arrayToTree(arr, i.id, link) }))\r\n}\r\n\r\n/**\r\n * 7.\r\n * 指定数组中获取随机数(1位)\r\n * 不限json数组\r\n * @param {Array} arr :数组\r\n */\r\nexport const sample = function (arr) {\r\n    return arr[Math.floor(Math.random() * arr.length)]\r\n}\r\n\r\n/**\r\n * 8.\r\n * 生成两数之间指定长度的随机数组(重复)\r\n * @param {Number} min ：起始值\r\n * @param {Number} max ：结束值\r\n * @param {Number} n ：指定长度\r\n */\r\nexport const randomArrayInRangeRepeat = function (min, max, n = 1) {\r\n    return Array.from({ length: n }, () => Math.floor(Math.random() * (max - min + 1)) + min)\r\n}\r\n\r\n/**\r\n * 9.\r\n * 生成两数之间指定长度的随机数组(不重复)\r\n * @param {Number} start : 起始值\r\n * @param {Number} stop : 结束值\r\n * @param {Number} len : 随机个数\r\n */\r\nexport const randomArrayInRange = function (start, end, len = 1) {\r\n    // 区间数组\r\n    let arr = Array(end - start + 1)\r\n        .fill(0)\r\n        .map((_, i) => start + i)\r\n    let n = len > arr.length ? arr.length : len\r\n    let ret = []\r\n    while (ret.length != n) {\r\n        let random = arr[Math.floor(Math.random() * arr.length)]\r\n        !ret.includes(random) && ret.push(random)\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * 10.\r\n * 序列生成器(指定范围)\r\n * @param {Number} start : 起始值\r\n * @param {Number} stop : 结束值\r\n * @param {Number} step : 步长\r\n */\r\nexport const range = function (start, stop, step) {\r\n    return Array.from({ length: (stop - start) / step + 1 }, (_, i) => start + i * step)\r\n}\r\n\r\n/**\r\n * 11.\r\n * 指定深度扁平化数组\r\n * @param {Array} arr :扁平化的数组\r\n * @param {Number} depth ：扁平化的层级\r\n */\r\nexport const flatten = function (arr, depth = 1) {\r\n    return arr.reduce((a, v) => a.concat(depth > 1 && Array.isArray(v) ? flatten(v, depth - 1) : v), [])\r\n}\r\n\r\n/**\r\n * 12.\r\n * 去除数组中的无效/无用值\r\n * @param {Array} arr : 数组\r\n */\r\nexport const compact = arr => arr.filter(Boolean)\r\n\r\n/**\r\n * 13.\r\n *检测数值出现次数\r\n * @param {Array} a：数组\r\n * @param {String} k：键名\r\n * @param {any} v：键值\r\n */\r\nexport const countOccurrences = (a, k, v) => a.reduce((p, c) => ((v ? c[k] === v : c === k) ? p + 1 : p), 0)\r\n\r\n/**\r\n * 14.\r\n * 数组平均数\r\n * @param {Array} arr:数组\r\n * @param {Function} fn:函数\r\n */\r\nexport const average = function (arr, fn) {\r\n    let isNumber = [...arguments].every(i => !isNaN(parseFloat(i)) && isFinite(i))\r\n    let count = isNumber ? arguments.length : arr.length\r\n    return (isNumber ? [...arguments] : fn ? arr.map(typeof fn === 'function' ? fn : val => val[fn]) : arr).reduce((acc, val) => acc + val * 1, 0) / count\r\n}\r\n\r\n/**\r\n * 15.\r\n * 数组转 CSV 格式（带空格的字符串）\r\n * @param {Array} arr:数组\r\n * @param {String} delimiter:分隔符\r\n */\r\nexport const arrayToCSV = (arr, delimiter = ',') => arr.map(v => v.map(x => `\"${x}\"`).join(delimiter)).join('\\n')\r\n\r\n/**\r\n * 16.\r\n * 返回数组中某值的所有索引\r\n * @param {Array} a:数组\r\n * @param {String} k: 键名\r\n * @param {String} v: 键值\r\n */\r\nexport const indexOfAll = (a, k, v) => a.reduce((p, c, i) => ((v ? c[k] === v : c === k) ? [...p, i] : p), [])\r\n\r\n/**\r\n * @description: 一维数组转二维数组 (分组)\r\n * @param {Array} arr:数组\r\n * @param {String | Number} num: 平分基数\r\n * @return {*}\r\n */\r\nexport const group = function (arr, num) {\r\n    return Array(Math.ceil(arr.length / num))\r\n        .fill(0)\r\n        .reduce((p, _, i) => (p.push(arr.slice(i * num, (i + 1) * num)), p), [])\r\n}\r\n\r\n/**\r\n * @description: 交换数组中任一两个值的位置\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const changePostion = function (arr, oldIndex, newIndex) {\r\n    arr.splice(oldIndex, 1, arr.splice(newIndex, 1, arr[oldIndex])[0])\r\n}\r\n\r\n/**\r\n * @description: 交换数组中任一两个值的位置\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const change = function (arr, oldIndex, newIndex) {\r\n    arr[newIndex] = [arr[oldIndex], (arr[oldIndex] = arr[newIndex])][0]\r\n}\r\n/**\r\n * @description: 指定数组中某个索引的值 取出来，再插入到数组的任一位置\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const inset = function (arr, oldIndex, newIndex) {\r\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0])\r\n}\r\n\r\n/**\r\n * @description: 一维数组分类归档 根据某个key\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const categoryArchive = function (arr, key) {\r\n    return Array.from(new Set(arr.map(i => i[key]))).reduce((p, c) => (p.push(arr.filter(i => i[key] === c)), p), [])\r\n}\r\n\r\n/**\r\n * @description: 数组内是否有重复值\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const isRepeat = function (arr) {\r\n    try {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            for (let k = i + 1; k < arr.length; k++) {\r\n                if (equals(arr[i], arr[k])) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    } catch (e) {\r\n        return arr.length !== unique(arr).length\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 根据条件删除数组中的值 并改变该数组\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const delBy = function (arr, cb) {\r\n    for (let i = arr.length - 1; i >= 0; i--) {\r\n        if (typeof cb === 'function') {\r\n            cb(arr[i]) && arr.splice(i, 1)\r\n        } else if (Array.isArray(cb)) {\r\n            cb.indexOf(arr[i]) > -1 && arr.splice(i, 1)\r\n        } else if (arr[i] === cb) {\r\n            arr.splice(i, 1)\r\n        } else if (Object.prototype.toString.call(cb).slice(8, -1) === 'Object') {\r\n            let item = arr[i]\r\n            for (let k in cb) {\r\n                if (Array.isArray(cb[k])) {\r\n                    if (cb[k].indexOf(item[k]) > -1) {\r\n                        arr.splice(i, 1)\r\n                    }\r\n                } else {\r\n                    if (cb[k] === item[k]) {\r\n                        arr.splice(i, 1)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Description: array  (数组) 构造类 Rarr\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 08:50:02\r\n * @LastEditors: shufei\r\n */\r\nimport * as input from './lib/core'\r\nfunction Rarr() {\r\n    if (!(this instanceof Rarr)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRarr.prototype = input\r\nexport default new Rarr()\r\n","/**\r\n * 获取当期URL地址\r\n */\r\nexport const getCurUrl = function () {\r\n    return window.location.href\r\n}\r\n\r\n/**\r\n * 获取URL格式化后的对象\r\n * @param {String} url :格式的url\r\n */\r\nexport const formatUrl = function (url = window.location.href) {\r\n    return new URL(url)\r\n}\r\n\r\n/**\r\n * 获取url查询参数\r\n * @param {String} url ：url地址\r\n */\r\nexport const getQuery = function (url = window.location.href) {\r\n    try {\r\n        return url.includes('?')\r\n            ? url\r\n                  .split('?')[1]\r\n                  .match(/([^&=]*)=([^&]*)/g)\r\n                  .reduce((p, c) => ((p[c.split('=')[0]] = decodeURIComponent(c.split('=')[1])), p), {})\r\n            : {}\r\n    } catch (e) {\r\n        return {}\r\n    }\r\n}\r\n\r\n/**\r\n * 获取url查询参数根据key\r\n * @param {Array} keys ：\r\n */\r\nexport const getQueryByKeys = function (keys = []) {\r\n    let o = getQuery()\r\n    if (!keys.length) return o\r\n    return keys.reduce((p, c) => ((p[c] = o[c]), p), {})\r\n}\r\n\r\n/**\r\n * url参数序列化\r\n * @param { String } baseURL ：url地址\r\n * @param { Object } params  ：参数对象\r\n * @return 参数序列化后的字符串\r\n */\r\nexport const urlSerialize = function (baseURL, params) {\r\n    return Object.keys(params).reduce((p, c) => (p += (p === baseURL ? '?' : '&') + `${c}=${encodeURIComponent(params[c])}`), baseURL)\r\n}\r\n\r\n/**\r\n * url参数序列化\r\n * @param { String } baseURL ：url地址\r\n * @param { Object } params  ：参数对象\r\n * @return 参数序列化后的字符串\r\n */\r\nexport const paramSerialize = function (params = {}, baseURL = window.location.href, isNeed = false) {\r\n    let baseURLParam = isNeed ? { ...getQuery(baseURL), ...params } : params\r\n    let baseUrl = baseURL.split('?')[0]\r\n    return urlSerialize(baseUrl, baseURLParam)\r\n}\r\n\r\n/**\r\n * @description: 纯参数序列化\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const serialize = function (params = {}) {\r\n    return Object.keys(params)\r\n        .reduce((p, c) => (p += `&${c}=${encodeURIComponent(params[c])}`), '')\r\n        .slice(1)\r\n}\r\n\r\n/**\r\n * 企业微信授权url格式方法\r\n * 业务专属方法\r\n * @param {String} url：企业微信授权回来的地址\r\n */\r\nexport const wxAuthUrlFmt = function (url) {\r\n    // 匹配 url中都 从开始? 到#结束都字符串\r\n    let gap = url.match(/\\?(\\S*)#/)\r\n    // 如果能够匹配\r\n    if (gap && gap.length) {\r\n        // 获取?和#之间都字符串\r\n        gap = gap[0].slice(1, -1)\r\n        // url中?到#前一个都所有字符串被空字符串替换掉 获取到url前半部分\r\n        url = url.replace('?' + gap, '')\r\n        // 匹配gap中的参数\r\n        let param = gap.match(/([^&=]*)=([^&]*)/g)\r\n        // 如果参数数组有值\r\n        if (param && param.length) {\r\n            // 参数数组过滤掉 值中存在=号的key\r\n            param = param.filter(i => i.split('=').length == 2)\r\n            // 如果前半部分存在?,就进行检测参数\r\n            if (url.includes('?')) {\r\n                let ret = [...new Set(param)].join('&') + '&' + url.split('?')[1]\r\n                param = ret.match(/([^&=]*)=([^&]*)/g).filter(i => i.split('=').length == 2)\r\n            }\r\n            // 返回\r\n            return url.split('?')[0] + '?' + [...new Set(param)].join('&')\r\n        } else {\r\n            return url + '&' + gap\r\n        }\r\n    } else {\r\n        return url\r\n    }\r\n}\r\n\r\n/**\r\n * url模板 参数格式化(get请求url模板)\r\n *\r\n *  @param {String}  URL: 模板路径，例：'/uap/msg/announcementRecord/{sysId}/{tenantId}/{userId}' 或 '/uap/msg/announcementRecord'\r\n *  @param {Object}  params: 传入的参数，包含路径参数 或 不包含\r\n *  @param {Boolean} flag：是否拼接路径和查询参数\r\n *\r\n *  PS：flag为true时，一定是GET请求，GET请求才会拼接参数到URL后面\r\n */\r\n\r\nexport const urlTmtFmt = function (URL, params) {\r\n    let url = /\\{(\\w+)\\}/g.test(URL)\r\n        ? URL.replace(/\\{(\\w+)\\}/g, (_, b) => {\r\n              let tmp = params[b]\r\n              delete params[b]\r\n              return tmp\r\n          })\r\n        : URL\r\n    return Object.keys(params).reduce((pre, cur) => (pre += (pre === url ? '?' : '&') + `${cur}=${params[cur]}`), url)\r\n}\r\n\r\n/**\r\n * 删除url上指定的参数 返回删除后的url，如果没有原封不动的返回原来的url即可\r\n * @param {String} keyName : 需要删除的入了身上的参数key\r\n * @param {String} url : url\r\n */\r\nexport const urlParamDelByKey = function (keyName, url = location.href) {\r\n    // url 字符串中没有 匹配到这个 keyname 直接返回 ||如果没有问号 直接返回\r\n    if (url.indexOf(keyName) === -1 || url.indexOf('?') === -1) return url\r\n    let parseStr = url.split('?')[1]\r\n    let arr = parseStr.split('&')\r\n    let targetIndex = arr.findIndex(item => item.split('=')[0] === keyName)\r\n    if (targetIndex === -1) return url\r\n    arr.splice(targetIndex, 1)\r\n    return url.split('?')[0] + (arr.length ? '?' + arr.join('&') : '')\r\n}\r\n\r\n/**\r\n *\r\n * @param {Object} opt : 参数对象\r\n * @param {String} url : url\r\n */\r\nexport const urlParamAdd = function (opt = {}, url = window.location.href) {\r\n    let keyArr = Object.keys(opt)\r\n    if (!keyArr.length) return url\r\n    // 1. 对url身上没有任何参数的url 2. 对url身上已经有参数的url\r\n    if (url.indexOf('?') === -1) {\r\n        return keyArr.reduce((pre, cur) => (pre += (pre === url ? '?' : '&') + `${cur}=${opt[cur]}`), url)\r\n    } else {\r\n        var baseUrl = url.split('?')[0]\r\n        var param = Object.assign(getQuery(url), opt)\r\n        // 获取 参数 检查是否已存在相同key，有则覆盖\r\n        return Object.keys(param).reduce((pre, cur) => (pre += (pre === baseUrl ? '?' : '&') + `${cur}=${param[cur]}`), baseUrl)\r\n    }\r\n}\r\n/**\r\n * url地址校验\r\n * @param {String} url\r\n */\r\nexport const isUrl = function (url = window.location.href) {\r\n    return !!url.match(/(?:http|https|mailto|ftp|tel)\\:\\/\\/[^\\u4e00-\\u9fa5\\s<>]*/g)\r\n}\r\n\r\n/**\r\n *获取url查询参数\r\n * @param { String } url ：查询的url\r\n */\r\nexport const getUrlParams = function (url) {\r\n    var url = url || location.href\r\n    var res = {},\r\n        url = url\r\n    //如果url里面有?\r\n    if (url.indexOf('?') != -1) {\r\n        //如果url后面有 # 就去掉\r\n        if (url.indexOf('#') != -1) url = url.slice(0, url.length - 1)\r\n        //获取 key / value 组合的 数组\r\n        var data = url.split('?')[1].split('&')\r\n        //遍历这个数组\r\n        for (var i = 0; i < data.length; i++) {\r\n            //分离每一项成数组 [key,value]\r\n            var list = data[i].split('=')\r\n            //res继承每一项的 key和value\r\n            res[list[0]] = decodeURI(list[1])\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\n/**\r\n *获取url查询参数\r\n * @param { String } url ：查询的url\r\n */\r\nexport const getUrlParams2 = function (url) {\r\n    var url = url || location.href\r\n    var ret = {}\r\n    if (url.indexOf('?') == -1) {\r\n        return ret\r\n    }\r\n    var paramStr = url.split('?')[1]\r\n    var paramArr = paramStr.split('&')\r\n    for (var i = 0, n = paramArr.length; i < n; i++) {\r\n        var item = paramArr[i].split('=')\r\n        ret[item[0]] = decodeURI(item[1])\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * HTTP 跳转 HTTPS\r\n */\r\nexport const httpsRedirect = function () {\r\n    if (location.protocol !== 'https:') location.replace('https://' + location.href.split('//')[1])\r\n}\r\n\r\n/**\r\n * @description: 获取url的域名URL\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const getDomainURI = function (e) {\r\n    var t = /(https|http):\\/\\/([^\\/]+)\\//i,\r\n        n = e.match(t)\r\n    return n ? n[0] : ''\r\n}\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:58:53\r\n * @LastEditors: shufei\r\n */\r\n/**\r\n * Rurl\r\n * URL 类\r\n * 均为URL相关信息获取\r\n */\r\n\r\nimport * as url from './lib/core'\r\n\r\nfunction Rurl() {\r\n    if (!(this instanceof Rurl)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRurl.prototype = url\r\nexport default new Rurl()\r\n","/**\r\n * 四舍五入到指定位数\r\n * @param {Number} n:小数\r\n * @param {Number} decimals ：四舍五入到指定位数\r\n */\r\nexport const round = function (n, decimals) {\r\n    if (decimals === undefined) return n\r\n    return Number(Math.round(n + 'e' + (decimals || 0)) + 'e-' + (decimals || 0))\r\n}\r\n/**\r\n * 计算方法 calc\r\n * @param { number } type ：0 加  1 减 2 乘 3 除\r\n * @param { String | Number } a ：计算数a\r\n * @param { String | Number } b ：计算数b\r\n * @param { Number } digit  ：结果保留的位数\r\n * @return Number | String\r\n */\r\nconst calc = function (type, a, b, digit) {\r\n    let r1, r2\r\n    try {\r\n        r1 = a.toString().split('.')[1].length\r\n    } catch (e) {\r\n        r1 = 0\r\n    }\r\n    try {\r\n        r2 = b.toString().split('.')[1].length\r\n    } catch (e) {\r\n        r2 = 0\r\n    }\r\n    let maxLen = Math.pow(10, Math.max(r1, r2))\r\n    let tyeps = [\r\n        round((Math.round(maxLen * a) + Math.round(maxLen * b)) / maxLen, digit), //加\r\n        round((Math.round(maxLen * a) - Math.round(maxLen * b)) / maxLen, digit), //减\r\n        round((Math.round(maxLen * a) * Math.round(maxLen * b)) / (maxLen * maxLen), digit), //乘\r\n        round(Math.round(maxLen * a) / Math.round(maxLen * b), digit) //除\r\n    ]\r\n    let str = String(round(tyeps[type], digit || 0))\r\n    if (digit) {\r\n        if (str.includes('.')) return str.split('.')[0] + '.' + str.split('.')[1].padEnd(digit, 0)\r\n        return (str + '.').padEnd((str + '.').length + digit, 0)\r\n    } else {\r\n        return tyeps[type]\r\n    }\r\n}\r\n\r\n/**\r\n * 两数相加\r\n * @param {*} a :加数\r\n * @param {*} b ：被加数\r\n * @param {*} digit ：结果保留位数\r\n */\r\nexport const plus = function (a, b, digit) {\r\n    return calc(0, a, b, digit)\r\n}\r\n\r\n/**\r\n * 多数相加\r\n * @param {Number | String} arr:需要累乘的数的数组\r\n * @param {Number} len ：结果保留位数\r\n */\r\nexport const plusMore = function (arr = [], len) {\r\n    if (!arr.length) return 0\r\n    if (arr.length == 1) return plus(arr[0], 0, len)\r\n    //参数传一个 直接返回合并后的对象\r\n    if (arr.length == 2) return plus(arr[0], arr[1], len)\r\n    //参数大于2，则执行递归合并，并在长度为2时，返回合并对象\r\n    while (arr.length > 2) {\r\n        arr.splice(0, 2, plus(arr[0], arr[1]))\r\n        if (arr.length == 2) return plus(arr[0], arr[1], len)\r\n    }\r\n}\r\n\r\n/**\r\n * 两数相减\r\n * @param {*} a :减数\r\n * @param {*} b ：被减数\r\n * @param {*} digit ：结果保留位数\r\n */\r\nexport const minus = function (a, b, digit) {\r\n    return calc(1, a, b, digit)\r\n}\r\n\r\n/**\r\n * 多数相减\r\n * @param {Number | String} arr:需要累减的数的数组\r\n * @param {Number} len ：结果保留位数\r\n */\r\nexport const minusMore = function (arr = [], len) {\r\n    if (!arr.length) return 0\r\n    if (arr.length == 1) return minus(arr[0], 0, len)\r\n    //参数传一个 直接返回合并后的对象\r\n    if (arr.length == 2) return minus(arr[0], arr[1], len)\r\n    //参数大于2，则执行递归合并，并在长度为2时，返回合并对象\r\n    while (arr.length > 2) {\r\n        arr.splice(0, 2, minus(arr[0], arr[1]))\r\n        if (arr.length == 2) return minus(arr[0], arr[1], len)\r\n    }\r\n}\r\n\r\n/**\r\n * 两数相乘\r\n * @param {*} a :乘数\r\n * @param {*} b ：被乘数\r\n * @param {*} digit ：结果保留位数\r\n */\r\nexport const multiply = function (a, b, digit) {\r\n    return calc(2, a, b, digit)\r\n}\r\n\r\n/**\r\n * 多数相乘\r\n * @param {Number | String} arr:需要累乘的数的数组\r\n * @param {Number} len ：结果保留位数\r\n */\r\nexport const multiplyMore = function (arr = [], len) {\r\n    if (!arr.length) return 0\r\n    if (arr.length == 1) return multiply(arr[0], 1, len)\r\n    //参数传一个 直接返回合并后的对象\r\n    if (arr.length == 2) return multiply(arr[0], arr[1], len)\r\n    //参数大于2，则执行递归合并，并在长度为2时，返回合并对象\r\n    while (arr.length > 2) {\r\n        arr.splice(0, 2, multiply(arr[0], arr[1]))\r\n        if (arr.length == 2) return multiply(arr[0], arr[1], len)\r\n    }\r\n}\r\n\r\n/**\r\n * 两数相除\r\n * @param {*} a :除数\r\n * @param {*} b ：被除数\r\n * @param {*} digit ：结果保留位数\r\n */\r\nexport const devide = function (a, b, digit) {\r\n    return calc(3, a, b, digit)\r\n}\r\n/**\r\n * 多数相除\r\n * @param {Number | String} arr:需要累减的数的数组\r\n * @param {Number} len ：结果保留位数\r\n */\r\nexport const devideMore = function (arr = [], len) {\r\n    if (!arr.length) return 0\r\n    if (arr.length == 1) return devide(arr[0], 0, len)\r\n    //参数传一个 直接返回合并后的对象\r\n    if (arr.length == 2) return devide(arr[0], arr[1], len)\r\n    //参数大于2，则执行递归合并，并在长度为2时，返回合并对象\r\n    while (arr.length > 2) {\r\n        arr.splice(0, 2, devide(arr[0], arr[1]))\r\n        if (arr.length == 2) return devide(arr[0], arr[1], len)\r\n    }\r\n}\r\n\r\n/**\r\n * 判断是否是有效数字 不包含NaN\r\n * 是否有效数字：排除 NaN Infinity，数字字符串 或是 数字，都为有效数字\r\n * @param { String | Number } n ：\r\n */\r\nexport const isNum = function (n) {\r\n    return typeof n == 'symbol' ? false : !isNaN(parseFloat(n)) && isFinite(n)\r\n}\r\n\r\n/**\r\n * 数组纵向统计和\r\n * @param {Array}} arr\r\n */\r\nexport const longitudinalStatistics = function (arr) {\r\n    let r = new Array(arr[0].length).toString().split(',').fill(0)\r\n    for (let i = 0; i < arr.length; i++) {\r\n        for (let j = 0; j < arr[i].length; j++) {\r\n            resArr[j] += arr[i][j]\r\n        }\r\n    }\r\n    return resArr\r\n}\r\n\r\n/**\r\n * 横向计算数组的和\r\n * @param  {...any} arr\r\n */\r\nexport const horizontalStatistics = function (...arr) {\r\n    return [...arr].reduce((acc, val) => acc + val, 0)\r\n}\r\n\r\n/**\r\n * 数字超出99 变99+\r\n * @param {Number} n:\r\n * @param {Boolean} isShow ：为0是否显示0\r\n */\r\nexport const previeNum = function (n, isShow) {\r\n    return n === undefined ? '' : n == 0 ? (isShow ? '0' : '') : n > 99 ? '99+' : n\r\n}\r\n/**\r\n * 数字处理函数\r\n * @param { String | Number } val : 有效数数字，（字符串类型可以包含前缀，'￥11'、'¥11'）\r\n * @param { Number } len : 小数部分四舍五入保留到的位数\r\n * @param { Boolean } isThousands : 整数部分是否进行千分位,默认值 false\r\n * @param { Boolean } isClearPrefix ：是否清除前缀，默认不传则是 auto 模式（自适应，有就渲染，没有就不渲染）,默认值 false\r\n * @param { Boolean } iscalc ：是否在计算结果后进行去除补位处理,默认值 false\r\n */\r\nexport const fmtAmt = function (val, len, isThousands = false, isClearPrefix = false, iscalc = false) {\r\n    // 无效值处理，，不符合传入规则的值一律返回空字符串\r\n    if (val === undefined || val == null) return ''\r\n    // 无论数字还是字符串数字，最终都转换成字符串数字\r\n    var str = val + ''\r\n    // 默认前缀 大写的人民币符合\r\n    var prefix = ''\r\n    // 如果传入的金额字符串中包含了 人民币或美元符合，则进行分离处理\r\n    if (str.indexOf('￥') > -1 || str.indexOf('¥') > -1) {\r\n        prefix = '￥'\r\n        str = str.substr(1)\r\n    }\r\n    // 进行检测str是否是有效的数字,不是有效直接返回空字符串\r\n    if (!isNum(str)) return ''\r\n    // 是否清除前缀，默认不传的话 则是auto，自适应：自身有就有，没有则没有，如果清除前缀， 则统一没有前缀，管你有无\r\n    if (isClearPrefix) prefix = ''\r\n    // 是否是小数\r\n    var isInt = str.indexOf('.') === -1\r\n    len = len === undefined ? (isInt ? 0 : str.split('.')[1].length) : len\r\n    // 整数部分\r\n    var int = len == 0 ? Math.round(str) + '' : isInt ? str.split('.')[0] : (round(str * 1 + '', len) + '').split('.')[0]\r\n    // str 四舍五入到指定位数\r\n    str = round(str * 1 + '', len) + ''\r\n    // 小数部分\r\n    var dot = len == 0 || isInt ? '' : str.split('.')[1]\r\n    dot = (dot ? dot : '').padEnd(len, 0)\r\n    let ret = (isThousands ? int.replace(/(?=(?!\\b)(\\d{3})+$)/g, ',') : int) + (dot.length ? '.' + dot : '')\r\n    ret = iscalc ? Number(ret) : ret\r\n    return prefix + ret\r\n}\r\n\r\n/**\r\n * @description: 过滤金额\r\n * @param :\r\n * @return {*}\r\n * @param {*} value 金额\r\n * @param {*} num 保留几位小数（不必传）\r\n */\r\nexport const filterMoney = function (cb) {\r\n    let { value, num } = cb()\r\n    value = value + '' || ''\r\n    num = num === undefined ? 2 : num\r\n    //后期会换成调用接口返回的数值\r\n    return value.replace(/-/g, '').slice(0, value.indexOf('.') + 1 + num)\r\n}\r\n\r\n/**\r\n * @description: 对象求和\r\n * { a:{preice:1,unit:2},b:{preice:3,unit:4}} = > sum(obj,['price','unit'])=> {price:4,unit:6}\r\n * { a:{preice:1,unit:2},b:{preice:3,unit:4}} = > sum(obj,'price')=> {price:4}\r\n * @param {Object} :obj\r\n * @param {String | Array} :key\r\n * @return {*}\r\n */\r\nexport const sum = function (obj, key) {\r\n    let ret = {}\r\n    if (typeof key === 'string') {\r\n        ret[key] = 0\r\n    } else if (Array.isArray(key)) {\r\n        ret = key.reduce((p, c) => {\r\n            p[c] = 0\r\n            return p\r\n        }, {})\r\n    }\r\n    let values = Object.values(obj)\r\n    for (let i = 0; i < values.length; i++) {\r\n        for (let k in ret) {\r\n            if (k in values[i]) {\r\n                ret[k] = plus(ret[k], Number(values[i][k]) || 0)\r\n            }\r\n        }\r\n    }\r\n    return ret\r\n}\r\n/**\r\n * @description: json数组 求和\r\n * @param {Array} :arr\r\n * @param {String | Array} :key\r\n * @return {*}\r\n */\r\nexport const arrSum = function (arr, keys, len) {\r\n    let clone = JSON.parse(JSON.stringify(arr))\r\n    let totalInfo = {}\r\n    let total = plusMore(\r\n        clone.map(item => {\r\n            return keys.reduce((p1, c1) => {\r\n                if (totalInfo[c1]) {\r\n                    totalInfo[c1] = plus(totalInfo[c1], Number(item[c1]) || 0)\r\n                } else {\r\n                    totalInfo[c1] = Number(item[c1]) || 0\r\n                }\r\n                p1 = multiply(p1, item[c1] || 0)\r\n                return p1\r\n            }, 1)\r\n        }),\r\n        len\r\n    )\r\n\r\n    return {\r\n        totalInfo,\r\n        total\r\n    }\r\n}\r\n/**\r\n * @description: 类似商品对象合计\r\n * @param {Object}:obj //\r\n * @return {object}:opt= {keys:[k1,k2],len:undefined,type:3}  // 1 加 2 减 3乘  4除\r\n */\r\n\r\nexport const objSum = function (obj, opt = {}) {\r\n    obj = JSON.parse(JSON.stringify(obj))\r\n    let res = sum(obj, opt.keys)\r\n    let result = Object.values(obj).reduce((p, c) => {\r\n        let arr = opt.keys.map(i => {\r\n            if (!opt.zero) {\r\n                if (c[i] == 0) c[i] = 1\r\n            }\r\n            return c[i]\r\n        })\r\n        let pre =\r\n            opt.type == 3\r\n                ? multiplyMore(arr, opt.len)\r\n                : opt.type == 1\r\n                ? plusMore(arr, opt.len)\r\n                : opt.type == 2\r\n                ? minusMore(arr, opt.len)\r\n                : opt.type == 4\r\n                ? devideMore(arr, opt.len)\r\n                : multiplyMore(arr, opt.len)\r\n\r\n        p = plus(p, pre)\r\n        return p\r\n    }, 0)\r\n    return {\r\n        total: fmtAmt(result, opt.len),\r\n        ...res\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 过滤统计根据 key 包含  {'111|2222|333'：{},'1311|1112|333'：{}}\r\n * @param {Object}:\r\n * @return {object}:\r\n */\r\n\r\nexport const filterSum = function (obj, str, totalKeys) {\r\n    let ret = {}\r\n    if (typeof totalKeys === 'string') {\r\n        ret[totalKeys] = 0\r\n    } else if (Array.isArray(totalKeys)) {\r\n        ret = totalKeys.reduce((p, c) => {\r\n            p[c] = 0\r\n            return p\r\n        }, {})\r\n    }\r\n    for (let k in obj) {\r\n        if (new RegExp('^' + str, 'g').test(k)) {\r\n            for (let j in ret) {\r\n                ret[j] = plus(ret[j], obj[k][j])\r\n            }\r\n        }\r\n    }\r\n    return ret\r\n}\r\n/**\r\n * @description: 百分比 1%   转数字 0.01   <=> 数字 0.01 转百分比 1%\r\n * @param  {String | Number}: str 需要互转的值\r\n * @return {*}\r\n */\r\nexport const percentNum = function (str = '') {\r\n    str += ''\r\n    if (!str.trim().length) return ''\r\n    if (isNum(str)) {\r\n        return multiply(str, 100) + '%'\r\n    } else if (typeof str === 'string' && str.includes('%') && isNum(str.slice(0, -1))) {\r\n        return devide(str.slice(0, -1), 100)\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:53:25\r\n * @LastEditors: shufei\r\n */\r\n/**\r\n * Rnum\r\n * 数字类\r\n * 使用工厂模式：接收值返回处理后的值\r\n */\r\nimport * as num from './lib/core'\r\nfunction Rnum() {\r\n    if (!(this instanceof Rnum)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRnum.prototype = num\r\nexport default new Rnum()\r\n","/*\r\n * @Description: Rstr\r\n * @Author: shufei\r\n * @Date: 2020-11-11 19:05:41\r\n * @LastEditTime: 2020-12-04 09:58:23\r\n * @LastEditors: shufei\r\n */\r\n\r\nimport * as str from './lib/core'\r\n\r\nfunction Rstr() {\r\n    if (!(this instanceof Rstr)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRstr.prototype = str\r\nexport default new Rstr()\r\n","/*\r\n * @Description: 字符串相关的工具函数\r\n * @Author: shufei\r\n * @Date: 2020-11-11 19:05:49\r\n * @LastEditTime: 2020-11-16 17:17:55\r\n * @LastEditors: shufei\r\n */\r\n\r\n/**\r\n * @description: capitalize：字符串首位大写\r\n * @param : str 需处理的字符串\r\n * @return {*}\r\n * @param {*} str\r\n */\r\nexport const capitalize = function (str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1)\r\n}\r\n\r\n/**\r\n * 寻找字符串中指定字符的所有索引位置\r\n * find all the substr positio\r\n * @param {*} str\r\n * @param {*} substr\r\n */\r\nexport const substrPosition = function (str, substr) {\r\n    let position_arr = []\r\n    let index = str.indexOf(substr)\r\n    while (index != -1) {\r\n        position_arr.push(index)\r\n        index = str.indexOf(substr, index + 1)\r\n    }\r\n    return position_arr\r\n}\r\n\r\n/**\r\n * @description: 生产GUID的方法\r\n * @param :\r\n * @return {string}:guid\r\n */\r\nexport const guid = function () {\r\n    function S4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\r\n    }\r\n    return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4()\r\n}\r\n\r\n/**\r\n * @description:删除字符串中的HTMl标签\r\n * @param :\r\n * @return {*}\r\n * @param {*} str\r\n */\r\nexport const stripHTMLTags = function (str) {\r\n    return str.replace(/<[^>]*>/g, '')\r\n}\r\n\r\n/**\r\n * 获取字html字符串中的img的地址\r\n * @param { String } s : 带img标签的html片段字符串\r\n * @return Array\r\n */\r\nexport const getImgSrc = function (s) {\r\n    let r = []\r\n    s.replace(/<img [^>]*src=['\"]([^'\"]+)[^>]*>/gi, function (_, c) {\r\n        r.push(c)\r\n    })\r\n    return r\r\n}\r\n\r\n/**\r\n * @description: 防御xss转义\r\n * @param :\r\n * @return {*}\r\n * @param {*} str\r\n */\r\nexport const escapeHTML = function (str) {\r\n    return str.replace(\r\n        /[&<>'\"]/g,\r\n        tag =>\r\n            ({\r\n                '&': '&amp;',\r\n                '<': '&lt;',\r\n                '>': '&gt;',\r\n                '\"': '&quot;'\r\n            }[tag] || tag)\r\n    )\r\n}\r\n\r\n/**\r\n * @description: 手机号码隐藏中间4位\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const phoneHidden = function (phone) {\r\n    let phoneStr = phone + ''\r\n    return phoneStr.replace(phoneStr.slice(3, -4), '******')\r\n}\r\n","/*\r\n * @Description: DOM 相关\r\n * @Author: shufei\r\n * @Date: 2020-11-11 19:15:56\r\n * @LastEditTime: 2020-12-07 14:13:37\r\n * @LastEditors: shufei\r\n */\r\n/**\r\n * @description: 绑定事件\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const bindEvent = function (obj, ev, fn) {\r\n    obj.addEventListener ? obj.addEventListener(ev, fn, false) : obj.attachEvent('on' + ev, fn)\r\n}\r\n\r\n/**\r\n * @description: 解绑事件\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const unbindEvent = function (obj, ev, fn) {\r\n    obj.removeEventListener ? obj.removeEventListener(ev, fn, false) : obj.detachEvent('on' + ev, fn)\r\n}\r\n\r\n/**\r\n * @description: 底部是否可见\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const bottomVisible = function () {\r\n    return document.documentElement.clientHeight + window.scrollY >= (document.documentElement.scrollHeight || document.documentElement.clientHeight)\r\n}\r\n\r\n/**\r\n * @description: 顺滑的滚动到顶部\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const scrollToTop = function () {\r\n    const c = document.documentElement.scrollTop || document.body.scrollTop\r\n    if (c > 0) {\r\n        window.requestAnimationFrame(scrollToTop)\r\n        window.scrollTo(0, c - c / 8)\r\n    }\r\n}\r\n/**\r\n * @description: 顺滑的滚动到当前元素\r\n * @param {Element} element\r\n */\r\nexport const smoothScroll = function (element) {\r\n    return document.querySelector(element).scrollIntoView({ behavior: 'smooth' })\r\n}\r\n/**\r\n * @description: 获取元素的滚动位置坐标\r\n * @param {Elemnt} el\r\n */\r\nexport const getScrollPosition = function (el = window) {\r\n    return {\r\n        x: el.pageXOffset !== undefined ? el.pageXOffset : el.scrollLeft,\r\n        y: el.pageYOffset !== undefined ? el.pageYOffset : el.scrollTop\r\n    }\r\n}\r\n/**\r\n * @description:防抖\r\n * @param { Function } func : 防抖的事件响应函数\r\n * @param { Number } wait ：事件响应函数执行需求的单位时间\r\n * @param { Boolean } immediate ：是否立即执行\r\n * @return 内部函数执行结果（返回的对象身上可以调用取消功能）\r\n */\r\nexport const debounce = function (func, wait, immediate) {\r\n    let timeout\r\n    let debounced = function () {\r\n        let arg = arguments\r\n        let context = this\r\n        if (timeout) clearTimeout(timeout)\r\n        if (immediate) {\r\n            let callNow = !timeout\r\n            timeout = setTimeout(function () {\r\n                timeout = null\r\n            }, wait)\r\n            if (callNow) func.apply(context, arg)\r\n        } else {\r\n            timeout = setTimeout(function () {\r\n                func.apply(context, arg)\r\n            }, wait)\r\n        }\r\n    }\r\n    debounced.cancel = function () {\r\n        clearTimeout(timeout)\r\n        timeout = null\r\n    }\r\n    return debounced\r\n}\r\n\r\n/**\r\n * @description:节流\r\n * @param { Function } func : 节流的事件响应函数\r\n * @param { Number } wait ：事件响应函数执行需求的频率时间\r\n * @param { Object } options ：配置对象，包含两个值 immediate（是否立即执行）和 trailing（最后是否还执行一次）\r\n */\r\nexport const throttle = function (func, wait, options) {\r\n    let timeout, context, args\r\n    let old = 0 //之前的时间\r\n    if (!options) options = {}\r\n    return function () {\r\n        context = this\r\n        args = arguments\r\n        // 获取当前的时间戳\r\n        let now = new Date().valueOf()\r\n        if (options.leading === false && !old) {\r\n            old = now\r\n        }\r\n        if (now - old > wait) {\r\n            // 第一次会立即执行\r\n            if (timeout) {\r\n                clearTimeout(timeout)\r\n                timeout = null\r\n            }\r\n            func.apply(context, args)\r\n            old = now\r\n        } else if (!timeout && options.trailing !== false) {\r\n            // 最后一次也会执行\r\n            timeout = setTimeout(() => {\r\n                old = new Date().valueOf()\r\n                timeout = null\r\n                func.apply(context, args)\r\n            }, wait)\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 返回指定元素的生效样式\r\n * @param {Element} el\r\n * @param {String} attr\r\n */\r\nexport const getStyle = function (el, attr) {\r\n    el = typeof el === 'string' ? document.querySelector(el) : el\r\n    if (!el) return\r\n    if (attr == 'left') {\r\n        return el.offsetLeft\r\n    } else if (attr == 'top') {\r\n        return el.offsetTop\r\n    } else if (attr == 'width') {\r\n        return el.offsetWidth\r\n    } else if (attr == 'height') {\r\n        return el.offsetHeight\r\n    } else {\r\n        return el.currentStyle ? el.currentStyle[attr] : getComputedStyle(el)[attr]\r\n    }\r\n}\r\n\r\n/**\r\n * 隐藏所有的指定标签\r\n * @param  {...any} el\r\n */\r\nexport const hide = function (...el) {\r\n    ;[...el].forEach(e => (e.style.display = 'none'))\r\n}\r\n\r\n/**\r\n * 随机十六进制颜色\r\n */\r\nexport const randomHexColorCode = function () {\r\n    let n = (Math.random() * 0xfffff * 1000000).toString(16)\r\n    return '#' + n.slice(0, 6)\r\n}\r\n\r\n/**\r\n * 获取不同类型变量的字节长度\r\n * @param {any} val\r\n */\r\nexport const size = function (val) {\r\n    return Array.isArray(val) ? val.length : val && typeof val === 'object' ? val.size || val.length || Object.keys(val).length : typeof val === 'string' ? new Blob([val]).size : 0\r\n}\r\n/**\r\n * @description:\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const bytesToSize = function (bytes) {\r\n    if (!bytes) return ''\r\n    if (bytes === 0) return '0 B'\r\n    let k = 1024\r\n    let sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\r\n    let i = Math.floor(Math.log(bytes) / Math.log(k))\r\n    let num = bytes / Math.pow(k, i)\r\n    return num.toFixed(2) + ' ' + sizes[i]\r\n}\r\n/**\r\n *  JSON 转 fromData\r\n *  @param { Object } o 需要转成formData 的对象\r\n */\r\nexport const jsonToFromData = function (o) {\r\n    let ret = Object.keys(o).reduce((p, c) => !p.append(c, o[c]) && p, new FormData())\r\n    ret.check = () => o\r\n    return ret\r\n}\r\n\r\n/**\r\n * 主动触发DOM身上存在的方法\r\n * @param {Element} Node\r\n * @param {String} EventType\r\n */\r\nexport const trigger = function (Node, EventType) {\r\n    if (EventType in Node) Node[EventType]()\r\n}\r\n\r\n/**\r\n * 主动触发自定义方法\r\n * @param {Element} node\r\n * @param {String} type\r\n */\r\nexport const fireEvent = function (node, type) {\r\n    let event = document.createEvent('Event')\r\n    event.initEvent(type, true, true)\r\n    node.dispatchEvent(event)\r\n}\r\n\r\n/**\r\n * 回到顶部\r\n * 回到顶部元素的Id\r\n * @param {String} btnId\r\n */\r\nexport const backTop = function (btnId, offset = 100) {\r\n    let btn = document.getElementById(btnId)\r\n    let d = document.documentElement\r\n    let b = document.body\r\n    window.onscroll = set\r\n    btn.style.display = 'none'\r\n    btn.onclick = function () {\r\n        btn.style.display = 'none'\r\n        window.onscroll = null\r\n        this.timer = setInterval(function () {\r\n            d.scrollTop -= Math.ceil((d.scrollTop + b.scrollTop) * 0.1)\r\n            b.scrollTop -= Math.ceil((d.scrollTop + b.scrollTop) * 0.1)\r\n            if (d.scrollTop + b.scrollTop == 0) clearInterval(btn.timer, (window.onscroll = set))\r\n        }, 10)\r\n    }\r\n    function set() {\r\n        btn.style.display = d.scrollTop + b.scrollTop > offset ? 'block' : 'none'\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 缓冲动画：left => 从左向右作缓冲动画运动 top => 从上向下作缓冲动画运动 负值可以达到4个方向的缓冲动画\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const bufferAnimation = function (el, target, direction = 'left') {\r\n    el = typeof el === 'string' ? document.querySelector(el) : el\r\n    if (!el) return\r\n    let offset = direction === 'left' ? 'offsetLeft' : 'offsetTop'\r\n    //清除历史定时器\r\n    clearInterval(el.timer)\r\n    //开启定时器\r\n    el.timer = setInterval(function () {\r\n        //获取步长 确定移动方向(正负值) 步长应该是越来越小的，缓动的算法。\r\n        var step = Math.ceil((target - el[offset]) / 10)\r\n        //到达目标位置\r\n        if (el[offset] == target) {\r\n            //清除定时器\r\n            clearInterval(el.timer)\r\n        } else {\r\n            el.style[direction === 'left' ? 'left' : 'top'] = el[offset] + step + 'px'\r\n        }\r\n    }, 30)\r\n}\r\n\r\n/**\r\n * @description: 匀速动画：\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const constantAnimation = function (el, target, direction = 'left') {\r\n    el = typeof el === 'string' ? document.querySelector(el) : el\r\n    if (!el) return\r\n    let offset = direction === 'left' ? 'offsetLeft' : 'offsetTop'\r\n    //清除历史定时器\r\n    clearInterval(el.timer)\r\n    //匀速度值\r\n    var speed = target > el[offset] ? 5 : -5\r\n    //开启定时器\r\n    el.timer = setInterval(function () {\r\n        //到达目标位置\r\n        if (el[offset] == target) {\r\n            //清除定时器\r\n            clearInterval(el.timer)\r\n        } else {\r\n            el.style[direction] = el[offset] + speed + 'px'\r\n        }\r\n    }, 30)\r\n}\r\n\r\n/**\r\n * 动态添加css文件\r\n * @param {String} cssName : css 名称 不带后缀\r\n * @param {String} prefix  ：css 前缀\r\n */\r\nexport const dynamicAddCss = function (cssName, prefix = '') {\r\n    let link = document.createElement('link')\r\n    link.setAttribute('href', prefix + cssName + '.css')\r\n    link.setAttribute('type', 'text/css')\r\n    document.getElementsByTagName('head')[0].appendChild(link)\r\n}\r\n\r\n/**\r\n * 动态添加 js文件\r\n * @param {Array} scriptUrlArr : 需求动态添加的脚本URL数组\r\n * @param {Function} callback : 回调函数\r\n */\r\nexport const dynamicAddScript = function (scriptUrlArr, callback) {\r\n    scriptUrlArr.forEach(scriptUrl => {\r\n        let script = document.createElement('script')\r\n        script.setAttribute('src', scriptUrl)\r\n        document.body.appendChild(script)\r\n    })\r\n    window.onload = function () {\r\n        callback && callback()\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 判断点击 dom 范围是否是 指定class 或是 class dom下面的孩子dom\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const contains = function (selector, subSelector) {\r\n    return document.querySelector(selector).contains(document.querySelector(subSelector))\r\n}\r\n\r\n/**\r\n * @description: 点击 指定 class dom，只要点击的是 class dom，或是 class dom下面的孩子元素，都返回该 class dom\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const clickTarget = function (target, targetClass, cb) {\r\n    let ret = null\r\n    if (target.classList && target.classList.contains(targetClass)) {\r\n        ret = target\r\n    } else {\r\n        while (target && target.classList && !target.classList.contains(targetClass)) {\r\n            target = target.parentNode\r\n            if (!target.classList) {\r\n                cb && cb()\r\n                return\r\n            }\r\n        }\r\n        ret = target\r\n    }\r\n    cb && cb(ret)\r\n}\r\n\r\n/**\r\n * @description: 获取网页被卷去的位置\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const getScrollXY = function () {\r\n    return document.body.scrollTop\r\n        ? {\r\n              x: document.body.scrollLeft,\r\n              y: document.body.scrollTop\r\n          }\r\n        : {\r\n              x: document.documentElement.scrollLeft,\r\n              y: document.documentElement.scrollTop\r\n          }\r\n}\r\n/**\r\n * 获取HTML中DOM的最高层级z-index函数\r\n */\r\nexport const getMaxZIndex = function () {\r\n    // 获取HTML中所有的DOM\r\n    let divs = document.all || document.querySelectorAll('*')\r\n    return Math.max(...[...divs].map(i => parseInt(getComputedStyle(i).zIndex) || 1))\r\n}\r\n\r\n/**\r\n * @description: 运动框架\r\n * @param :\r\n * @return {*}\r\n * @param {*} obj\r\n * @param {*} attr\r\n * @param {*} target\r\n * @param {*} time\r\n * @param {*} back\r\n */\r\nexport const move = function (obj, attr, target, time, back) {\r\n    var startTime = new Date()\r\n    var startVal = parseInt(getStyle(obj, attr))\r\n    var timer = setInterval(function () {\r\n        var nowTime = new Date()\r\n        var moveVal = parseInt(target) - startVal\r\n        var prop = (nowTime - startTime) / time\r\n        if (prop >= 1) {\r\n            prop = 1\r\n            clearInterval(timer)\r\n            if (PicIndex == PicLi.length - 1) {\r\n                PicIndexLast = 1\r\n                back && back()\r\n                objNum++\r\n                if (objNum == 5) {\r\n                    PicIndex = 1\r\n                    objNum = 0\r\n                }\r\n                prop = NaN\r\n            } else if (PicIndex == 0) {\r\n                PicIndexLast = PicLi.length - 2\r\n                back && back()\r\n                objNum++\r\n                if (objNum == 5) {\r\n                    PicIndex = PicLi.length - 2\r\n                    objNum = 0\r\n                }\r\n                prop = NaN\r\n            }\r\n        }\r\n        obj.style[attr] = prop * moveVal + startVal + 'px'\r\n    }, 20)\r\n}\r\n\r\n/**\r\n * @description: 封装方法-input框只能输入数字 输入框光标可以左右移动 可以backspace\r\n * @param :\r\n * @return {*}\r\n * @param {Element} ele\r\n */\r\nexport const onlyNumber = function (ele) {\r\n    if (ele.length === undefined) {\r\n        ele.onkeydown = function (ev) {\r\n            var oEevent = ev || event\r\n            if (oEevent.keyCode != 8 && oEevent.keyCode != 37 && oEevent.keyCode != 39 && (oEevent.keyCode < 48 || oEevent.keyCode > 57)) return false\r\n        }\r\n    } else {\r\n        for (var i = 0; i < ele.length; i++) {\r\n            ele[i].onkeydown = function (ev) {\r\n                var oEevent = ev || event\r\n                if (oEevent.keyCode != 8 && oEevent.keyCode != 37 && oEevent.keyCode != 39 && (oEevent.keyCode < 48 || oEevent.keyCode > 57)) return false\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 复制\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const copy = function (selector, cb) {\r\n    typeof selector === 'string' ? document.querySelector(selector).select() : selector.select()\r\n    document.execCommand('Copy')\r\n    cb && cb()\r\n}\r\n","import { bytesToSize } from '../../dom/lib/core.js'\r\n\r\n/**\r\n * 验证一个数据是否是纯净的对象\r\n * @param {any}} o\r\n */\r\nexport const isPureoBbject = function (o) {\r\n    return Object.prototype.toString.call(o).slice(8, -1) === 'Object'\r\n}\r\n/**\r\n * 增\r\n * 添加一个localStorge\r\n * 受参形式：① key-value，② 对象形式\r\n */\r\nexport const set = function () {\r\n    let args = [...arguments]\r\n    if (args.length == 2) {\r\n        localStorage.setItem(args[0], typeof args[1] == 'string' ? args[1] : JSON.stringify(args[1]))\r\n    } else if (args.length == 1 && isPureoBbject(args[0])) {\r\n        for (let k in args[0]) {\r\n            localStorage.setItem(k, typeof args[0][k] == 'string' ? args[0][k] : JSON.stringify(args[0][k]))\r\n        }\r\n    }\r\n}\r\n/**\r\n * 设置一个\r\n * key, value, expire\r\n * 设置多个\r\n * {},expire\r\n */\r\nexport const set1 = function (...args) {\r\n    let [a, b, c] = args\r\n    if (args.length == 1) {\r\n        if (isPureoBbject(a)) {\r\n            for (let k in args[0]) {\r\n                localStorage.setItem(k, typeof a[k] == 'string' ? a[k] : JSON.stringify(a[k]))\r\n            }\r\n        }\r\n    } else if (args.length == 2) {\r\n        if (typeof a === 'string') {\r\n            localStorage.setItem(a, typeof b === 'string' ? b : JSON.stringify(b))\r\n        } else if (isPureoBbject(a)) {\r\n            for (let k in a) {\r\n                localStorage.setItem(\r\n                    k,\r\n                    JSON.stringify({\r\n                        startTime: +new Date(), //创建并存入时间戳\r\n                        expires: b, //过期时间\r\n                        value: a[k]\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    } else if (args.length == 3) {\r\n        if (typeof a === 'string') {\r\n            localStorage.setItem(\r\n                a,\r\n                JSON.stringify({\r\n                    startTime: +new Date(), //创建并存入时间戳\r\n                    expires: c, //过期时间\r\n                    value: b\r\n                })\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 删：最终目标：本地没有该字段\r\n * @param { string } p\r\n * 受参形式：① ：key ②：[key1，key2]\r\n */\r\nexport const del = function (o) {\r\n    if (typeof o == 'string') {\r\n        localStorage.removeItem(o)\r\n    } else if (Array.isArray(o) && o.every(i => typeof i == 'string')) {\r\n        o.forEach(key => localStorage.removeItem(key))\r\n    }\r\n}\r\n\r\n/**\r\n * 改\r\n * 受参形式：①：key - value, 直接新值覆盖旧值进行修改\r\n */\r\nexport const update = function () {\r\n    let args = [...arguments]\r\n    if (args.length == 2 && typeof args[0] === 'string') {\r\n        localStorage.setItem(args[0], JSON.stringify(args[1]))\r\n    }\r\n}\r\n\r\n/**\r\n * 查看获取局部/全部信息\r\n * @param { String } keyName\r\n */\r\nexport const get = function (keyName) {\r\n    // 获取所有的本地缓存字段放到一个对象里面，\r\n    let obj = getStore()\r\n    if (!Object.keys(obj)) {\r\n        return null\r\n    } else {\r\n        return keyName === undefined ? obj : obj[keyName]\r\n    }\r\n}\r\n\r\nexport const get1 = function (key) {\r\n    let item = localStorage.getItem(key)\r\n    // 先将拿到的试着进行json转为对象的形式\r\n    try {\r\n        item = JSON.parse(item)\r\n    } catch (error) {\r\n        // eslint-disable-next-line no-self-assign\r\n        item = item\r\n    }\r\n    // 如果有startTime的值，说明设置了失效时间\r\n    if (item && item.startTime) {\r\n        // 如果大于就是过期了，如果小于或等于就还没过期\r\n        if (new Date() - item.startTime > item.expires) {\r\n            localStorage.removeItem(key)\r\n            return false\r\n        } else {\r\n            return item.value\r\n        }\r\n    } else {\r\n        return item\r\n    }\r\n}\r\n\r\n/**\r\n *  @description: 获取所有localStorage\r\n */\r\nexport const getStore = function () {\r\n    let len = localStorage.length\r\n    if (!len) return {}\r\n    let ret = {}\r\n    for (let i = 0; i < len; i++) {\r\n        let key = localStorage.key(i)\r\n        try {\r\n            ret[key] = JSON.parse(localStorage.getItem(key))\r\n        } catch (error) {\r\n            ret[key] = localStorage.getItem(key)\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * @description: 清除\r\n */\r\nexport const clear = function () {\r\n    localStorage.clear()\r\n}\r\n\r\n/**\r\n * @description: 移除\r\n */\r\nexport const remove = function () {\r\n    if (arguments.length == 1) {\r\n        if (typeof arguments[0] === 'string') {\r\n            localStorage.removeItem(arguments[0])\r\n        } else if (Array.isArray(arguments[0])) {\r\n            if (arguments[0].every(i => typeof i === 'string')) {\r\n                arguments[0].forEach(i => localStorage.removeItem(i))\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * 是否开启 localStorage 的自定义事件：通过window.addEventListener 去监听\r\n * setItemEvent\r\n * getItemEvent\r\n * removeItemEvent\r\n */\r\nexport const openEventListener = function () {\r\n    //监听自定义事件 setItemEvent\r\n    localStorage.setItem = (Orgin => {\r\n        return function (key, value) {\r\n            let setItemEvent = new CustomEvent('setItemEvent', { detail: { setKey: key, value } })\r\n            window.dispatchEvent(setItemEvent)\r\n            Orgin.call(this, key, typeof value == 'string' ? value : JSON.stringify(value))\r\n        }\r\n    })(localStorage.setItem)\r\n\r\n    //监听自定义事件 getItemEvent\r\n    localStorage.getItem = (Orgin => {\r\n        return function (key) {\r\n            let result = JSON.parse(Orgin.call(this, key))\r\n            let getItemEvent = new CustomEvent('getItemEvent', { detail: { getKey: key, value: result } })\r\n            window.dispatchEvent(getItemEvent)\r\n            return result\r\n        }\r\n    })(localStorage.getItem)\r\n\r\n    //监听自定义事件 removeItemEvent\r\n    localStorage.removeItem = (Orgin => {\r\n        return function (key) {\r\n            let removeItemEvent = new CustomEvent('removeItemEvent', { detail: { removeKey: key } })\r\n            window.dispatchEvent(removeItemEvent)\r\n            Orgin.call(this, key)\r\n        }\r\n    })(localStorage.removeItem)\r\n}\r\n\r\n/**\r\n * 是否开启 localStorage 的自定义事件 setItemEvent：通过window.addEventListener 去监听\r\n * setItemEvent\r\n */\r\nexport const openSetItemEvent = function () {\r\n    //监听自定义事件 setItemEvent\r\n    localStorage.setItem = (Orgin => {\r\n        return function (key, value) {\r\n            let setItemEvent = new CustomEvent('setItemEvent', { detail: { setKey: key, value } })\r\n            window.dispatchEvent(setItemEvent)\r\n            Orgin.call(this, key, typeof value == 'string' ? value : JSON.stringify(value))\r\n        }\r\n    })(localStorage.setItem)\r\n}\r\n\r\n/**\r\n * 是否开启 localStorage 的自定义事件 getItem：通过window.addEventListener 去监听\r\n * getItemEvent\r\n */\r\nexport const openGetItemEvent = function () {\r\n    //监听自定义事件 getItemEvent\r\n    localStorage.getItem = (Orgin => {\r\n        return function (key) {\r\n            let result = JSON.parse(Orgin.call(this, key))\r\n            let getItemEvent = new CustomEvent('getItemEvent', { detail: { getKey: key, value: result } })\r\n            window.dispatchEvent(getItemEvent)\r\n            return result\r\n        }\r\n    })(localStorage.getItem)\r\n}\r\n\r\n/**\r\n * 是否开启 localStorage 的自定义事件 removeItemEvent：通过window.addEventListener 去监听\r\n * removeItemEvent\r\n */\r\nexport const openRemoveItemEvent = function () {\r\n    //监听自定义事件 removeItemEvent\r\n    localStorage.removeItem = (Orgin => {\r\n        return function (key) {\r\n            let removeItemEvent = new CustomEvent('removeItemEvent', { detail: { removeKey: key } })\r\n            window.dispatchEvent(removeItemEvent)\r\n            Orgin.call(this, key)\r\n        }\r\n    })(localStorage.removeItem)\r\n}\r\n\r\n/**\r\n * @description:  新增 获取所有带过期时间的数据\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const getHasExpired = function () {\r\n    let o = getStore(),\r\n        ret = {}\r\n    for (let k in o) {\r\n        if (isPureoBbject(o[k]) && o[k].hasOwnProperty('expires')) {\r\n            ret[k] = o[k]\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * @description:  新增 获取所有带过期时间的keys\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const getHasExpiredKeys = function () {\r\n    let o = getStore(),\r\n        expiredArr = []\r\n    for (let k in o) {\r\n        if (isPureoBbject(o[k]) && o[k].hasOwnProperty('expires')) {\r\n            expiredArr.push(k)\r\n        }\r\n    }\r\n    return expiredArr\r\n}\r\n\r\n/**\r\n * @description:  新增 获取所有已经过期的数据信息\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const getExpired = function () {\r\n    let o = getStore(),\r\n        ret = {\r\n            keys: [],\r\n            val: {}\r\n        }\r\n    for (let k in o) {\r\n        if (isPureoBbject(o[k]) && o[k].hasOwnProperty('expires')) {\r\n            if (new Date() - o[k].startTime > o[k].expires) {\r\n                ret.keys.push(k)\r\n                ret.val[k] = o[k]\r\n            }\r\n        }\r\n    }\r\n    return ret\r\n}\r\n\r\n/**\r\n * @description: 清除过期的缓存\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const clearExpired = function (clearKeys) {\r\n    // 获取过期缓存\r\n    let allKeys = getExpired().keys\r\n    // 不传参数，就清除所有过期的本地缓存\r\n    if (!arguments.length) {\r\n        allKeys.length && remove(allKeys)\r\n    } else {\r\n        if (typeof clearKeys === 'string' && allKeys.includes(clearKeys)) {\r\n            remove(clearKeys)\r\n        } else if (Array.isArray(clearKeys) && clearKeys.length) {\r\n            for (let i = 0; i < clearKeys.length; i++) {\r\n                if (allKeys.includes(clearKeys[i])) {\r\n                    remove(clearKeys[i])\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 返回本地缓存占用大小\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const size = function () {\r\n    return bytesToSize(JSON.stringify(localStorage).length)\r\n}\r\n","/*\r\n * @Description: 本地缓存 localStorage 类 Local\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:31:51\r\n * @LastEditors: shufei\r\n */\r\nimport * as local from './lib/core'\r\nfunction Local() {\r\n    if (!(this instanceof Local)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nLocal.prototype = local\r\nexport default new Local()\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-11-11 21:01:15\r\n * @LastEditTime: 2020-12-07 14:18:57\r\n * @LastEditors: shufei\r\n */\r\n\r\nexport const browserType = function () {\r\n    var ua = window.navigator.userAgent\r\n    var isIE = 'ActiveXObject' in window\r\n    var isChrome = ua.match(/Chrome/i)\r\n    var isMobile = !!(ua.match(/(iPhone|iPad|iPod)/i) || ua.match(/Android/i) || ua.match(/Windows Phone/i) || ua.match(/IEMobile/i))\r\n    let isIos = !!ua.match(/(iPhone|iPad|iPod)/i)\r\n    let isAndroid = !!ua.match(/Android/i)\r\n    let isTencentAgent = ua.match(/MicroMessenger/i) == 'MicroMessenger'\r\n    let isWx = isTencentAgent && ua.match(/wxwork/i) != 'wxwork'\r\n    let isWxMobile = isTencentAgent && ua.match(/wxwork/i) != 'wxwork' && ua.match(/Mobile/i) == 'Mobile'\r\n    let isWxPc = isTencentAgent && ua.match(/wxwork/i) != 'wxwork' && ua.match(/Mobile/i) != 'Mobile'\r\n    let isWxWork = isTencentAgent && ua.match(/wxwork/i) == 'wxwork'\r\n    let isWxWorkMobile = isTencentAgent && ua.match(/wxwork/i) == 'wxwork' && ua.match(/Mobile/i) == 'Mobile'\r\n    let isWxWorkPc = isTencentAgent && ua.match(/wxwork/i) == 'wxwork' && ua.match(/Mobile/i) != 'Mobile'\r\n\r\n    var IEVersion = null\r\n    var isIE8, isIE9, isIE10, isIE11\r\n    isIE8 = isIE9 = isIE10 = isIE11 = false\r\n    var appName = navigator.appName\r\n    if (appName == 'Microsoft Internet Explorer' || isIE) {\r\n        var ret = ua.match(/MSIE (\\d+[.\\d]*)/)\r\n        if (ret) {\r\n            var version = ret[1]\r\n            IEVersion = version\r\n            var num = parseInt(version, 10)\r\n            isIE8 = num === 8\r\n            isIE9 = num == 9\r\n            isIE10 = num == 10\r\n            isIE11 = num == 11\r\n        }\r\n    }\r\n    return {\r\n        isChrome, // 是否Chrome浏览器\r\n        isIE, // 是否IE浏览器\r\n        isMobile, // 是否移动端\r\n        IEVersion,\r\n        isIE8,\r\n        isIE9,\r\n        isIE10,\r\n        isIE11,\r\n        isIos,\r\n        isAndroid,\r\n        isWx,\r\n        isWxMobile,\r\n        isWxPc,\r\n        isWxWork,\r\n        isWxWorkMobile,\r\n        isWxWorkPc\r\n    }\r\n}\r\n\r\n/**\r\n * 进入全屏模式\r\n */\r\nexport const toFullScreen = function () {\r\n    let elem = document.body\r\n    elem.webkitRequestFullScreen\r\n        ? elem.webkitRequestFullScreen()\r\n        : elem.mozRequestFullScreen\r\n        ? elem.mozRequestFullScreen()\r\n        : elem.msRequestFullscreen\r\n        ? elem.msRequestFullscreen()\r\n        : elem.requestFullScreen\r\n        ? elem.requestFullScreen()\r\n        : alert('浏览器不支持全屏')\r\n}\r\n\r\n/**\r\n * 退出全屏模式\r\n */\r\nexport const exitFullscreen = function () {\r\n    let elem = parent.document\r\n    elem.webkitCancelFullScreen\r\n        ? elem.webkitCancelFullScreen()\r\n        : elem.mozCancelFullScreen\r\n        ? elem.mozCancelFullScreen()\r\n        : elem.cancelFullScreen\r\n        ? elem.cancelFullScreen()\r\n        : elem.msExitFullscreen\r\n        ? elem.msExitFullscreen()\r\n        : elem.exitFullscreen\r\n        ? elem.exitFullscreen()\r\n        : alert('切换失败,可尝试Esc退出')\r\n}\r\nexport const isPC = function () {\r\n    return !('ontouchstart' in window)\r\n}\r\n//是否移动端\r\nexport const isMobile = function () {\r\n    return 'ontouchstart' in window\r\n}\r\n//是否android\r\nexport const isAndroid = function () {\r\n    var u = navigator.userAgent\r\n    return u.indexOf('Android') > -1 || u.indexOf('Adr') > -1\r\n}\r\n//是否ios终端\r\nexport const isiOS = function () {\r\n    var u = navigator.userAgent\r\n    return !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)\r\n}\r\n\r\n//缓存函数\r\nexport const createCache = function () {\r\n    var keys = []\r\n    function cache(key, value) {\r\n        // 使用(key + \" \") 是为了避免和原生（本地）的原型中的属性冲突\r\n        if (keys.push(key + ' ') > 3) {\r\n            // 只保留最新存入的数据\r\n            delete cache[keys.shift()]\r\n        }\r\n        // 1 给 cache 赋值\r\n        // 2 把值返回\r\n        return (cache[key + ' '] = value)\r\n    }\r\n    return cache\r\n}\r\n//一次性函数\r\nexport const runOnce = function (fn) {\r\n    fn()\r\n    runOnce = function () {}\r\n}\r\n\r\n//PC端弹出新窗口\r\nexport const openWindow = (url, title, width, height, left, top, resizable) => {\r\n    if (typeof width == 'string' && width.indexOf('%') != -1) {\r\n        width = Math.floor(screen.availWidth * (parseFloat(width.replace('%', '')) / 100))\r\n    }\r\n    if (typeof height == 'string' && height.indexOf('%') != -1) {\r\n        height = Math.floor(screen.availWidth * (parseFloat(height.replace('%', '')) / 100))\r\n    }\r\n    if (!left) left = (screen.availWidth - width) / 2\r\n    if (!top) top = (screen.availHeight - height) / 2\r\n    if (resizable !== false) resizable = true\r\n    var parameters = [\r\n        'width=' + Math.min(width, screen.availWidth - 100),\r\n        'height=' + Math.min(height, screen.availHeight - 100),\r\n        'left=' + left,\r\n        'top=' + top,\r\n        'resizable=' + (resizable ? 'yes' : 'no'),\r\n        'toolbar=no,menubar=no,location=no,status=no,scrollbars=yes'\r\n    ]\r\n    if (title) {\r\n        url = url + (url.indexOf('?') === -1 ? '?' : '&') + 'windowtitle=' + encodeURI(title)\r\n    }\r\n\r\n    var re = window.open(url, title, parameters.join(','))\r\n    try {\r\n        re.focus()\r\n        return re\r\n    } catch (e) {\r\n        alert('弹出窗口可能已被浏览器拦截，请确认浏览器是否启用了弹出窗口拦截程序。')\r\n    }\r\n}\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-21 10:56:43\r\n * @LastEditors: shufei\r\n */\r\n/**\r\n *\r\n * 浏览器客户端交互\r\n *\r\n */\r\n\r\nimport * as browser from './lib/core'\r\nfunction Rbrowser() {\r\n    if (!(this instanceof Rbrowser)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRbrowser.prototype = browser\r\nexport default new Rbrowser()\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-11-12 09:30:02\r\n * @LastEditTime: 2020-12-10 18:34:04\r\n * @LastEditors: shufei\r\n */\r\n// 获取数据类型\r\nconst getType = function (o) {\r\n    return Object.prototype.toString.call(o).slice(8, -1).toLowerCase()\r\n}\r\n// 获取数据类型\r\nexport const is = function (val, type) {\r\n    return getType(val) === type\r\n}\r\n// 是否正则\r\nexport const isRegExp = function (o) {\r\n    return getType(o) === 'regexp'\r\n}\r\n//是否数字\r\nexport const isNumber = function (o) {\r\n    return getType(o) === 'number'\r\n}\r\n//是否对象\r\nexport const isObject = function (o) {\r\n    return getType(o) === 'object'\r\n}\r\n//是否字符串\r\nexport const isString = function (o) {\r\n    return typeof o === 'string'\r\n}\r\n//是否数组\r\nexport const isArray = function (o) {\r\n    return Array.isArray(o)\r\n}\r\n//是否null\r\nexport const isNull = function (o) {\r\n    return o === null\r\n}\r\n//是否undefined\r\nexport const isUndefined = function (o) {\r\n    return o === undefined\r\n}\r\n//是否布尔值\r\nexport const isBoolean = function (o) {\r\n    return [false, true].includes(o)\r\n}\r\n//是否函数\r\nexport const isFunction = function (o) {\r\n    return getType(o) === 'function'\r\n}\r\n//是否时间\r\nexport const isDate = function (o) {\r\n    return getType(o) === 'date'\r\n}\r\n\r\n//是否为空\r\n/**\r\n * 检测是否为空\r\n * @param {Any} data\r\n * @return {Boolean}\r\n */\r\nexport const isEmpty = (data = null) => {\r\n    try {\r\n        //base type\r\n        const baseType = [undefined, null, false, '', 0, NaN]\r\n        if (baseType.includes(data)) return true\r\n        if (data instanceof Error) return data.message === ''\r\n\r\n        //reference type\r\n        switch (getType(data)) {\r\n            case 'string':\r\n            case 'array':\r\n                return !data.length\r\n            case 'file':\r\n            case 'map':\r\n            case 'set':\r\n                return !data.size\r\n            case 'object':\r\n                return !Object.keys(data).length\r\n            default:\r\n                return false\r\n        }\r\n    } catch (e) {\r\n        return true\r\n    }\r\n}\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:59:30\r\n * @LastEditors: shufei\r\n */\r\n/**\r\n * 基类\r\n * 被其他类所继承\r\n * 基类身上的属性和方法被其他类所需要\r\n */\r\n\r\nimport * as base from './lib/core'\r\nfunction Rbase() {\r\n    if (!(this instanceof Rbase)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRbase.prototype = base\r\nexport default new Rbase()\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-21 10:57:44\r\n * @LastEditors: shufei\r\n */\r\n\r\nimport * as dom from './lib/core'\r\nfunction Rdom() {\r\n    if (!(this instanceof Rdom)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRdom.prototype = dom\r\nexport default new Rdom()\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-11-12 20:02:37\r\n * @LastEditTime: 2020-11-23 10:08:03\r\n * @LastEditors: shufei\r\n */\r\n/**\r\n * 根据url下载图片\r\n * @param {string} url - 图片url地址\r\n *\r\n */\r\nexport const downloadImg = function (url) {\r\n    return new Promise(resolve => {\r\n        let img = new Image()\r\n        img.src = url\r\n        img.crossOrigin = ''\r\n        img.onload = function () {\r\n            //默认按比例压缩\r\n            let w = this.width,\r\n                h = this.height\r\n            let quality = 0.95 // 默认图片质量为0.7\r\n            //生成canvas\r\n            let canvas = document.createElement('canvas')\r\n            let ctx = canvas.getContext('2d')\r\n            // 创建属性节点\r\n            canvas.setAttribute('width', w)\r\n            canvas.setAttribute('height', h)\r\n            ctx.drawImage(this, 0, 0, w, h)\r\n            // quality值越小，所绘制出的图像越模糊\r\n            let base64 = canvas.toDataURL('image/png', quality)\r\n            // 回调函数返回base64的值\r\n            resolve(base64)\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * base64数据导出文件下载\r\n * @param {string} filename - 下载时的文件名\r\n * @param {string} data - base64字符串\r\n */\r\nexport const downloadFile = function (filename, data) {\r\n    let downloadLink = document.createElement('a')\r\n    if (downloadLink) {\r\n        document.body.appendChild(downloadLink)\r\n        downloadLink.style = 'display: none'\r\n        downloadLink.download = filename\r\n        downloadLink.href = data\r\n        if (document.createEvent) {\r\n            let downloadEvt = document.createEvent('MouseEvents')\r\n            downloadEvt.initEvent('click', true, false)\r\n            downloadLink.dispatchEvent(downloadEvt)\r\n        } else if (document.createEventObject) {\r\n            downloadLink.fireEvent('onclick')\r\n        } else if (typeof downloadLink.onclick == 'function') {\r\n            downloadLink.onclick()\r\n        }\r\n        document.body.removeChild(downloadLink)\r\n    }\r\n}\r\n\r\n/**\r\n * 文件转 base64\r\n * @param {string} filename - 下载时的文件名\r\n * @param {string} data - base64字符串\r\n */\r\nexport const fileToBase64 = function (file) {\r\n    return new Promise(resolve => {\r\n        let windowURL = window.URL || window.webkitURL\r\n        //要显示图片的路径\r\n        let dataURL = windowURL.createObjectURL(file)\r\n        //图片转换成base64\r\n        let reader = new FileReader()\r\n        reader.readAsDataURL(file) //这一步是关键\r\n        reader.onload = function (e) {\r\n            let base64 = e.target.result\r\n            resolve({ base64, dataURL, type: base64.slice(base64.indexOf('/') + 1, base64.indexOf(';')) })\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * @description: 通过https的图片地址下载到本地\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const downloadByUrl = function (url, name = '图片名称') {\r\n    downloadImg(url).then(res => {\r\n        downloadFile(name, res)\r\n    })\r\n}\r\n\r\n/**\r\n * 下载图片到本地：主要原理，利用a标签的download属性以及canvas的toDataURL()\r\n * @param { String } selector: 图片的选择器\r\n * @param { String } name：被下载图片的命名\r\n */\r\nexport const downloadPicture = function (selector, name) {\r\n    let image = new Image()\r\n    // 解决跨域 Canvas 污染问题\r\n    image.setAttribute('crossOrigin', 'anonymous')\r\n    image.onload = function () {\r\n        // 创建一个canvas标签\r\n        let canvas = document.createElement('canvas')\r\n        // 设置canvas的宽高\r\n        canvas.width = image.width\r\n        canvas.height = image.height\r\n        // 获取canvas的2d界面\r\n        let context = canvas.getContext('2d')\r\n        // 把图片画在canvas上\r\n        context.drawImage(image, 0, 0, canvas.width, canvas.height)\r\n        // 把canvas的内容转化为base64格式\r\n        let url = canvas.toDataURL('image/png')\r\n        // 生成一个a元素\r\n        let a = document.createElement('a')\r\n        // 创建一个单击事件\r\n        let event = new MouseEvent('click')\r\n\r\n        // 将a的download属性设置为我们想要下载的图片名称，若name不存在则使用‘下载图片名称’作为默认名称\r\n        a.download = name || '下载图片名称'\r\n        // 将生成的URL设置为a.href属性\r\n        a.href = url\r\n        // 触发a的单击事件\r\n        a.dispatchEvent(event)\r\n    }\r\n    // 获取img上的src值，赋值之后，完成之后会调用onload事件\r\n    image.src = typeof selector === 'string' ? document.querySelector(selector).src : selector.src\r\n}\r\n\r\n/**\r\n *下载二进制流文件\r\n * @param {*} ：参数对象\r\n */\r\n\r\nexport const downBolbFile = function ({ httpType = 'GET', url, isCust = false, fileName = '相关文档.png' }) {\r\n    return new Promise((resolve, reject) => {\r\n        let decUserInfo = function () {\r\n            return {\r\n                userInfo: {},\r\n                token: ''\r\n            }\r\n        }\r\n        const userObj = decUserInfo()\r\n        const http = new XMLHttpRequest()\r\n        let name = ''\r\n        http.open(httpType, url)\r\n        http.setRequestHeader('token', userObj.token)\r\n        http.setRequestHeader('Content-Type', 'application/json')\r\n        http.responseType = 'blob'\r\n        http.onreadystatechange = () => {\r\n            if (http.readyState === 4 && http.status === 200) {\r\n                // 先创建读取文件的对象\r\n                const reader = new FileReader()\r\n                // 读取流中的内容\r\n                reader.readAsText(http.response)\r\n                reader.onload = () => {\r\n                    try {\r\n                        const text = reader.result\r\n                        reject(JSON.parse(text))\r\n                    } catch (error) {\r\n                        if (isCust) {\r\n                            const filename = http.getResponseHeader('Content-Disposition').split(';')[1].split('=')[1]\r\n                            name = filename\r\n                        } else {\r\n                            name = fileName\r\n                        }\r\n                        const blob = new Blob([http.response])\r\n                        const csvUrl = URL.createObjectURL(blob)\r\n                        const link = document.createElement('a')\r\n                        document.body.appendChild(link) // 创建的标签添加到body，解决Firefox下无法打开页面的问题\r\n                        link.href = csvUrl\r\n                        link.target = '_blank'\r\n                        link.id = 'linkId'\r\n                        link.className = 'linkId'\r\n                        link.download = decodeURI(name)\r\n                        document.getElementById('linkId').click()\r\n                        link.remove() // 将a标签移除\r\n                        resolve()\r\n                    }\r\n                }\r\n            }\r\n            if (http.readyState === 4 && http.status !== 200) {\r\n                reject(JSON.parse(http.response))\r\n            }\r\n        }\r\n        http.send(null)\r\n    })\r\n}\r\n","/*\r\n * @Description: 下载类 Download\r\n * @Author: shufei\r\n * @Date: 2020-11-12 20:02:31\r\n * @LastEditTime: 2020-12-04 09:29:18\r\n * @LastEditors: shufei\r\n */\r\nimport * as download from './lib/core'\r\n\r\nfunction Download() {\r\n    if (!(this instanceof Download)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nDownload.prototype = download\r\nexport default new Download()\r\n","/*\r\n * @Description: Object\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:54:42\r\n * @LastEditors: shufei\r\n */\r\nimport * as obj from './lib/core'\r\nfunction Robj() {\r\n    if (!(this instanceof Robj)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRobj.prototype = obj\r\nexport default new Robj()\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-12-02 09:50:06\r\n * @LastEditTime: 2020-12-04 09:57:59\r\n * @LastEditors: shufei\r\n */\r\nimport * as reg from './lib/core'\r\n\r\nfunction Rreg() {\r\n    if (!(this instanceof Rreg)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRreg.prototype = reg\r\nexport default new Rreg()\r\n","/*\r\n * @Description:regExp 正则相关\r\n * @Author: shufei\r\n * @Date: 2020-12-02 09:50:17\r\n * @LastEditTime: 2021-01-14 14:47:50\r\n * @LastEditors: shufei\r\n */\r\n\r\n/**\r\n * 验证不能包含字母\r\n * @param { string } value\r\n */\r\nexport const isNoWord = value => /^[^A-Za-z]*$/g.test(value)\r\n\r\n/**\r\n * 验证中文和数字\r\n * @param { string } value\r\n */\r\nexport const isCHNAndEN = value =>\r\n    /^((?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])|(\\d))+$/g.test(\r\n        value\r\n    )\r\n/**\r\n * 验证邮政编码(中国)\r\n * @param { string } value\r\n */\r\nexport const isPostcode = value => /^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8[013-6])\\d{4}$/g.test(value)\r\n\r\n/**\r\n * 验证微信号，6至20位，以字母开头，字母，数字，减号，下划线\r\n * @param { string } value\r\n */\r\nexport const isWeChatNum = value => /^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/g.test(value)\r\n\r\n/**\r\n * 验证16进制颜色\r\n * @param { string } value\r\n */\r\nexport const isColor16 = value => /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/g.test(value)\r\n\r\n/**\r\n * 验证火车车次\r\n * @param { string } value\r\n */\r\nexport const isTrainNum = value => /^[GCDZTSPKXLY1-9]\\d{1,4}$/g.test(value)\r\n\r\n/**\r\n * 验证必须带端口号的网址(或ip)\r\n * @param { string } value\r\n */\r\nexport const isHttpAndPort = value => /^((ht|f)tps?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+:\\d{1,5}\\/?$/g.test(value)\r\n\r\n/**\r\n * 验证网址(支持端口和\"?+参数\"和\"#+参数)\r\n *  @param { string } value\r\n */\r\nexport const isRightWebsite = value => /^(((ht|f)tps?):\\/\\/)?[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?$/g.test(value)\r\n\r\n/**\r\n * 验证统一社会信用代码\r\n *  @param { string } value\r\n */\r\nexport const isCreditCode = value => /^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$/g.test(value)\r\n\r\n/**\r\n * 验证版本号格式必须为X.Y.Z\r\n *  @param { string } value\r\n */\r\nexport const isVersion = value => /^\\d+(?:\\.\\d+){2}$/g.test(value)\r\n\r\n/**\r\n * 验证图片链接地址（图片格式可按需增删）\r\n *  @param { string } value\r\n */\r\nexport const isImageUrl = value => /^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|tif))$/i.test(value)\r\n\r\n/**\r\n * 验证中文姓名\r\n * @param { string } value\r\n */\r\nexport const isChineseName = value => /^(?:[\\u4e00-\\u9fa5·]{2,16})$/g.test(value)\r\n\r\n/**\r\n * 验证英文姓名\r\n * @param { string } value\r\n */\r\nexport const isEnglishName = value => /(^[a-zA-Z]{1}[a-zA-Z\\s]{0,20}[a-zA-Z]{1}$)/g.test(value)\r\n\r\n/**\r\n * 验证车牌号(新能源)\r\n * @param { string } value\r\n */\r\nexport const isLicensePlateNumberNER = value => /[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(([0-9]{5}[DF])|([DF][A-HJ-NP-Z0-9][0-9]{4}))$/g.test(value)\r\n\r\n/**\r\n * 验证车牌号(非新能源)\r\n * @param { string } value\r\n */\r\nexport const isLicensePlateNumberNNER = value => /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/g.test(value)\r\n\r\n/**\r\n * 验证车牌号(新能源+非新能源)\r\n * @param { string } value\r\n */\r\nexport const isLicensePlateNumber = value =>\r\n    /^(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-HJ-NP-Z]{1}(?:(?:[0-9]{5}[DF])|(?:[DF](?:[A-HJ-NP-Z0-9])[0-9]{4})))|(?:[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领 A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9 挂学警港澳]{1})$/g.test(\r\n        value\r\n    )\r\n\r\n/**\r\n * 验证手机号中国(严谨), 根据工信部2019年最新公布的手机号段\r\n * @param { string } value\r\n */\r\nexport const isMPStrict = value => /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-7|9])|(?:5[0-3|5-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1|8|9]))\\d{8}$/g.test(value)\r\n\r\n/**\r\n * 验证手机号中国(宽松), 只要是13,14,15,16,17,18,19开头即可\r\n * @param { string } value\r\n */\r\nexport const isMPRelaxed = value => /^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/g.test(value)\r\n\r\n/**\r\n * 验证email(邮箱) 收录自 有赞 vant 的 https://github.com/youzan/vant/blob/2.x/src/utils/validate/email.ts\r\n * @param { string } value\r\n */\r\nexport const isEmail = function (value) {\r\n    const reg = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i\r\n    return reg.test(value)\r\n}\r\n/**\r\n * 验证座机电话(国内),如: 0341-86091234\r\n * @param { string } value\r\n */\r\nexport const isLandlineTelephone = value => /\\d{3}-\\d{8}|\\d{4}-\\d{7}/g.test(value)\r\n\r\n/**\r\n * 验证护照（包含香港、澳门）\r\n * @param { string } value\r\n */\r\nexport const isPassport = value => /(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([Kk][Jj])|([Mm][Aa])|(1[45]))\\d{7}$)/g.test(value)\r\n\r\n/**\r\n * 验证中文/汉字\r\n * @param { string } value\r\n */\r\nexport const isChineseCharacter = value =>\r\n    /^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14\\uFA1F\\uFA21\\uFA23\\uFA24\\uFA27-\\uFA29]|[\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0])+$/g.test(\r\n        value\r\n    )\r\n\r\n/**\r\n * 验证小数\r\n * @param { string } value\r\n */\r\nexport const isDecimal = value => /^\\d+\\.\\d+$/g.test(value)\r\n\r\n/**\r\n * 验证数字\r\n * @param { string } value\r\n */\r\nexport const isNumber = value => /^\\d{1,}$/g.test(value)\r\n\r\n/**\r\n *\r\n * 验证qq号格式\r\n * @param { string } value\r\n */\r\nexport const isQQNum = value => /^[1-9][0-9]{4,10}$/g.test(value)\r\n\r\n/**\r\n * 验证数字和字母组成\r\n * @param { string } value\r\n */\r\nexport const isNumAndStr = value => /^[A-Za-z0-9]+$/g.test(value)\r\n\r\n/**\r\n * 验证英文字母\r\n * @param { string } value\r\n */\r\nexport const isEnglish = value => /^[a-zA-Z]+$/g.test(value)\r\n\r\n/**\r\n * 验证大写英文字母\r\n * @param { string } value\r\n */\r\nexport const isCapital = value => /^[A-Z]+$/g.test(value)\r\n\r\n/**\r\n * 验证小写英文字母\r\n * @param { string } value\r\n */\r\nexport const isLowercase = value => /^[a-z]+$/g.test(value)\r\n","/*\r\n * @Description:地图相关\r\n * @Author: shufei\r\n * @Date: 2020-12-07 14:15:37\r\n * @LastEditTime: 2020-12-07 14:22:32\r\n * @LastEditors: shufei\r\n */\r\nimport * as map from './lib/core'\r\nfunction Rmap() {\r\n    if (!(this instanceof Rmap)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRmap.prototype = map\r\nexport default new Rmap()\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-12-07 14:21:23\r\n * @LastEditTime: 2020-12-07 14:21:24\r\n * @LastEditors: shufei\r\n */\r\n//腾讯转百度坐标\r\nexport const txToBd = function (point) {\r\n    let { lng, lat } = point\r\n    let x_PI = (3.14159265358979324 * 3000.0) / 180.0\r\n    let z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI)\r\n    let theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI)\r\n    let bd_lng = z * Math.cos(theta) + 0.0065\r\n    let bd_lat = z * Math.sin(theta) + 0.006\r\n    return { lng: bd_lng, lat: bd_lat }\r\n}\r\n","/*\r\n * @Description:长列表倒计时\r\n * @Author: shufei\r\n * @Date: 2020-11-16 12:43:12\r\n * @LastEditTime: 2020-11-23 14:34:11\r\n * @LastEditors: shufei\r\n */\r\nconst padStart = (string, length, pad) => {\r\n    const s = String(string)\r\n    if (!s || s.length >= length) return String(string)\r\n    return `${Array(length + 1 - s.length).join(pad)}${string}`\r\n}\r\n\r\nfunction ListCountDown(opt) {\r\n    this.timer = null //定时器\r\n    this.format = opt.format || 'dd天hh时mm分ss秒' //内容格式\r\n    this.list = opt.list || [] // 长列表\r\n    this.key = opt.timeKey // 别名结束时间key\r\n    this.content = opt.previewKey // 回显内容key\r\n    this.type = opt.type || 1 //长列表显示类型\r\n    this.update()\r\n}\r\n/**\r\n * @description: 更新\r\n * @param :\r\n * @return {*}\r\n */\r\nListCountDown.prototype.update = function () {\r\n    this.operation(1)\r\n}\r\n/**\r\n * @description: 取消\r\n * @param :\r\n * @return {*}\r\n */\r\nListCountDown.prototype.cancel = function () {\r\n    this.operation(0)\r\n}\r\n/**\r\n * @description: 计算倒计时的 d 天 h 时 m 分 s 秒\r\n * @param :\r\n * @return {*}\r\n */\r\nListCountDown.prototype.calc = function (item) {\r\n    let time = item[this.key]\r\n    let e = (new Date((time.trim().includes(' ') ? time.trim() : time.trim() + ' 00:00:00').replace(/-/g, '/')) - new Date()) / 1000\r\n    e <= 0 && (item.isExpred = true)\r\n    let date = {\r\n        d: e <= 0 ? '00' : Math.floor(e / 86400),\r\n        h: e <= 0 ? '00' : padStart(parseInt(Math.floor((e % 86400) / 3600)), 2, 0),\r\n        m: e <= 0 ? '00' : padStart(parseInt(Math.floor((e % 86400) % 3600) / 60), 2, 0),\r\n        s: e <= 0 ? '00' : padStart(parseInt(e % 60), 2, 0)\r\n    }\r\n    if (this.type == 1) {\r\n        return this.format.replace(/d{1,2}|h{1,2}|m{1,2}|s{1,2}|S/g, a => (a.charAt(0) === 'd' || a.length === 2 ? date[a.charAt(0)] : Number(date[a.charAt(0)])))\r\n    } else {\r\n        ;(item.d = date.d), (item.h = date.h), (item.m = date.m), (item.s = date.s)\r\n    }\r\n}\r\n/**\r\n * @description: 长列表定时器操作\r\n * @param : {Number} type 操作类型 1 更新 0 取消\r\n * @return {*} viod\r\n */\r\nListCountDown.prototype.operation = function (type) {\r\n    if (!this.list.length) return\r\n    clearInterval(this.timer)\r\n    this.timer = null\r\n    if (type == 1) {\r\n        this.timer = setInterval(() => {\r\n            for (let i = 0, len = this.list.length; i < len; i++) {\r\n                if (this.type == 1) {\r\n                    this.list[i][this.content] = this.calc(this.list[i])\r\n                } else {\r\n                    this.calc(this.list[i])\r\n                }\r\n            }\r\n        }, 1000)\r\n    }\r\n}\r\n\r\nexport default ListCountDown\r\n","/*\r\n * @Description: 回话窗口缓存 sessionStorage 类 Session\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2021-01-15 15:09:55\r\n * @LastEditors: shufei\r\n */\r\nimport * as session from './lib/core'\r\nfunction Rsession() {\r\n    if (!(this instanceof Rsession)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRsession.prototype = session\r\nexport default new Rsession()\r\n","/*\r\n * @Description: sessionStorage  回话窗口缓存 封装\r\n * @Author: shufei\r\n * @Date: 2021-01-04 14:57:56\r\n * @LastEditTime: 2021-01-18 08:44:00\r\n * @LastEditors: shufei\r\n */\r\n\r\n/**\r\n * @description: 回话窗口缓存 获取\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const get = function (keys) {\r\n    let ret = {}\r\n    // keys 参数 是数组\r\n    if (Array.isArray(keys)) {\r\n        for (let j = 0; j < keys.length; j++) {\r\n            if (typeof keys[j] === 'string' && sessionStorage.getItem(keys[j])) {\r\n                try {\r\n                    ret[keys[j]] = JSON.parse(sessionStorage.getItem(keys[j]))\r\n                } catch (error) {\r\n                    ret[keys[j]] = sessionStorage.getItem(keys[j])\r\n                }\r\n            }\r\n        }\r\n        return Object.keys(ret).length ? ret : false\r\n    } else if (typeof keys === 'string' && sessionStorage.getItem(keys)) {\r\n        try {\r\n            return JSON.parse(sessionStorage.getItem(keys))\r\n        } catch (error) {\r\n            return sessionStorage.getItem(keys)\r\n        }\r\n    }\r\n}\r\n/**\r\n * @description: 回话窗口缓存 新增/编辑更新\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const set = function (key, val) {\r\n    if (typeof key === 'string' && arguments.length == 2) {\r\n        //set(key,val)\r\n        sessionStorage.setItem(key, JSON.stringify(val))\r\n    } else if (Array.isArray(key)) {\r\n        //set([{key1:val1},{key2:val2}]) or set([{key1:val1,k11:val22},{key2:val2}])\r\n        for (let i = 0; i < key.length; i++) {\r\n            if (Object.prototype.toString.call(key[i]).slice(8, -1) === 'Object') {\r\n                for (let k in key[i]) {\r\n                    sessionStorage.setItem(k, JSON.stringify(key[i][k]))\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        //set({key1:val1,k11:val22},{key2:val2})\r\n        let args = [...arguments]\r\n        for (let i = 0; i < args.length; i++) {\r\n            if (Object.prototype.toString.call(args[i]).slice(8, -1) === 'Object') {\r\n                for (let k in args[i]) {\r\n                    sessionStorage.setItem(k, JSON.stringify(args[i][k]))\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * @description: 回话窗口缓存 移除\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const remove = function () {\r\n    let args = [...arguments]\r\n    for (let i = 0; i < args.length; i++) {\r\n        typeof args[i] === 'string' && sessionStorage.removeItem(args[i])\r\n        Array.isArray(args[i]) && this.remove(...args[i])\r\n    }\r\n}\r\n/**\r\n * @description: 回话窗口缓存 清除\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const clear = function () {\r\n    sessionStorage.clear()\r\n}\r\n/**\r\n * @description: 回话窗口缓存 获取所有的\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const getAll = function () {\r\n    return Object.keys(sessionStorage).reduce((p, c) => ((p[c] = this.get(c)), p), {})\r\n}\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2021-01-06 14:33:34\r\n * @LastEditTime: 2021-01-06 14:54:53\r\n * @LastEditors: shufei\r\n */\r\nfunction Business() {\r\n    this.desc = '业务专属类-所有业务相关扩展方法均挂在在这个类身上！'\r\n}\r\nBusiness.prototype.extend = function (o) {\r\n    if (Array.isArray(o)) {\r\n        for (let i = 0; i < o.length; i++) {\r\n            if (Object.prototype.toString.call(o[i]).slice(8, -1) === 'Object') {\r\n                for (let k in o[i]) {\r\n                    Business.prototype[k] = o[i][k]\r\n                }\r\n            }\r\n        }\r\n    } else if (Object.prototype.toString.call(o).slice(8, -1) === 'Object') {\r\n        for (let k in o) {\r\n            Business.prototype[k] = o[k]\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Business()\r\n","/*\r\n * @Description:指掌天下 handday 集成类\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2021-01-27 16:15:27\r\n * @LastEditors: shufei\r\n */\r\nimport date from '../date' //时间日期\r\nimport arr from '../arr' //数组\r\nimport url from '../url' //url\r\nimport num from '../num' //数字\r\nimport str from '../str' //字符串\r\nimport local from '../local' //本地缓村 localStorage\r\nimport browser from '../browser' //浏览器\r\nimport base from '../base' //基类\r\nimport dom from '../dom' //dom操作类\r\nimport download from '../download' //下载类\r\nimport obj from '../obj' //对象\r\nimport reg from '../reg' //正则\r\nimport map from '../map' //地图\r\nimport ListCountDown from '../ListCountDown' //长列表倒计时插件\r\nimport session from '../session' //长列表倒计时插件\r\nimport business from '../business' //业务\r\n\r\nexport default {\r\n    version: '1.0.9',\r\n    date,\r\n    arr,\r\n    url,\r\n    num,\r\n    str,\r\n    local,\r\n    browser,\r\n    base,\r\n    dom,\r\n    obj,\r\n    reg,\r\n    map,\r\n    download,\r\n    session,\r\n    business,\r\n    ListCountDown\r\n}\r\n"],"names":["_dt","dt","Date","indexOf","replace","_initFormat","args","ft","a","b","format","length","isNaN","valueOf","_details","year","d","getFullYear","month","getMonth","date","getDate","hour","getHours","minute","getMinutes","second","getSeconds","millisecond","getMilliseconds","padStart","string","pad","s","String","Array","join","isDate","str","ret","match","isDateTime","isToday","toLocaleDateString","isYesterday","setDate","when","previwWeekByDate","getDay","weekFirstLast","w","first","last","getGapWeek","n","getGapDate","getWeekWorkday","getYearWeek","dd","d1","d2","Math","round","ceil","y","thisYear","getMonthWeekInfo","isFirst","days","getMonthDays","Month","prefix","i","re","m","key","Object","keys","find","charAt","values","slice","r","suffix","invalidTip","undefined","setMonth","parseInt","abs","setFullYear","week","arguments","_toConsumableArray","map","now","item","split","splice","startDate","endDate","helper","startDateStamp","endDateStamp","gapDays","fill","reduce","p","c","_","substr","target","cur","diff","fmt","targetDate","cb","timer","setInterval","t","getTime","parse","clearInterval","floor","h","Y","M","H","W","k","len","includes","RegExp","Number","before","after","start","end","stamp1","stamp2","Rdate","this","TypeError","prototype","common","verify","stamp","merge","f","toString","equals","_typeof","every","unique","Set","deepCopy","isArray","call","l","Error","o","json","splitFlag","res","carry","_arr","name","_name","children","push","obj","arrayToTree","arr","id","link","filter","flatten","depth","v","concat","Rarr","random","min","max","from","stop","step","Boolean","fn","isNumber","parseFloat","isFinite","count","val","acc","delimiter","x","num","oldIndex","newIndex","e","getQuery","url","window","location","href","decodeURIComponent","urlSerialize","baseURL","params","encodeURIComponent","Rurl","URL","baseURLParam","baseUrl","gap","param","test","tmp","pre","keyName","targetIndex","findIndex","opt","keyArr","assign","data","list","decodeURI","paramArr","protocol","decimals","calc","type","digit","r1","r2","maxLen","pow","tyeps","padEnd","plus","plusMore","minus","minusMore","multiply","multiplyMore","devide","devideMore","isNum","fmtAmt","isThousands","isClearPrefix","iscalc","isInt","int","dot","sum","Rnum","j","resArr","isShow","value","clone","JSON","stringify","totalInfo","total","p1","c1","result","zero","totalKeys","trim","Rstr","toUpperCase","position_arr","index","S4","substring","tag","phone","phoneStr","getStyle","el","attr","document","querySelector","offsetLeft","offsetTop","offsetWidth","offsetHeight","currentStyle","getComputedStyle","bytesToSize","bytes","log","toFixed","isPureoBbject","remove","localStorage","removeItem","forEach","getExpired","getStore","hasOwnProperty","startTime","expires","scrollToTop","documentElement","scrollTop","body","requestAnimationFrame","scrollTo","ev","addEventListener","attachEvent","removeEventListener","detachEvent","clientHeight","scrollY","scrollHeight","element","scrollIntoView","behavior","pageXOffset","scrollLeft","pageYOffset","func","wait","immediate","debounced","callNow","arg","context","timeout","clearTimeout","setTimeout","apply","cancel","options","old","leading","trailing","style","display","size","Blob","append","FormData","check","Node","EventType","node","event","createEvent","initEvent","dispatchEvent","btnId","offset","btn","getElementById","set","onscroll","onclick","direction","speed","cssName","createElement","setAttribute","getElementsByTagName","appendChild","scriptUrlArr","callback","scriptUrl","script","onload","selector","subSelector","contains","targetClass","classList","parentNode","divs","all","querySelectorAll","zIndex","time","back","startVal","nowTime","moveVal","prop","PicIndex","PicLi","PicIndexLast","objNum","NaN","ele","onkeydown","oEevent","keyCode","select","execCommand","getItem","error","Local","setItem","clear","Orgin","setItemEvent","CustomEvent","detail","setKey","getItemEvent","getKey","removeItemEvent","removeKey","expiredArr","clearKeys","allKeys","runOnce","Rbrowser","isIE9","isIE10","isIE11","ua","navigator","userAgent","isIE","isChrome","isMobile","isIos","isAndroid","isTencentAgent","isWx","isWxMobile","isWxPc","isWxWork","isWxWorkMobile","isWxWorkPc","IEVersion","isIE8","appName","version","elem","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","requestFullScreen","alert","parent","webkitCancelFullScreen","mozCancelFullScreen","cancelFullScreen","msExitFullscreen","exitFullscreen","u","cache","shift","title","width","height","left","top","resizable","screen","availWidth","availHeight","parameters","encodeURI","open","focus","getType","toLowerCase","Rbase","message","Rdom","dom","downloadImg","Promise","resolve","img","Image","src","crossOrigin","canvas","ctx","getContext","drawImage","base64","toDataURL","downloadFile","filename","downloadLink","download","downloadEvt","createEventObject","fireEvent","removeChild","Download","file","dataURL","webkitURL","createObjectURL","reader","FileReader","readAsDataURL","then","image","MouseEvent","httpType","isCust","fileName","reject","userObj","userInfo","token","http","XMLHttpRequest","setRequestHeader","responseType","onreadystatechange","readyState","status","readAsText","response","text","getResponseHeader","blob","csvUrl","className","click","send","Robj","Rreg","Rmap","point","lng","lat","x_PI","z","sqrt","sin","theta","atan2","cos","ListCountDown","timeKey","content","previewKey","update","operation","isExpred","_this","Rsession","sessionStorage","get","Business","desc","extend","local","browser","base","reg","session","business"],"mappings":"63EAQmB,SAANA,EAAgBC,UAClBA,EAAK,IAAIC,KAAkB,iBAAND,IAAqC,EAAnBA,EAAGE,QAAQ,KAAYF,EAAGG,QAAQ,KAAM,KAAOH,GAAM,IAAIC,KAUhF,SAAdG,EAAwBC,EAAMC,OAClCC,OAAQF,SAALG,OACJR,EAAK,IAAIC,KACTQ,EAASH,SACM,GAAfD,EAAKK,OAELC,MAAM,IAAIV,KAAKM,GAAGK,WAAcH,EAASF,EAAMP,EAAK,IAAIC,KAAiB,iBAALM,EAAgBA,EAAEJ,QAAQ,KAAM,KAAOI,GACrF,GAAfF,EAAKK,SAEZV,EAAK,IAAIC,KAAiB,iBAALM,EAAgBA,EAAEJ,QAAQ,KAAM,KAAOI,GAC5DE,EAASD,GAEN,CAAER,GAAAA,EAAIS,OAAAA,GASO,SAAXI,EAAW,UAAUb,+BAAV,EAAA,EAAe,IAAIC,KAEhC,CACHa,MAFAC,EAAIhB,EAAIC,IAEAgB,cACRC,MAAOF,EAAEG,WAAa,EACtBC,KAAMJ,EAAEK,UACRC,KAAMN,EAAEO,WACRC,OAAQR,EAAES,aACVC,OAAQV,EAAEW,aACVC,YAAaZ,EAAEa,mBAIC,SAAXC,EAAYC,EAAQpB,EAAQqB,OAC/BC,EAAIC,OAAOH,UACZE,GAAKA,EAAEtB,QAAUA,EAAeuB,OAAOH,aAClCI,MAAMxB,EAAS,EAAIsB,EAAEtB,QAAQyB,KAAKJ,WAAOD,GCtBjC,SAATM,EAAmBC,OACxBC,EAAMD,EAAIE,MAAM,gDACT,MAAPD,KACAvB,EAAI,IAAId,KAAKqC,EAAI,GAAIA,EAAI,GAAK,EAAGA,EAAI,KAChCtB,eAAiBsB,EAAI,IAAMvB,EAAEG,WAAa,GAAKoB,EAAI,IAAMvB,EAAEK,WAAakB,EAAI,IAQ/D,SAAbE,EAAuBH,OAC5BC,EAAMD,EAAIE,MAAM,4EACT,MAAPD,KACAvB,EAAI,IAAId,KAAKqC,EAAI,GAAIA,EAAI,GAAK,EAAGA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,KACxDtB,eAAiBsB,EAAI,IAAMvB,EAAEG,WAAa,GAAKoB,EAAI,IAAMvB,EAAEK,WAAakB,EAAI,IAAMvB,EAAEO,YAAcgB,EAAI,IAAMvB,EAAES,cAAgBc,EAAI,IAAMvB,EAAEW,cAAgBY,EAAI,IAQpJ,SAAVG,EAAoBzC,UACtB,IAAIC,MAAOyC,sBAAwB,IAAIzC,KAAkB,iBAAND,EAAiBA,EAAGG,QAAQ,KAAM,KAAOH,GAAI0C,qBAOhF,SAAdC,EAAwB3C,OAC7Be,EAAI,IAAId,YACZc,EAAE6B,QAAQ7B,EAAEK,UAAY,GACjBL,EAAE2B,uBAAyB,IAAIzC,KAAKD,GAAI0C,qBCxD/B,SAAP5B,EAAiBd,UACnBa,EAASb,GAAIc,KAEH,SAARG,EAAkBjB,UACpBa,EAASb,GAAIiB,MAyCJ,SAAP4B,EAAiB7C,SAEnB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAChC,IAFRqB,EAAOtB,EAAIC,GAAIsB,aAEFD,GAAQ,EAAI,EAAW,EAAPA,GAAYA,GAAQ,EAAI,EAAW,EAAPA,GAAYA,GAAQ,GAAK,EAAW,GAAPA,GAAaA,GAAQ,GAAK,EAAW,GAAPA,GAAaA,GAAQ,GAAK,EAAW,GAAPA,GAAaA,GAAQ,GAAK,EAAI,GAsCxJ,SAAnByB,EAAmB,EAAA,UAAU9C,+BAAV,EAAA,EAAe,IAAIC,mCAAnB,EAAA,EAAoC,MAEhD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KADvCF,EAAIC,GAC0C+C,UAsC7B,SAAhBC,+BAA6B3C,2BAAAA,sBAClCL,EAAKI,EAAYC,EAAM,cAAcL,GACrCM,EAAKF,EAAYC,EAAM,cAAcI,OACrCwC,EAAmB,GAAfjD,EAAG+C,SAAgB,EAAI/C,EAAG+C,gBAClC/C,EAAG4C,QAAQ5C,EAAGoB,UAAY6B,EAAI,GACvB,CACHC,MAAOzC,EAAOT,EAAIM,GAClB6C,KAAM1C,EAAO,IAAIR,KAAKD,EAAGgB,cAAehB,EAAGkB,WAAYlB,EAAGoB,UAAY,GAAId,IAiFxD,SAAb8C,EAAa,EAAA,EAAA,OAAUC,+BAAV,EAAA,EAAc,EAAGrD,+BAAjB,EAAA,EAAsB,IAAIC,KAC1CiD,KAAgBF,EAAchD,EADoBM,+BAAlC,EAAA,EAAuC,eACvD4C,MAAOC,IAAAA,YACRE,EAKEL,EAAcM,EAAe,EAAJD,EAAW,EAAJA,EAAQF,EAAOD,GAAQ5C,GAJnD,CACH4C,MAAAA,EACAC,KAAAA,GAwBkB,SAAjBI,EAAiB,EAAA,OAAUvD,+BAAV,EAAA,EAAe,IAAIC,KAAQK,+BAA3B,EAAA,EAAgC,aAEtD2C,EAAkB,IADlBlC,EAAI,IAAId,KAAKD,IACP+C,SAAgB,EAAIhC,EAAEgC,gBAChChC,EAAE6B,QAAQ7B,EAAEK,UAAY6B,EAAI,GACxBC,EAAQzC,EAAOM,EAAGT,GACtBS,EAAE6B,QAAQ7B,EAAEK,UAAY,GAEjB,CACH8B,MAAAA,EACAC,KAHO1C,EAAOM,EAAGT,IAqHE,SAAdkD,EAAwBxD,OAC7ByD,EAAK1D,EAAIC,GACT0D,EAAK,IAAIzD,KAAKwD,EAAGzC,cAAeyC,EAAGvC,WAAYuC,EAAGrC,WAClDuC,EAAK,IAAI1D,KAAKwD,EAAGzC,cAAe,EAAG,GACnCD,EAAI6C,KAAKC,OAAOH,EAAKC,GAAM,cACxBC,KAAKE,MAAM/C,GAAK4C,EAAGZ,SAAW,EAAI,IAAM,GFxX5C,+CCKmB,SAAUgB,UACxBA,EAAI,GAAM,GAAKA,EAAI,KAAQ,GAAMA,EAAI,KAAQ,UAQnC,SAAU1B,GACxBC,EAAMD,EAAIE,MAAM,8CACT,MAAPD,KACU,IAAVA,EAAI,IAAsB,IAAVA,EAAI,IAAsB,IAAVA,EAAI,8DAmDlB,SAAUtC,OAC5BgE,GAAW,IAAI/D,MAAOe,uBACpBoB,EAAOpC,KAAOwC,EAAWxC,KAExBgE,IADM,IAAI/D,KAAKD,GAAIgB,iBCqKjBsC,EAAa,SAAA,EAAA,EAAA,GAAUD,+BAAV,EAAA,EAAc,EAAGrD,+BAAjB,EAAA,EAAsB,IAAIC,KAAQK,qBAAlC,SAClBS,EAAIhB,EAAIC,UACZe,EAAE6B,QAAQ7B,EAAEK,UAAYiC,GACjB5C,EAAOM,EAAGT,GAAM,eA6Fd2D,EAAmB,SAAUjE,WAClCyD,EAAK1D,EAAIC,GACTsC,EAAM,GACNe,EAAI,EACJa,GAAU,EACVC,EAAOC,EAAaX,GACpBY,EAAQZ,EAAGvC,WAAa,EACxBoD,EAASb,EAAGzC,cAAgB,IAAMa,EAASwC,EAAO,EAAG,GAAK,IACrDE,EAAI,EAAGA,EAAIJ,EAAO,EAAGI,IAAK,KAC3BC,EAAKxB,EAAcsB,EAASC,GAC5BpB,EAAOqB,EAAGrB,KACVlC,EAAMkC,KAAUkB,GAASH,GACzBb,IACAa,GAAU,GAC8B,GAAjC,IAAIjE,KAAKqE,EAASC,GAAGxB,UAC5BM,IAEJf,EAAIgC,EAASzC,EAAS0C,EAAG,EAAG,WACrBC,OACHvB,EAAGI,EACHtC,EAAGoD,WAGJ7B,GAOE8B,EAAe,SAAUpE,GAC9ByD,EAAK1D,EAAIC,UACN,IAAIC,KAAKwD,EAAGzC,cAAeyC,EAAGvC,WAAa,EAAG,GAAGE,+DAjWxC,SAAUpB,UACnBa,EAASb,GAAImB,WAEJ,SAAUnB,UACnBa,EAASb,GAAIqB,aAEF,SAAUrB,UACrBa,EAASb,GAAIuB,eAEF,SAAUvB,UACrBa,EAASb,GAAIyB,oBAEG,SAAUzB,UAC1Ba,EAASb,GAAI2B,qBAOD,SAAU3B,GAEzByE,EADI1E,EAAIC,GACFkB,kBACHuD,EAAI,EAAI,EAAIA,EAAI,EAAI,EAAIA,EAAI,EAAI,EAAI,cA4B5B,SAAUC,EAAK1E,UACvBa,EAASb,GAAI2E,OAAOC,KAAK/D,EAASb,IAAK6E,KAAK,SAAAN,UAAKA,EAAEO,OAAO,KAAOJ,GAAOH,IAAMG,GAAOH,EAAEO,OAAO,GAAKP,EAAEO,OAAO,KAAOJ,GAAc,UAANH,GAAwB,KAAPG,cAQhI,SAAU1E,UACtB2E,OAAOI,OAAOlE,EAASb,IAAKgF,MAAM,EAAG,aAOxB,SAAUhF,GAC1BiF,EAAIpE,EAASb,iBACViF,EAAEtD,YACFsD,wCAoBsB,SAAA,EAAA,GAAUjF,+BAAV,EAAA,EAAe,IAAIC,KAAQiF,+BAA3B,EAAA,EAAoC,UAE1D,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MADxDnF,EAAIC,GAC4DkB,YAAcgE,eAU/D,SAAUX,EAAV,EAAA,GAA2BY,qBAA3B,gBACb,IAANZ,IAASA,EAAI,GACN,EAAJA,GAASA,EAAI,gCAFG,EAAA,EAAsB,KAEZ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKA,EAAI,QAAoBa,IAAfD,EAA2B,eAAiBA,gBAUlG,SAAUZ,EAAGY,UAC1B,EAAJZ,GAASA,EAAI,GAAK,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAAMA,EAAI,GAAK,SAAqBa,IAAfD,EAA2B,gBAAkBA,kCAgB1H,sCAAa9E,2BAAAA,sBACnCL,EAAKI,EAAYC,EAAM,cAAcL,GACrCM,EAAKF,EAAYC,EAAM,cAAcI,aAClC,CACHyC,MAAOzC,EAAO,IAAIR,KAAKD,EAAGgB,cAAehB,EAAGkB,WAAY,GAAIZ,GAC5D6C,KAAM1C,EAAO,IAAIR,KAAKD,EAAGgB,cAAehB,EAAGkB,WAAa,EAAG,GAAIZ,wBASrC,kBACvB0C,EAAc,IAAI/C,KAAQ,cAAciD,yBAOlB,kBACtBF,EAAc,IAAI/C,KAAQ,cAAckD,uBAOnB,SAAUnD,GAClCe,EAAIhB,EAAIC,UACLS,EAAOM,EAAG,YAAc,sBAQJ,SAAUf,GACjCe,EAAIhB,EAAIC,UACZe,EAAEsE,SAAStE,EAAEG,WAAa,GAC1BH,EAAE6B,QAAQ,GACV7B,EAAE6B,QAAQ7B,EAAEK,UAAY,GACjBX,EAAOM,EAAG,6BASQ,SAAU2C,EAAIC,GACnCrB,EAAMgD,SAAS1B,KAAK2B,IAAI,IAAItF,KAAKyD,GAAM,IAAIzD,KAAK0D,IAAO,cACpDhD,MAAM2B,GAAO,EAAIA,eAQD,SAAUtC,UAC1BS,EAAO,IAAIR,KAAKF,EAAIC,GAAM,SAAc,4EA4DlB,SAAA,EAAA,EAAA,OAAUqD,+BAAV,EAAA,EAAc,EAAGrD,+BAAjB,EAAA,EAAsB,IAAIC,KAAQK,+BAAlC,EAAA,EAAuC,eAC9CiD,EAAevD,GAA/BkD,IAAAA,MAAOC,IAAAA,YACRE,EAKEE,EAAeD,EAAe,EAAJD,EAAW,EAAJA,EAAQF,EAAOD,GAAQ5C,GAJpD,CACH4C,MAAAA,EACAC,KAAAA,mBAWkB,SAAA,EAAA,EAAA,GAAUE,+BAAV,EAAA,EAAc,EAAGrD,+BAAjB,EAAA,EAAsB,IAAIC,KAAQK,+BAAlC,EAAA,EAAuC,aAC7DS,EAAIhB,EAAIC,UACZe,EAAEyE,YAAYzE,EAAEC,cAAgBqC,GACzB5C,EAAOM,EAAGT,oBASU,SAAA,EAAA,EAAA,GAAU+C,+BAAV,EAAA,EAAc,EAAGrD,+BAAjB,EAAA,EAAsB,IAAIC,KAAQK,+BAAlC,EAAA,EAAuC,aAC9DS,EAAIhB,EAAIC,UACZe,EAAEsE,SAAStE,EAAEG,WAAamC,GACnB5C,EAAOM,EAAGT,kBAQQ,SAAUmF,EAAMzF,EAAhB,OAAoBM,+BAApB,EAAA,EAAyB,iBAC7CmF,EAAM,MAAO,GAEd1E,EAAIhB,EAAIC,GAERiD,EAAa,IAATwC,EAAa,EAAIA,EACrBlB,EAAmB,IAAfxD,EAAEgC,SAAiB,EAAIhC,EAAEgC,gBAC7BE,IAAMsB,GAAGxD,EAAE6B,QAAQ7B,EAAEK,WAAamD,EAAItB,IACnCxC,EAAOM,EAAGT,iBAOO,SAAUN,GAC9Be,EAAIN,EAAOV,EAAIC,GAAK,qBACbiE,EAAiBlD,GAChBA,GAAGkC,kEA0DW,SAAUjD,OAChCyD,EAAK1D,EAAIC,GACT+D,EAAIN,EAAGzC,cACPyD,EAAIhB,EAAGvC,WAAa,EACpBH,EAAI0C,EAAGrC,UACPkB,EAAMkB,EAAY,CAACO,EAAGU,EAAG1D,GAAGoB,KAAK,SACjCsC,EAAI,SACGnC,EAEHrB,EAAQwD,EAAI,EAAI,EAAIA,EAAI,GAAK,EAAI,GACjCgB,GAAajC,EAAY,CAACO,EAAG9C,EAAO,GAAGkB,KAAK,aAE7B,EADT,IAAIlC,KAAK8D,EAAG9C,EAAO,GACrB8B,WAAc0C,GAAQ,GACvBA,mBAUgB,SAAUtB,EAAMnE,UACtC0F,UAAUhF,OACRiF,EAAIzD,OAAMiC,EAAW,GAAGS,QAC1BgB,IAAI,SAAAzB,UAAQ,IAAIlE,MAAMD,EAAK,IAAIC,KAAKD,GAAMC,KAAK4F,OAAS,MAAW1B,GAAMzB,uBACzEkD,IAAI,SAAAE,UACDA,EACKC,MAAM,QACNH,IAAI,SAAArB,UAAK1C,EAAS0C,EAAG,EAAG,KACxBpC,KAAK,OAEb6D,OAAO,GATkB,oBAmBH,SAAUC,EAAWC,OAE3CD,EAAW,MAAO,GAEV,SAATE,EAAUnE,EAAGuC,UAAM,IAAItE,MAAM,IAAIA,KAAK+B,GAAS,MAAJuC,GAAc7B,qBAAqBvC,QAAQ,MAAO,SAE7FiG,GAAkB,IAAInG,KAAK,IAAIA,KAAKgG,GAAWvD,sBAE/C2D,EAAeH,GAAW,IAAIjG,KAAK,IAAIA,KAAKiG,GAASxD,uBAAyB,IAAIzC,MAAK,IAAIA,MAAOyC,yBAElG0D,GAAmBC,EAAc,MAAO,CAACF,EAAO,IAAIlG,KAAKiG,EAAU,IAAIjG,KAASgG,GAAY,IAEhGA,EAAYG,EAAiBC,EAAe,IAAIpG,KAAKmG,GAAkB,IAAInG,KAAKiG,EAAUG,GAAgB,IAAIpG,MAE9GiG,EAAUE,EAAiBC,EAAe,IAAIpG,KAAKiG,EAAUG,GAAgB,IAAIpG,MAAU,IAAIA,KAAKmG,GAEhGE,EAAUhB,SAAS1B,KAAK2B,IAAIa,EAAiBC,GAAgB,OAAY,SAEtEnE,MAAMoE,GACRC,KAAK,GACLC,OAAO,SAACC,EAAGC,EAAGnC,qBAAUkC,IAAGN,EAAOF,EAAW1B,MAAK,kBAO/B,SAAUzD,OAC9BwB,EAAMJ,MAAM,IACXqE,KAAK,GACLX,IAAI,SAACe,EAAGpC,GACDkB,EAAOrC,EAAWmB,EAAGtC,OAAOnB,IAAQ,IAAIb,MAAOe,eAAgB,qBAC5DyE,EAAKvC,MAAM8B,MAAM,EAAG,GAAK,IAAMS,EAAKtC,KAAK6B,MAAM,EAAG,YAE7D1C,GAAOA,EAAI5B,QAAkC,OAAxB4B,EAAI,GAAGsE,OAAO,EAAG,IACtCtE,EAAI0D,OAAO,EAAG,GAEX1D,iBAOkB,SAAUtC,OAC/B6G,GAAU,IAAI5G,KAAKF,EAAIC,IACvB8G,GAAO,IAAI7G,KACX8G,EAAOzB,UAAUwB,EAAMD,GAAU,KACjCtF,EAAS+D,SAASyB,EAAO,IACzB1F,EAAOiE,SAASyB,EAAO,aACpBA,GAAQ,GACT,KACAxF,EAAS,GACTA,EAAS,MACTkB,EAAQ1C,EAAIC,IACZqB,EAAO,MACPsB,EAAY5C,EAAIC,IAChB,MAAQS,EAAOV,EAAIC,GAAK,SACxBc,EAAKf,EAAIC,MAASc,IAClBL,EAAOV,EAAIC,GAAK,eAChBS,EAAOV,EAAIC,GAAK,2BAIL,SAAUA,EAAV,OAAcgH,+BAAd,EAAA,EAAoB,0BACX,EAAtBhH,EAAGE,QAAQ,QAAc,CACrBa,EAAI,IAAId,MAAKD,EAAGgF,MAAM,GAAI,WACvBvE,EAAOM,EAAGiG,GACd,OAAuB,EAAnBhH,EAAGE,QAAQ,KACXO,EAAOT,EAAG+F,MAAM,KAAK5D,KAAK,KAAM6E,GAEhCvG,EAAOT,EAAIgH,cASD,SAAUC,EAAYC,OACvCC,EAAQC,YAAY,eAGhBC,EAFc,IAAIpH,KAAKgH,EAAW9G,QAAQ,KAAM,MAAMmH,UAAY,IACvDrH,KAAKsH,MAAM,IAAItH,MAAU,SAE/B,GAALoH,UAaAG,cAAcL,GACdA,EAAQ,KACRD,GAAMA,KACC,MAfHnG,EAAI6C,KAAK6D,MAAMJ,EAAI,OACnBK,EAAI7F,EAAS+B,KAAK6D,MAAOJ,EAAI,MAAS,MAAO,EAAG,GAChD5C,EAAI5C,EAAS+B,KAAK6D,MAAOJ,EAAI,MAAS,MAAQ,GAAI,EAAG,GACrDrF,EAAIH,EAASwF,EAAI,GAAI,EAAG,GAC5BH,GACIA,EAAG,CACC/F,KAAMJ,EACNM,KAAMqG,EACNnG,OAAQkD,EACRhD,OAAQO,KAQrB,QCpgBMvB,EAAS,sCAAaJ,2BAAAA,sBAC3BL,EAAKI,EAAYC,EAAM,uBAAuBL,GAC9CM,EAAKF,EAAYC,EAAM,uBAAuBI,OAC9C6B,EAAM,CACNqF,EAAG1F,OAAOjC,EAAGgB,eACb+C,EAAG9B,OAAOjC,EAAGgB,eACb4G,EAAG/F,EAAS7B,EAAGkB,WAAa,EAAG,EAAG,GAClCH,EAAGc,EAAS7B,EAAGoB,UAAW,EAAG,GAC7BsG,EAAG7F,EAAS7B,EAAGsB,WAAY,EAAG,GAC9BuG,EAAGhG,EAAS7B,EAAGsB,WAAY,EAAG,GAC9BmD,EAAG5C,EAAS7B,EAAGwB,aAAc,EAAG,GAChCQ,EAAGH,EAAS7B,EAAG0B,aAAc,EAAG,GAChCoG,EAAGhF,EAAiB9C,EAAI,KACxBiD,EAAGH,EAAiB9C,GACpBqH,EAAGxE,EAAK7C,WAEZM,EAAKA,EAAGH,QAAQ,+EAAgF,SAAUK,OAElGuH,EAAIvH,EAAEsE,OAAO,GAEbkD,EAAMxH,EAAEE,cACRF,EAAEyH,SAAS,KAEJzH,EAAEwE,MAAM,GAAI,GACZ,CAAC,IAAK,KAAKiD,SAASF,GAEpBvH,EAAEL,QAAQ,IAAI+H,OAAO,KAAOH,EAAI,MAAO,KAAM,SAAAxH,UAAK+B,EAAIyF,GAAGnB,OAAO,EAAIrG,EAAEG,UAG/D,GAAPsH,GAAa,CAAC,IAAK,IAAK,KAAKC,SAASF,GAAsBzF,EAAIyF,GAArBI,OAAO7F,EAAIyF,gDCvCjD,SAAU/H,EAAIqD,OAC9B9C,EAAImF,cACHnF,EAAEG,OAAQ,OAAQ,IAAIT,KAEX,GAAZM,EAAEG,QAA+B,iBAATH,EAAE,KAC1B8C,EAAI9C,EAAE,GACNP,OAAKoF,GAELrE,EAAIhB,EAAIC,UACZe,EAAE6B,QAAQ7B,EAAEK,gBAAmBgE,IAAN/B,EAAkB,EAAIA,KACvCtC,sBAQsB,SAAUf,OACpCe,EAAIhB,EAAIC,UAEZe,EAAE6B,QAAQ7B,EAAEK,UAAY,GACxBZ,GAAKO,EACLA,EAAE6B,QAAQ7B,EAAEK,UAAY,GACjB,CAAEgH,OAAQ5H,EAAG6H,OAAQtH,qBAQA,SAAUf,GAClCe,EAAIhB,EAAIC,SACL,CACHsI,OAAQ,IAAIrI,KAAKc,EAAEC,cAAeD,EAAEG,WAAYH,EAAEK,UAAW,EAAG,EAAG,GACnEmH,KAAM,IAAItI,KAAKc,EAAEC,cAAeD,EAAEG,WAAYH,EAAEK,UAAW,GAAI,GAAI,qBAU7C,SAAUoH,EAAQC,UACrCnD,SAAS1B,KAAK2B,IAAIiD,EAASC,GAAU,UC9ChD,SAASC,SACCC,gBAAgBD,GAAQ,MAAM,IAAIE,UAAU,qCAEtDF,EAAMG,iBAEFpI,OAAAA,GAEGqI,GAEAC,GAEAC,GCTc,SAARC,EAAkBC,EAAGlH,OACzB,IAAIuC,KAAKvC,EACVkH,EAAE3E,GAAK2E,EAAE3E,IAA0B,oBAApB2E,EAAE3E,GAAG4E,WAAmCF,EAAMC,EAAE3E,GAAIvC,EAAEuC,IAAO2E,EAAE3E,GAAKvC,EAAEuC,UAElF2E,EA2BW,SAATE,EAAmB7I,EAAGC,MAC3BD,IAAMC,EAAG,OAAO,KAChBD,aAAaN,MAAQO,aAAaP,KAAM,OAAOM,EAAE+G,YAAc9G,EAAE8G,cAChE/G,IAAMC,GAAmB,WAAb6I,EAAO9I,IAA+B,WAAb8I,EAAO7I,GAAiB,OAAOD,IAAMC,KAC3ED,EAAEsI,YAAcrI,EAAEqI,UAAW,OAAO,MACpCjE,EAAOD,OAAOC,KAAKrE,UACnBqE,EAAKlE,SAAWiE,OAAOC,KAAKpE,GAAGE,QAC5BkE,EAAK0E,MAAM,SAAAvB,UAAKqB,EAAO7I,EAAEwH,GAAIvH,EAAEuH,MCQpB,SAATwB,EAAmBhJ,EAAGwH,UACxBA,EAAIxH,EAAEiG,OAAO,SAACC,EAAGC,UAAOD,EAAEb,IAAI,SAAArB,UAAKA,EAAEwD,KAAIE,SAASvB,EAAEqB,IAAMtB,cAAQA,IAAGC,KAAK,MAAU,IAAI8C,IAAIjJ,UFpCxF,IAAImI,EC6CNe,EAAW,SAAXA,EAAqBhD,EAAGC,OAExBnC,EADLmC,EAAIA,GAAK,OACJnC,KAAKkC,EACNvE,MAAMwH,QAAQjD,EAAElC,KAA6D,WAAtDI,OAAOkE,UAAUM,SAASQ,KAAKlD,EAAElC,IAAIS,MAAM,GAAI,GACtEyE,EAAShD,EAAElC,GAAKmC,EAAEnC,GAAKrC,MAAMwH,QAAQjD,EAAElC,IAAM,GAAK,IAElDmC,EAAEnC,GAAKkC,EAAElC,UAGVmC,yDAvDkB,sCAAanG,2BAAAA,sBAElCqJ,EAAIrJ,EAAEG,UAED,GAALkJ,EAAQ,MAAMC,MAAM,yCAEf,GAALD,EAAQ,OAAOrJ,EAAE,MAEZ,GAALqJ,EAAQ,OAAOX,EAAM1I,EAAE,GAAIA,EAAE,SAEf,EAAXA,EAAEG,WACLH,EAAEyF,OAAO,EAAG,EAAGiD,EAAM1I,EAAE,GAAIA,EAAE,KACb,GAAZA,EAAEG,OAAa,OAAOuI,EAAM1I,EAAE,GAAIA,EAAE,mBAuB5B,SAAUkG,OAEjBlC,EADLuF,EAAI,OACCvF,KAAKkC,EACVqD,EAAEvF,GAAKkC,EAAElC,UAENuF,wBAuBc,SAAUC,EAAMC,OACjCC,EAAM,UACE,SAARC,EAAkBC,EAAMC,OACnB,IAAI7F,EAAI,EAAGA,EAAI4F,EAAKzJ,OAAQ6D,IAAK,KAC9B8F,EAAQD,EAAOA,EAAOJ,EAAYG,EAAK5F,GAAG6F,KAAOD,EAAK5F,GAAG6F,KACzDD,EAAK5F,GAAG+F,SACRJ,EAAMC,EAAK5F,GAAG+F,SAAUD,GAEpBD,EACAH,EAAIM,KAAKF,GAETJ,EAAIM,KAAKJ,EAAK5F,GAAG6F,OAKjCF,CAAM,CAACH,IACAE,YAQa,SAAUO,EAAKtD,OAE9B,IAAIa,IADS,iBAAPb,UAAwBsD,EAAItD,GACzBsD,GACQ,mBAAPtD,GAAqBA,EAAGsD,EAAIzC,KAE5B7F,MAAMwH,QAAQxC,IACrBA,EAAGe,SAASF,YAFLyC,EAAIzC,MC7CV0C,EAAc,SAAdA,EAAwBC,EAAV,EAAA,OAAeC,+BAAf,EAAA,EAAoB,KAAMC,+BAA1B,EAAA,EAAiC,aACjDF,EAAIG,OAAO,SAAAtG,UAAKA,EAAEqG,KAAUD,IAAI/E,IAAI,SAAArB,iBAAWA,OAAG+F,SAAUG,EAAYC,EAAKnG,EAAEoG,GAAIC,QA8DjFE,EAAU,SAAVA,EAAoBJ,EAAV,OAAeK,+BAAf,EAAA,EAAuB,SACnCL,EAAIlE,OAAO,SAACjG,EAAGyK,UAAMzK,EAAE0K,OAAe,EAARF,GAAa7I,MAAMwH,QAAQsB,GAAKF,EAAQE,EAAGD,EAAQ,GAAKC,IAAI,KC/HrG,SAASE,SACCvC,gBAAgBuC,GAAO,MAAM,IAAItC,UAAU,qCAErDsC,EAAKrC,8CDDgB,SAAUtI,EAAGC,EAAGuH,UAC1BxH,EAAE0K,OAAOzK,EAAEqK,OAAO,SAAAtG,UAAMwD,GAAKxH,EAAEqF,IAAI,SAAArB,UAAKA,EAAEwD,KAAIE,SAAS1D,EAAEwD,KAAOxH,EAAE0H,SAAS1D,oBAY1D,SAAUhE,EAAGC,EAAGuH,UACjCxH,EAAEsK,OAAO,SAAAxD,UAAMU,EAAIvH,EAAEoF,IAAI,SAAArB,UAAKA,EAAEwD,KAAIE,SAASZ,EAAEU,IAAMvH,EAAEyH,SAASZ,aAYrD,SAAU9G,EAAGC,EAAGuH,SAC3B,YAAIxH,KAAMC,IAAGqK,OAAO,SAAAtG,UAAM,CAAChE,EAAGC,GAAG8I,MAAM,SAAAjC,UAAMU,EAAIV,EAAEzB,IAAI,SAAArB,UAAKA,EAAEwD,KAAIE,SAAS1D,EAAEwD,IAAMV,EAAEY,SAAS1D,YAWtF,SAAUhE,EAAGwH,UACrBxH,EAAEiG,OAAO,SAACC,EAAGC,UAAMD,GAAKsB,EAAIrB,EAAEqB,IAAM,EAAIrB,IAAI,kCAgCjC,SAAUgE,UACrBA,EAAI9G,KAAK6D,MAAM7D,KAAKuH,SAAWT,EAAIhK,mCAUN,SAAU0K,EAAKC,EAAf,GAAoBhI,+BAApB,EAAA,EAAwB,SACrDnB,MAAMoJ,KAAK,CAAE5K,OAAQ2C,GAAK,kBAAMO,KAAK6D,MAAM7D,KAAKuH,UAAYE,EAAMD,EAAM,IAAMA,wBAUvD,SAAU9C,EAAOC,EAAjB,WAAsBP,+BAAtB,EAAA,EAA4B,EAEtD0C,EAAMxI,MAAMqG,EAAMD,EAAQ,GACzB/B,KAAK,GACLX,IAAI,SAACe,EAAGpC,UAAM+D,EAAQ/D,IACvBlB,EAAI2E,EAAM0C,EAAIhK,OAASgK,EAAIhK,OAASsH,EACpC1F,EAAM,GACHA,EAAI5B,QAAU2C,GAAG,KAChB8H,EAAST,EAAI9G,KAAK6D,MAAM7D,KAAKuH,SAAWT,EAAIhK,SAC/C4B,EAAI2F,SAASkD,IAAW7I,EAAIiI,KAAKY,UAE/B7I,SAUU,SAAUgG,EAAOiD,EAAMC,UACjCtJ,MAAMoJ,KAAK,CAAE5K,QAAS6K,EAAOjD,GAASkD,EAAO,GAAK,SAAC7E,EAAGpC,UAAM+D,EAAQ/D,EAAIiH,uBAkB5D,SAAAd,UAAOA,EAAIG,OAAOY,2BAST,SAAClL,EAAGwH,EAAGiD,UAAMzK,EAAEiG,OAAO,SAACC,EAAGC,UAAQsE,EAAItE,EAAEqB,KAAOiD,EAAItE,IAAMqB,GAAKtB,EAAI,EAAIA,GAAI,YAQnF,SAAUiE,EAAKgB,OAC9BC,EAAWzJ,2BAAIwD,WAAW4D,MAAM,SAAA/E,UAAM5D,MAAMiL,WAAWrH,KAAOsH,SAAStH,KACvEuH,GAAQH,EAAWjG,UAAmBgF,GAAThK,cACzBiL,6BAAejG,WAAagG,EAAKhB,EAAI9E,IAAkB,mBAAP8F,EAAoBA,EAAK,SAAAK,UAAOA,EAAIL,KAAOhB,GAAKlE,OAAO,SAACwF,EAAKD,UAAQC,IAAMD,GAAS,GAAKD,cAS3H,SAACpB,EAAD,OAAMuB,+BAAN,EAAA,EAAkB,WAAQvB,EAAI9E,IAAI,SAAAoF,UAAKA,EAAEpF,IAAI,SAAAsG,oBAASA,SAAM/J,KAAK8J,KAAY9J,KAAK,kBASlF,SAAC5B,EAAGwH,EAAGiD,UAAMzK,EAAEiG,OAAO,SAACC,EAAGC,EAAGnC,UAAQyG,EAAItE,EAAEqB,KAAOiD,EAAItE,IAAMqB,eAAStB,IAAGlC,IAAKkC,GAAI,WAQtF,SAAUiE,EAAKyB,UACzBjK,MAAM0B,KAAKE,KAAK4G,EAAIhK,OAASyL,IAC/B5F,KAAK,GACLC,OAAO,SAACC,EAAGE,EAAGpC,UAAOkC,EAAE8D,KAAKG,EAAI1F,MAAMT,EAAI4H,GAAM5H,EAAI,GAAK4H,IAAO1F,GAAI,mBAQhD,SAAUiE,EAAK0B,EAAUC,GAClD3B,EAAI1E,OAAOoG,EAAU,EAAG1B,EAAI1E,OAAOqG,EAAU,EAAG3B,EAAI0B,IAAW,YAQ7C,SAAU1B,EAAK0B,EAAUC,GAC3C3B,EAAI2B,GAAY,CAAC3B,EAAI0B,GAAY1B,EAAI0B,GAAY1B,EAAI2B,IAAY,UAOhD,SAAU3B,EAAK0B,EAAUC,GAC1C3B,EAAI1E,OAAOqG,EAAU,EAAG3B,EAAI1E,OAAOoG,EAAU,GAAG,qBAQrB,SAAU1B,EAAKhG,UACnCxC,MAAMoJ,KAAK,IAAI9B,IAAIkB,EAAI9E,IAAI,SAAArB,UAAKA,EAAEG,OAAQ8B,OAAO,SAACC,EAAGC,UAAOD,EAAE8D,KAAKG,EAAIG,OAAO,SAAAtG,UAAKA,EAAEG,KAASgC,KAAKD,GAAI,cAQ1F,SAAUiE,WAErB,IAAInG,EAAI,EAAGA,EAAImG,EAAIhK,OAAQ6D,QACvB,IAAIwD,EAAIxD,EAAI,EAAGwD,EAAI2C,EAAIhK,OAAQqH,OAC5BqB,EAAOsB,EAAInG,GAAImG,EAAI3C,WACZ,SAIZ,EACT,MAAOuE,UACE5B,EAAIhK,SAAW6I,EAAOmB,GAAKhK,eASrB,SAAUgK,EAAKxD,OAC3B,IAAI3C,EAAImG,EAAIhK,OAAS,EAAQ,GAAL6D,EAAQA,OACf,mBAAP2C,EACPA,EAAGwD,EAAInG,KAAOmG,EAAI1E,OAAOzB,EAAG,QACzB,GAAIrC,MAAMwH,QAAQxC,IACC,EAAtBA,EAAGhH,QAAQwK,EAAInG,KAAYmG,EAAI1E,OAAOzB,EAAG,QACtC,GAAImG,EAAInG,KAAO2C,EAClBwD,EAAI1E,OAAOzB,EAAG,QACX,GAAwD,WAApDI,OAAOkE,UAAUM,SAASQ,KAAKzC,GAAIlC,MAAM,GAAI,GAAiB,KAE5D+C,EADLjC,EAAO4E,EAAInG,OACNwD,KAAKb,EACNhF,MAAMwH,QAAQxC,EAAGa,KACa,EAA1Bb,EAAGa,GAAG7H,QAAQ4F,EAAKiC,KACnB2C,EAAI1E,OAAOzB,EAAG,GAGd2C,EAAGa,KAAOjC,EAAKiC,IACf2C,EAAI1E,OAAOzB,EAAG,OE7Pd,SAAXgI,EAAW,OAAUC,+BAAV,EAAA,EAAgBC,OAAOC,SAASC,gBAEzCH,EAAIvE,SAAS,KACduE,EACKzG,MAAM,KAAK,GACXxD,MAAM,qBACNiE,OAAO,SAACC,EAAGC,UAAQD,EAAEC,EAAEX,MAAM,KAAK,IAAM6G,mBAAmBlG,EAAEX,MAAM,KAAK,IAAMU,GAAI,IACvF,GACR,MAAO6F,SACE,IAoBa,SAAfO,EAAyBC,EAASC,UACpCpI,OAAOC,KAAKmI,GAAQvG,OAAO,SAACC,EAAGC,UAAOD,IAAMA,IAAMqG,EAAU,IAAM,eAAUpG,cAAKsG,mBAAmBD,EAAOrG,OAAQoG,SDrC/G,IAAI5B,EEGnB,SAAS+B,SACCtE,gBAAgBsE,GAAO,MAAM,IAAIrE,UAAU,qCAErDqE,EAAKpE,kDDfoB,kBACd4D,OAAOC,SAASC,gBAOF,SAAA,GAAUH,+BAAV,EAAA,EAAgBC,OAAOC,SAASC,YAC9C,IAAIO,IAAIV,8BAwBW,SAAA,OAAU5H,+BAAV,EAAA,EAAiB,GACvCkF,EAAIyC,WACH3H,EAAKlE,OACHkE,EAAK4B,OAAO,SAACC,EAAGC,UAAQD,EAAEC,GAAKoD,EAAEpD,GAAKD,GAAI,IADxBqD,iCAoBC,SAAA,EAAA,EAAA,GAAUiD,+BAAV,EAAA,EAAmB,GAAID,+BAAvB,EAAA,EAAiCL,OAAOC,SAASC,KACvEQ,+BADsB,GAAA,SACOZ,EAASO,IAAaC,GAAWA,EAC9DK,EAAUN,EAAQ/G,MAAM,KAAK,UAC1B8G,EAAaO,EAASD,cAQR,SAAA,OAAUJ,+BAAV,EAAA,EAAmB,UACjCpI,OAAOC,KAAKmI,GACdvG,OAAO,SAACC,EAAGC,UAAOD,aAASC,cAAKsG,mBAAmBD,EAAOrG,MAAQ,IAClE1B,MAAM,iBAQa,SAAUwH,OAE9Ba,EAAMb,EAAIjK,MAAM,eAEhB8K,GAAOA,EAAI3M,OAAQ,CAEnB2M,EAAMA,EAAI,GAAGrI,MAAM,GAAI,GAEvBwH,EAAMA,EAAIrM,QAAQ,IAAMkN,EAAK,QAEzBC,EAAQD,EAAI9K,MAAM,4BAElB+K,GAASA,EAAM5M,QAEf4M,EAAQA,EAAMzC,OAAO,SAAAtG,UAA4B,GAAvBA,EAAEwB,MAAM,KAAKrF,SAEnC8L,EAAIvE,SAAS,OAEbqF,GADU3H,EAAI,IAAI6D,IAAI8D,IAAQnL,KAAK,KAAO,IAAMqK,EAAIzG,MAAM,KAAK,IACnDxD,MAAM,qBAAqBsI,OAAO,SAAAtG,UAA4B,GAAvBA,EAAEwB,MAAM,KAAKrF,UAG7D8L,EAAIzG,MAAM,KAAK,GAAK,IAAMJ,EAAI,IAAI6D,IAAI8D,IAAQnL,KAAK,MAEnDqK,EAAM,IAAMa,SAGhBb,aAcU,SAAUU,EAAKH,OAChCP,EAAM,aAAae,KAAKL,GACtBA,EAAI/M,QAAQ,aAAc,SAACwG,EAAGnG,OACtBgN,EAAMT,EAAOvM,iBACVuM,EAAOvM,GACPgN,IAEXN,SACCvI,OAAOC,KAAKmI,GAAQvG,OAAO,SAACiH,EAAK3G,UAAS2G,IAAQA,IAAQjB,EAAM,IAAM,eAAU1F,cAAOiG,EAAOjG,MAAS0F,qBAQlF,SAAUkB,EAAV,OAAmBlB,+BAAnB,EAAA,EAAyBE,SAASC,SAEhC,IAA1BH,EAAItM,QAAQwN,KAAyC,IAAtBlB,EAAItM,QAAQ,KAAa,OAAOsM,MAE/D9B,EADW8B,EAAIzG,MAAM,KAAK,GACXA,MAAM,KACrB4H,EAAcjD,EAAIkD,UAAU,SAAA9H,UAAQA,EAAKC,MAAM,KAAK,KAAO2H,WAC1C,IAAjBC,EAA2BnB,GAC/B9B,EAAI1E,OAAO2H,EAAa,GACjBnB,EAAIzG,MAAM,KAAK,IAAM2E,EAAIhK,OAAS,IAAMgK,EAAIvI,KAAK,KAAO,kBAQxC,SAAA,EAAA,OAAU0L,+BAAV,EAAA,EAAgB,GAAIrB,+BAApB,EAAA,EAA0BC,OAAOC,SAASC,KAC7DmB,EAASnJ,OAAOC,KAAKiJ,OACpBC,EAAOpN,OAAQ,OAAO8L,MAED,IAAtBA,EAAItM,QAAQ,YACL4N,EAAOtH,OAAO,SAACiH,EAAK3G,UAAS2G,IAAQA,IAAQjB,EAAM,IAAM,eAAU1F,cAAO+G,EAAI/G,MAAS0F,OAE1FY,EAAUZ,EAAIzG,MAAM,KAAK,GACzBuH,EAAQ3I,OAAOoJ,OAAOxB,EAASC,GAAMqB,UAElClJ,OAAOC,KAAK0I,GAAO9G,OAAO,SAACiH,EAAK3G,UAAS2G,IAAQA,IAAQL,EAAU,IAAM,eAAUtG,cAAOwG,EAAMxG,MAASsG,UAOnG,SAAA,yCAAA,EAAA,EAAgBX,OAAOC,SAASC,MACpCpK,MAAM,2EAOK,SAAUiK,OAE9BvC,EAAM,OAGe,IAFrBuC,EAFAA,EAAMA,GAAOE,SAASC,MAIlBzM,QAAQ,KAAY,EAEC,GAArBsM,EAAItM,QAAQ,OAAYsM,EAAMA,EAAIxH,MAAM,EAAGwH,EAAI9L,OAAS,YAExDsN,EAAOxB,EAAIzG,MAAM,KAAK,GAAGA,MAAM,KAE1BxB,EAAI,EAAGA,EAAIyJ,EAAKtN,OAAQ6D,IAAK,KAE9B0J,EAAOD,EAAKzJ,GAAGwB,MAAM,KAEzBkE,EAAIgE,EAAK,IAAMC,UAAUD,EAAK,YAG/BhE,iBAOkB,SAAUuC,OAE/BlK,EAAM,OACe,IAFrBkK,EAAMA,GAAOE,SAASC,MAElBzM,QAAQ,YACLoC,UAGP6L,EADW3B,EAAIzG,MAAM,KAAK,GACNA,MAAM,KACrBxB,EAAI,EAAGlB,EAAI8K,EAASzN,OAAQ6D,EAAIlB,EAAGkB,IAAK,KACzCuB,EAAOqI,EAAS5J,GAAGwB,MAAM,KAC7BzD,EAAIwD,EAAK,IAAMoI,UAAUpI,EAAK,WAE3BxD,iBAMkB,WACC,WAAtBoK,SAAS0B,UAAuB1B,SAASvM,QAAQ,WAAauM,SAASC,KAAK5G,MAAM,MAAM,kBAQpE,SAAUuG,GAE9BjJ,EAAIiJ,EAAE/J,MADF,uCAEDc,EAAIA,EAAE,GAAK,MEnOD,SAARQ,EAAkBR,EAAGgL,eACbjJ,IAAbiJ,EAA+BhL,EAC5B8E,OAAOvE,KAAKC,MAAMR,EAAI,KAAOgL,GAAY,IAAM,MAAQA,GAAY,IAUjE,SAAPC,EAAiBC,EAAMhO,EAAGC,EAAGgO,OAC3BC,EAAIC,MAEJD,EAAKlO,EAAE4I,WAAWpD,MAAM,KAAK,GAAGrF,OAClC,MAAO4L,GACLmC,EAAK,MAGLC,EAAKlO,EAAE2I,WAAWpD,MAAM,KAAK,GAAGrF,OAClC,MAAO4L,GACLoC,EAAK,MAELC,EAAS/K,KAAKgL,IAAI,GAAIhL,KAAKyH,IAAIoD,EAAIC,IACnCG,EAAQ,CACRhL,GAAOD,KAAKC,MAAM8K,EAASpO,GAAKqD,KAAKC,MAAM8K,EAASnO,IAAMmO,EAAQH,GAClE3K,GAAOD,KAAKC,MAAM8K,EAASpO,GAAKqD,KAAKC,MAAM8K,EAASnO,IAAMmO,EAAQH,GAClE3K,EAAOD,KAAKC,MAAM8K,EAASpO,GAAKqD,KAAKC,MAAM8K,EAASnO,IAAOmO,EAASA,GAASH,GAC7E3K,EAAMD,KAAKC,MAAM8K,EAASpO,GAAKqD,KAAKC,MAAM8K,EAASnO,GAAIgO,IAEvDnM,EAAMJ,OAAO4B,EAAMgL,EAAMN,GAAOC,GAAS,WACzCA,EACInM,EAAI4F,SAAS,KAAa5F,EAAI0D,MAAM,KAAK,GAAK,IAAM1D,EAAI0D,MAAM,KAAK,GAAG+I,OAAON,EAAO,IAChFnM,EAAM,KAAKyM,QAAQzM,EAAM,KAAK3B,OAAS8N,EAAO,GAE/CK,EAAMN,GAUD,SAAPQ,EAAiBxO,EAAGC,EAAGgO,UACzBF,EAAK,EAAG/N,EAAGC,EAAGgO,GAQD,SAAXQ,EAAW,EAAA,OAAUtE,+BAAV,EAAA,EAAgB,GAAI1C,qBAApB,aACf0C,EAAIhK,OAAQ,OAAO,KACN,GAAdgK,EAAIhK,OAAa,OAAOqO,EAAKrE,EAAI,GAAI,EAAG1C,MAE1B,GAAd0C,EAAIhK,OAAa,OAAOqO,EAAKrE,EAAI,GAAIA,EAAI,GAAI1C,QAE7B,EAAb0C,EAAIhK,WACPgK,EAAI1E,OAAO,EAAG,EAAG+I,EAAKrE,EAAI,GAAIA,EAAI,KAChB,GAAdA,EAAIhK,OAAa,OAAOqO,EAAKrE,EAAI,GAAIA,EAAI,GAAI1C,GAUpC,SAARiH,EAAkB1O,EAAGC,EAAGgO,UAC1BF,EAAK,EAAG/N,EAAGC,EAAGgO,GAQA,SAAZU,EAAY,EAAA,OAAUxE,+BAAV,EAAA,EAAgB,GAAI1C,qBAApB,aAChB0C,EAAIhK,OAAQ,OAAO,KACN,GAAdgK,EAAIhK,OAAa,OAAOuO,EAAMvE,EAAI,GAAI,EAAG1C,MAE3B,GAAd0C,EAAIhK,OAAa,OAAOuO,EAAMvE,EAAI,GAAIA,EAAI,GAAI1C,QAE9B,EAAb0C,EAAIhK,WACPgK,EAAI1E,OAAO,EAAG,EAAGiJ,EAAMvE,EAAI,GAAIA,EAAI,KACjB,GAAdA,EAAIhK,OAAa,OAAOuO,EAAMvE,EAAI,GAAIA,EAAI,GAAI1C,GAUlC,SAAXmH,EAAqB5O,EAAGC,EAAGgO,UAC7BF,EAAK,EAAG/N,EAAGC,EAAGgO,GAQG,SAAfY,EAAe,EAAA,OAAU1E,+BAAV,EAAA,EAAgB,GAAI1C,qBAApB,aACnB0C,EAAIhK,OAAQ,OAAO,KACN,GAAdgK,EAAIhK,OAAa,OAAOyO,EAASzE,EAAI,GAAI,EAAG1C,MAE9B,GAAd0C,EAAIhK,OAAa,OAAOyO,EAASzE,EAAI,GAAIA,EAAI,GAAI1C,QAEjC,EAAb0C,EAAIhK,WACPgK,EAAI1E,OAAO,EAAG,EAAGmJ,EAASzE,EAAI,GAAIA,EAAI,KACpB,GAAdA,EAAIhK,OAAa,OAAOyO,EAASzE,EAAI,GAAIA,EAAI,GAAI1C,GAUvC,SAATqH,EAAmB9O,EAAGC,EAAGgO,UAC3BF,EAAK,EAAG/N,EAAGC,EAAGgO,GAOC,SAAbc,EAAa,EAAA,OAAU5E,+BAAV,EAAA,EAAgB,GAAI1C,qBAApB,aACjB0C,EAAIhK,OAAQ,OAAO,KACN,GAAdgK,EAAIhK,OAAa,OAAO2O,EAAO3E,EAAI,GAAI,EAAG1C,MAE5B,GAAd0C,EAAIhK,OAAa,OAAO2O,EAAO3E,EAAI,GAAIA,EAAI,GAAI1C,QAE/B,EAAb0C,EAAIhK,WACPgK,EAAI1E,OAAO,EAAG,EAAGqJ,EAAO3E,EAAI,GAAIA,EAAI,KAClB,GAAdA,EAAIhK,OAAa,OAAO2O,EAAO3E,EAAI,GAAIA,EAAI,GAAI1C,GAStC,SAARuH,GAAkBlM,SACR,UAAZgG,EAAOhG,MAAyB1C,MAAMiL,WAAWvI,KAAOwI,SAASxI,IAyCtD,SAATmM,GAAmBzD,EAAK/D,EAAf,EAAA,EAAA,OAAoByH,+BAApB,GAAA,EAAyCC,+BAAzC,GAAA,EAAgEC,+BAAhE,GAAA,cAENvK,IAAR2G,GAA4B,MAAPA,EAAoB,MAMrB,GAJpB1J,EAAM0J,GAENzH,EAAS,KAELpE,QAAQ,OAAiC,EAApBmC,EAAInC,QAAQ,QACrCoE,EAAS,IACTjC,EAAMA,EAAIuE,OAAO,IAGhB2I,GAAMlN,IAEPqN,IAAepL,EAAS,IAExBsL,GAA8B,IAAtBvN,EAAInC,QAAQ,KAGpB2P,EAAa,IAFjB7H,OAAc5C,IAAR4C,EAAqB4H,EAAQ,EAAIvN,EAAI0D,MAAM,KAAK,GAAGrF,OAAUsH,GAE9CpE,KAAKC,MAAMxB,GAAO,IAAKuN,EAAQvN,EAAqBwB,GAAMxB,EAAU,GAAI2F,GAAO,IAA5CjC,MAAM,KAAK,GAEnE1D,EAAMwB,GAAMxB,EAAU,GAAI2F,GAAO,GAGjC8H,IADIA,EAAa,GAAP9H,GAAY4H,EAAQ,GAAKvN,EAAI0D,MAAM,KAAK,KAC/B,IAAI+I,OAAO9G,EAAK,GAC/B1F,GAAOmN,EAAcI,EAAI1P,QAAQ,uBAAwB,KAAO0P,IAAQC,EAAIpP,OAAS,IAAMoP,EAAM,IAE9FxL,GADPhC,EAAMqN,EAASxH,OAAO7F,GAAOA,IAdL,IAyCT,SAANyN,GAAgBvF,EAAK9F,OAC1BpC,EAAM,GACS,iBAARoC,EACPpC,EAAIoC,GAAO,EACJxC,MAAMwH,QAAQhF,KACrBpC,EAAMoC,EAAI8B,OAAO,SAACC,EAAGC,UACjBD,EAAEC,GAAK,EACAD,GACR,aAEH1B,EAASJ,OAAOI,OAAOyF,GAClBjG,EAAI,EAAGA,EAAIQ,EAAOrE,OAAQ6D,QAC1B,IAAIwD,KAAKzF,EACNyF,KAAKhD,EAAOR,KACZjC,EAAIyF,GAAKgH,EAAKzM,EAAIyF,GAAII,OAAOpD,EAAOR,GAAGwD,KAAO,WAInDzF,SD5PI,IAAI2K,EENnB,SAAS+C,UACCrH,gBAAgBqH,IAAO,MAAM,IAAIpH,UAAU,qCAErDoH,GAAKnH,sKDqJiC,SAAU6B,GACpC,IAAIxI,MAAMwI,EAAI,GAAGhK,QAAQyI,WAAWpD,MAAM,KAAKQ,KAAK,WACnDhC,EAAI,EAAGA,EAAImG,EAAIhK,OAAQ6D,QACvB,IAAI0L,EAAI,EAAGA,EAAIvF,EAAInG,GAAG7D,OAAQuP,IAC/BC,OAAOD,IAAMvF,EAAInG,GAAG0L,UAGrBC,6BAOyB,sCAAaxF,2BAAAA,wBACtC,UAAIA,GAAKlE,OAAO,SAACwF,EAAKD,UAAQC,EAAMD,GAAK,cAQ3B,SAAU1I,EAAG8M,eACrB/K,IAAN/B,EAAkB,GAAU,GAALA,EAAU8M,EAAS,IAAM,GAAU,GAAJ9M,EAAS,MAAQA,yBAgDvD,SAAU6D,SACZA,IAAfkJ,IAAAA,MAENjE,OAAc/G,KAFD+G,IAAAA,KAEa,EAAIA,SAD9BiE,EAAQA,EAAQ,IAAM,IAGTjQ,QAAQ,KAAM,IAAI6E,MAAM,EAAGoL,EAAMlQ,QAAQ,KAAO,EAAIiM,kBAqC/C,SAAUzB,EAAK9F,EAAMoD,OACnCqI,EAAQC,KAAK/I,MAAM+I,KAAKC,UAAU7F,IAClC8F,EAAY,GACZC,EAAQzB,EACRqB,EAAMzK,IAAI,SAAAE,UACClB,EAAK4B,OAAO,SAACkK,EAAIC,UAChBH,EAAUG,GACVH,EAAUG,GAAM5B,EAAKyB,EAAUG,GAAKxI,OAAOrC,EAAK6K,KAAQ,GAExDH,EAAUG,GAAMxI,OAAOrC,EAAK6K,KAAQ,EAExCD,EAAKvB,EAASuB,EAAI5K,EAAK6K,IAAO,IAE/B,KAEP3I,SAGG,CACHwI,UAAAA,EACAC,MAAAA,WASc,SAAUjG,EAAV,OAAeqD,+BAAf,EAAA,EAAqB,GACvCrD,EAAM8F,KAAK/I,MAAM+I,KAAKC,UAAU/F,IAC5BP,EAAM8F,GAAIvF,EAAKqD,EAAIjJ,MACnBgM,EAASjM,OAAOI,OAAOyF,GAAKhE,OAAO,SAACC,EAAGC,OACnCgE,EAAMmD,EAAIjJ,KAAKgB,IAAI,SAAArB,UACdsJ,EAAIgD,MACO,GAARnK,EAAEnC,KAASmC,EAAEnC,GAAK,GAEnBmC,EAAEnC,KAETkJ,GACY,GAAZI,EAAIU,KACEa,EACY,GAAZvB,EAAIU,KACJS,EACY,GAAZnB,EAAIU,KACJW,EACY,GAAZrB,EAAIU,KACJe,EACAF,GAPa1E,EAAKmD,EAAI7F,YAShCvB,EAAIsI,EAAKtI,EAAGgH,IAEb,aAECgD,MAAOjB,GAAOoB,EAAQ/C,EAAI7F,MACvBiC,cAUc,SAAUO,EAAKnI,EAAKyO,OAUhC/I,EATLzF,EAAM,OASDyF,IARgB,iBAAd+I,EACPxO,EAAIwO,GAAa,EACV5O,MAAMwH,QAAQoH,KACrBxO,EAAMwO,EAAUtK,OAAO,SAACC,EAAGC,UACvBD,EAAEC,GAAK,EACAD,GACR,KAEO+D,KACN,IAAItC,OAAO,IAAM7F,EAAK,KAAKkL,KAAKxF,OAC3B,IAAIkI,KAAK3N,EACVA,EAAI2N,GAAKlB,EAAKzM,EAAI2N,GAAIzF,EAAIzC,GAAGkI,WAIlC3N,cAOe,SAAA,GAAUD,+BAAV,EAAA,EAAgB,UACtCA,GAAO,IACE0O,OAAOrQ,OACZ6O,GAAMlN,GACC8M,EAAS9M,EAAK,KAAO,IACN,iBAARA,GAAoBA,EAAI4F,SAAS,MAAQsH,GAAMlN,EAAI2C,MAAM,GAAI,IACpEqK,EAAOhN,EAAI2C,MAAM,GAAI,GAAI,KAEzB,GANoB,aCjWpB,IAAIgL,GCPnB,SAASgB,UACCrI,gBAAgBqI,IAAO,MAAM,IAAIpI,UAAU,qCAErDoI,GAAKnI,mDCCqB,SAAUxG,UACzBA,EAAIyC,OAAO,GAAGmM,cAAgB5O,EAAI2C,MAAM,mBASrB,SAAU3C,EAAKuE,WACrCsK,EAAe,GACfC,EAAQ9O,EAAInC,QAAQ0G,IACP,GAAVuK,GACHD,EAAa3G,KAAK4G,GAClBA,EAAQ9O,EAAInC,QAAQ0G,EAAQuK,EAAQ,UAEjCD,QAQS,oBACPE,WAC0B,OAArB,EAAIxN,KAAKuH,UAAuB,GAAGhC,SAAS,IAAIkI,UAAU,UAEjED,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,mBASvD,SAAU/O,UAC5BA,EAAIlC,QAAQ,WAAY,eAQV,SAAU6B,OAC3BiD,EAAI,UACRjD,EAAE7B,QAAQ,qCAAsC,SAAUwG,EAAGD,GACzDzB,EAAEsF,KAAK7D,KAEJzB,cASe,SAAU5C,UACzBA,EAAIlC,QACP,WACA,SAAAmR,SACK,KACQ,YACA,WACA,WACA,UACPA,IAAQA,iBASK,SAAUC,GAC7BC,GAAmB,UAChBA,EAASrR,QAAQqR,EAASxM,MAAM,GAAI,GAAI,aC0C3B,SAAXyM,GAAqBC,EAAIC,MAClCD,EAAmB,iBAAPA,EAAkBE,SAASC,cAAcH,GAAMA,QAE/C,QAARC,EACOD,EAAGI,WACK,OAARH,EACAD,EAAGK,UACK,SAARJ,EACAD,EAAGM,YACK,UAARL,EACAD,EAAGO,cAEHP,EAAGQ,cAAuCC,iBAAiBT,IAAzBC,GAgCtB,SAAdS,GAAwBC,OAC5BA,EAAO,MAAO,MACL,IAAVA,EAAa,MAAO,UAGpB9N,EAAIX,KAAK6D,MAAM7D,KAAK0O,IAAID,GAASzO,KAAK0O,IAFlC,cAGED,EAAQzO,KAAKgL,IAHf,KAGsBrK,IACnBgO,QAAQ,GAAK,IAHZ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAGxBhO,GCtLX,SAAhBiO,GAA0B1I,SACuB,WAAnDnF,OAAOkE,UAAUM,SAASQ,KAAKG,GAAG9E,MAAM,GAAI,GAqJjC,SAATyN,GAAS,GACM,GAApB/M,UAAUhF,SACkB,iBAFd,EAGVgS,aAAaC,WAHH,GAIHzQ,MAAMwH,QAJH,IAAA,EAKOJ,MAAM,SAAA/E,SAAkB,iBAANA,KALzB,EAMOqO,QAAQ,SAAArO,UAAKmO,aAAaC,WAAWpO,MA4HxC,SAAbsO,SAMA9K,EALL+B,EAAIgJ,KACJxQ,EAAM,CACFsC,KAAM,GACNmH,IAAK,QAEJhE,KAAK+B,EACN0I,GAAc1I,EAAE/B,KAAO+B,EAAE/B,GAAGgL,eAAe,YACvC,IAAI9S,KAAS6J,EAAE/B,GAAGiL,UAAYlJ,EAAE/B,GAAGkL,UACnC3Q,EAAIsC,KAAK2F,KAAKxC,GACdzF,EAAIyJ,IAAIhE,GAAK+B,EAAE/B,WAIpBzF,SH9RI,IAAI0O,GEyBNkC,GAAc,SAAdA,QACHxM,EAAIkL,SAASuB,gBAAgBC,WAAaxB,SAASyB,KAAKD,UACtD,EAAJ1M,IACA+F,OAAO6G,sBAAsBJ,GAC7BzG,OAAO8G,SAAS,EAAG7M,EAAIA,EAAI,gDA/BV,SAAU8D,EAAKgJ,EAAI9H,GACxClB,EAAIiJ,iBAAmBjJ,EAAIiJ,iBAAiBD,EAAI9H,GAAI,GAASlB,EAAIkJ,YAAY,KAAOF,EAAI9H,gBAQjE,SAAUlB,EAAKgJ,EAAI9H,GAC1ClB,EAAImJ,oBAAsBnJ,EAAImJ,oBAAoBH,EAAI9H,GAAI,GAASlB,EAAIoJ,YAAY,KAAOJ,EAAI9H,kBAQrE,kBAClBkG,SAASuB,gBAAgBU,aAAepH,OAAOqH,UAAYlC,SAASuB,gBAAgBY,cAAgBnC,SAASuB,gBAAgBU,2CAmB5G,SAAUG,UAC3BpC,SAASC,cAAcmC,GAASC,eAAe,CAAEC,SAAU,8BAMrC,SAAA,GAAUxC,+BAAV,EAAA,EAAejF,aACrC,CACHP,OAAsB9G,IAAnBsM,EAAGyC,YAA4BzC,EAAGyC,YAAczC,EAAG0C,WACtDrQ,OAAsBqB,IAAnBsM,EAAG2C,YAA4B3C,EAAG2C,YAAc3C,EAAG0B,qBAUtC,SAAUkB,EAAMC,EAAMC,GAE1B,SAAZC,QAKQC,EAJJC,EAAMjP,UACNkP,EAAUjM,KACVkM,GAASC,aAAaD,GACtBL,GACIE,GAAWG,EACfA,EAAUE,WAAW,WACjBF,EAAU,MACXN,GACCG,GAASJ,EAAKU,MAAMJ,EAASD,IAEjCE,EAAUE,WAAW,WACjBT,EAAKU,MAAMJ,EAASD,IACrBJ,OAdPM,SAiBJJ,EAAUQ,OAAS,WACfH,aAAaD,GACbA,EAAU,MAEPJ,YASa,SAAUH,EAAMC,EAAMW,OACtCL,EAASD,EAASvU,EAClB8U,EAAM,SACID,EAATA,GAAmB,GACjB,WACHN,EAAUjM,KACVtI,EAAOqF,cAEHG,GAAM,IAAI5F,MAAOW,WACG,IAApBsU,EAAQE,SAAsBD,IAC9BA,EAAMtP,GAEM0O,EAAZ1O,EAAMsP,GAEFN,IACAC,aAAaD,GACbA,EAAU,MAEdP,EAAKU,MAAMJ,EAASvU,GACpB8U,EAAMtP,GACEgP,IAAgC,IAArBK,EAAQG,WAE3BR,EAAUE,WAAW,WACjBI,GAAM,IAAIlV,MAAOW,UACjBiU,EAAU,KACVP,EAAKU,MAAMJ,EAASvU,IACrBkU,uBA8BK,sCAAa7C,2BAAAA,4BACxBA,GAAIkB,QAAQ,SAAAtG,UAAMA,EAAEgJ,MAAMC,QAAU,6BAMX,iBAEvB,KADkB,QAAhB3R,KAAKuH,SAAqB,KAAShC,SAAS,IACtCnE,MAAM,EAAG,SAOR,SAAU+G,UACnB7J,MAAMwH,QAAQqC,GAAOA,EAAIrL,OAASqL,GAAsB,WAAf1C,EAAO0C,GAAmBA,EAAIyJ,MAAQzJ,EAAIrL,QAAUiE,OAAOC,KAAKmH,GAAKrL,OAAwB,iBAARqL,EAAmB,IAAI0J,KAAK,CAAC1J,IAAMyJ,KAAO,iCAoBrJ,SAAU1L,OAChCxH,EAAMqC,OAAOC,KAAKkF,GAAGtD,OAAO,SAACC,EAAGC,UAAOD,EAAEiP,OAAOhP,EAAGoD,EAAEpD,KAAOD,GAAG,IAAIkP,iBACvErT,EAAIsT,MAAQ,kBAAM9L,GACXxH,WAQY,SAAUuT,EAAMC,GAC/BA,KAAaD,GAAMA,EAAKC,gBAQP,SAAUC,EAAMxH,OACjCyH,EAAQpE,SAASqE,YAAY,SACjCD,EAAME,UAAU3H,GAAM,GAAM,GAC5BwH,EAAKI,cAAcH,YAQA,SAAUI,EAAV,OAAiBC,+BAAjB,EAAA,EAA0B,IACzCC,EAAM1E,SAAS2E,eAAeH,GAC9BrV,EAAI6Q,SAASuB,gBACb3S,EAAIoR,SAASyB,cAYRmD,IACLF,EAAIhB,MAAMC,QAAUxU,EAAEqS,UAAY5S,EAAE4S,UAAYiD,EAAS,QAAU,OAZvE5J,OAAOgK,SAAWD,EAClBF,EAAIhB,MAAMC,QAAU,OACpBe,EAAII,QAAU,WACVJ,EAAIhB,MAAMC,QAAU,OACpB9I,OAAOgK,SAAW,UACbtP,MAAQC,YAAY,WACrBrG,EAAEqS,WAAaxP,KAAKE,KAAmC,IAA7B/C,EAAEqS,UAAY5S,EAAE4S,YAC1C5S,EAAE4S,WAAaxP,KAAKE,KAAmC,IAA7B/C,EAAEqS,UAAY5S,EAAE4S,YACtCrS,EAAEqS,UAAY5S,EAAE4S,WAAa,GAAG5L,cAAc8O,EAAInP,MAAQsF,OAAOgK,SAAWD,IACjF,sBAYoB,SAAU9E,EAAI7K,EAAd,OAGvBwP,EAH6CM,+BAAtB,EAAA,EAAkC,QAC7DjF,EAAmB,iBAAPA,EAAkBE,SAASC,cAAcH,GAAMA,KAEvD2E,EAAuB,SAAdM,EAAuB,aAAe,YAEnDnP,cAAckK,EAAGvK,OAEjBuK,EAAGvK,MAAQC,YAAY,eAEfoE,EAAO5H,KAAKE,MAAM+C,EAAS6K,EAAG2E,IAAW,IAEzC3E,EAAG2E,IAAWxP,EAEdW,cAAckK,EAAGvK,OAEjBuK,EAAG4D,MAAoB,SAAdqB,EAAuB,OAAS,OAASjF,EAAG2E,GAAU7K,EAAO,MAE3E,wBAQ0B,SAAUkG,EAAI7K,EAAd,OAGzBwP,EAIAO,EAP+CD,+BAAtB,EAAA,EAAkC,QAC/DjF,EAAmB,iBAAPA,EAAkBE,SAASC,cAAcH,GAAMA,KAEvD2E,EAAuB,SAAdM,EAAuB,aAAe,YAEnDnP,cAAckK,EAAGvK,OAEbyP,EAAQ/P,EAAS6K,EAAG2E,GAAU,GAAK,EAEvC3E,EAAGvK,MAAQC,YAAY,WAEfsK,EAAG2E,IAAWxP,EAEdW,cAAckK,EAAGvK,OAEjBuK,EAAG4D,MAAMqB,GAAajF,EAAG2E,GAAUO,EAAQ,MAEhD,oBAQsB,SAAUC,EAAV,OAAmBvS,+BAAnB,EAAA,EAA4B,GACjDsG,EAAOgH,SAASkF,cAAc,QAClClM,EAAKmM,aAAa,OAAQzS,EAASuS,EAAU,QAC7CjM,EAAKmM,aAAa,OAAQ,YAC1BnF,SAASoF,qBAAqB,QAAQ,GAAGC,YAAYrM,qBAQzB,SAAUsM,EAAcC,GACpDD,EAAatE,QAAQ,SAAAwE,OACbC,EAASzF,SAASkF,cAAc,UACpCO,EAAON,aAAa,MAAOK,GAC3BxF,SAASyB,KAAK4D,YAAYI,KAE9B5K,OAAO6K,OAAS,WACZH,GAAYA,eASI,SAAUI,EAAUC,UACjC5F,SAASC,cAAc0F,GAAUE,SAAS7F,SAASC,cAAc2F,iBAQjD,SAAU3Q,EAAQ6Q,EAAaxQ,OAClD5E,EAAM,QACNuE,EAAO8Q,WAAa9Q,EAAO8Q,UAAUF,SAASC,GAC9CpV,EAAMuE,MACH,MACIA,GAAUA,EAAO8Q,YAAc9Q,EAAO8Q,UAAUF,SAASC,SAC5D7Q,EAASA,EAAO+Q,YACJD,sBACRzQ,GAAMA,KAId5E,EAAMuE,EAEVK,GAAMA,EAAG5E,gBAQc,kBAChBsP,SAASyB,KAAKD,UACf,CACIlH,EAAG0F,SAASyB,KAAKe,WACjBrQ,EAAG6N,SAASyB,KAAKD,WAErB,CACIlH,EAAG0F,SAASuB,gBAAgBiB,WAC5BrQ,EAAG6N,SAASuB,gBAAgBC,yBAMd,eAEpByE,EAAOjG,SAASkG,KAAOlG,SAASmG,iBAAiB,YAC9CnU,KAAKyH,UAALzH,OAAY+B,EAAIkS,GAAMjS,IAAI,SAAArB,UAAKe,SAAS6M,iBAAiB5N,GAAGyT,SAAW,YAa9D,SAAUxN,EAAKmH,EAAM9K,EAAQoR,EAAMC,OAC/ClF,EAAY,IAAI/S,KAChBkY,EAAW7S,SAASmM,GAASjH,EAAKmH,IAClCxK,EAAQC,YAAY,eAChBgR,EAAU,IAAInY,KACdoY,EAAU/S,SAASuB,GAAUsR,EAC7BG,GAAQF,EAAUpF,GAAaiF,EACvB,GAARK,IACAA,EAAO,EACP9Q,cAAcL,GACVoR,UAAYC,MAAM9X,OAAS,GAC3B+X,aAAe,EACfP,GAAQA,IACRQ,SACc,GAAVA,SACAH,SAAW,EACXG,OAAS,GAEbJ,EAAOK,KACY,GAAZJ,WACPE,aAAeD,MAAM9X,OAAS,EAC9BwX,GAAQA,IACRQ,SACc,GAAVA,SACAH,SAAWC,MAAM9X,OAAS,EAC1BgY,OAAS,GAEbJ,EAAOK,MAGfnO,EAAI8K,MAAM3D,GAAQ2G,EAAOD,EAAUF,EAAW,MAC/C,gBASmB,SAAUS,WACbxT,IAAfwT,EAAIlY,OACJkY,EAAIC,UAAY,SAAUrF,GAClBsF,EAAUtF,GAAMwC,SACG,GAAnB8C,EAAQC,SAAmC,IAAnBD,EAAQC,SAAoC,IAAnBD,EAAQC,UAAkBD,EAAQC,QAAU,IAAwB,GAAlBD,EAAQC,SAAe,OAAO,YAGpI,IAAIxU,EAAI,EAAGA,EAAIqU,EAAIlY,OAAQ6D,IAC5BqU,EAAIrU,GAAGsU,UAAY,SAAUrF,GACrBsF,EAAUtF,GAAMwC,SACG,GAAnB8C,EAAQC,SAAmC,IAAnBD,EAAQC,SAAoC,IAAnBD,EAAQC,UAAkBD,EAAQC,QAAU,IAAwB,GAAlBD,EAAQC,SAAe,OAAO,SAWjI,SAAUxB,EAAUrQ,IAChB,iBAAbqQ,EAAwB3F,SAASC,cAAc0F,GAAqBA,GAAXyB,SAChEpH,SAASqH,YAAY,QACrB/R,GAAMA,OClUG4L,GAAW,eAChB9K,EAAM0K,aAAahS,WAClBsH,EAAK,MAAO,WACb1F,EAAM,GACDiC,EAAI,EAAGA,EAAIyD,EAAKzD,IAAK,KACtBG,EAAMgO,aAAahO,IAAIH,OAEvBjC,EAAIoC,GAAO4L,KAAK/I,MAAMmL,aAAawG,QAAQxU,IAC7C,MAAOyU,GACL7W,EAAIoC,GAAOgO,aAAawG,QAAQxU,WAGjCpC,GCvIX,SAAS8W,UACCzQ,gBAAgByQ,IAAQ,MAAM,IAAIxQ,UAAU,qCAEtDwQ,GAAMvQ,6DDGa,eACXxI,6BAAWqF,cACI,GAAfrF,EAAKK,OACLgS,aAAa2G,QAAQhZ,EAAK,GAAsB,iBAAXA,EAAK,GAAiBA,EAAK,GAAKiQ,KAAKC,UAAUlQ,EAAK,UACtF,GAAmB,GAAfA,EAAKK,QAAe8R,GAAcnS,EAAK,QACzC,IAAI0H,KAAK1H,EAAK,GACfqS,aAAa2G,QAAQtR,EAAwB,iBAAd1H,EAAK,GAAG0H,GAAiB1H,EAAK,GAAG0H,GAAKuI,KAAKC,UAAUlQ,EAAK,GAAG0H,WAUpF,sCAAa1H,2BAAAA,sBACxBE,EAAWF,KAARG,EAAQH,KAALqG,EAAKrG,QACG,GAAfA,EAAKK,WACD8R,GAAcjS,OACT,IAAIwH,KAAK1H,EAAK,GACfqS,aAAa2G,QAAQtR,EAAkB,iBAARxH,EAAEwH,GAAiBxH,EAAEwH,GAAKuI,KAAKC,UAAUhQ,EAAEwH,UAG/E,GAAmB,GAAf1H,EAAKK,WACK,iBAANH,EACPmS,aAAa2G,QAAQ9Y,EAAgB,iBAANC,EAAiBA,EAAI8P,KAAKC,UAAU/P,SAChE,GAAIgS,GAAcjS,OAChB,IAAIwH,KAAKxH,EACVmS,aAAa2G,QACTtR,EACAuI,KAAKC,UAAU,CACXyC,WAAY,IAAI/S,KAChBgT,QAASzS,EACT4P,MAAO7P,EAAEwH,WAKH,GAAf1H,EAAKK,QACK,iBAANH,GACPmS,aAAa2G,QACT9Y,EACA+P,KAAKC,UAAU,CACXyC,WAAY,IAAI/S,KAChBgT,QAASvM,EACT0J,MAAO5P,UAYR,SAAUsJ,GACT,iBAALA,EACP4I,aAAaC,WAAW7I,GACjB5H,MAAMwH,QAAQI,IAAMA,EAAER,MAAM,SAAA/E,SAAiB,iBAALA,KAC/CuF,EAAE8I,QAAQ,SAAAlO,UAAOgO,aAAaC,WAAWjO,aAQ3B,eACdrE,6BAAWqF,WACI,GAAfrF,EAAKK,QAAkC,iBAAZL,EAAK,IAChCqS,aAAa2G,QAAQhZ,EAAK,GAAIiQ,KAAKC,UAAUlQ,EAAK,UAQvC,SAAUqN,OAErBlD,EAAMsI,YACLnO,OAAOC,KAAK4F,QAGMpF,IAAZsI,EAAwBlD,EAAMA,EAAIkD,GAFlC,WAMK,SAAUhJ,OACtBoB,EAAO4M,aAAawG,QAAQxU,OAG5BoB,EAAOwK,KAAK/I,MAAMzB,GACpB,MAAOqT,WAKLrT,GAAQA,EAAKkN,UAET,IAAI/S,KAAS6F,EAAKkN,UAAYlN,EAAKmN,SACnCP,aAAaC,WAAWjO,IACjB,GAEAoB,EAAKsK,MAGTtK,qBAyBM,WACjB4M,aAAa4G,qCAuBgB,WAEL,IAAAC,EASAA,EAUGA,EAnB3B7G,aAAa2G,SAAWE,EAMrB7G,aAAa2G,QALL,SAAU3U,EAAK0L,OACdoJ,EAAe,IAAIC,YAAY,eAAgB,CAAEC,OAAQ,CAAEC,OAAQjV,EAAK0L,MAAAA,KAC5E3D,OAAO0J,cAAcqD,GACrBD,EAAM5P,KAAKhB,KAAMjE,EAAqB,iBAAT0L,EAAoBA,EAAQE,KAAKC,UAAUH,MAKhFsC,aAAawG,SAAWK,EAOrB7G,aAAawG,QANL,SAAUxU,OACTkM,EAASN,KAAK/I,MAAMgS,EAAM5P,KAAKhB,KAAMjE,IACrCkV,EAAe,IAAIH,YAAY,eAAgB,CAAEC,OAAQ,CAAEG,OAAQnV,EAAK0L,MAAOQ,YACnFnE,OAAO0J,cAAcyD,GACdhJ,IAKf8B,aAAaC,YAAc4G,EAMxB7G,aAAaC,WALL,SAAUjO,OACToV,EAAkB,IAAIL,YAAY,kBAAmB,CAAEC,OAAQ,CAAEK,UAAWrV,KAChF+H,OAAO0J,cAAc2D,GACrBP,EAAM5P,KAAKhB,KAAMjE,uBASG,WAEJ,IAAA6U,EAAxB7G,aAAa2G,SAAWE,EAMrB7G,aAAa2G,QALL,SAAU3U,EAAK0L,OACdoJ,EAAe,IAAIC,YAAY,eAAgB,CAAEC,OAAQ,CAAEC,OAAQjV,EAAK0L,MAAAA,KAC5E3D,OAAO0J,cAAcqD,GACrBD,EAAM5P,KAAKhB,KAAMjE,EAAqB,iBAAT0L,EAAoBA,EAAQE,KAAKC,UAAUH,wBASpD,WAEJ,IAAAmJ,EAAxB7G,aAAawG,SAAWK,EAOrB7G,aAAawG,QANL,SAAUxU,OACTkM,EAASN,KAAK/I,MAAMgS,EAAM5P,KAAKhB,KAAMjE,IACrCkV,EAAe,IAAIH,YAAY,eAAgB,CAAEC,OAAQ,CAAEG,OAAQnV,EAAK0L,MAAOQ,YACnFnE,OAAO0J,cAAcyD,GACdhJ,yBASgB,WAEJ,IAAA2I,EAA3B7G,aAAaC,YAAc4G,EAMxB7G,aAAaC,WALL,SAAUjO,OACToV,EAAkB,IAAIL,YAAY,kBAAmB,CAAEC,OAAQ,CAAEK,UAAWrV,KAChF+H,OAAO0J,cAAc2D,GACrBP,EAAM5P,KAAKhB,KAAMjE,oBAUA,eAGhBqD,EAFL+B,EAAIgJ,KACJxQ,EAAM,OACDyF,KAAK+B,EACN0I,GAAc1I,EAAE/B,KAAO+B,EAAE/B,GAAGgL,eAAe,aAC3CzQ,EAAIyF,GAAK+B,EAAE/B,WAGZzF,qBAQsB,eAGpByF,EAFL+B,EAAIgJ,KACJkH,EAAa,OACRjS,KAAK+B,EACN0I,GAAc1I,EAAE/B,KAAO+B,EAAE/B,GAAGgL,eAAe,YAC3CiH,EAAWzP,KAAKxC,UAGjBiS,8BA8BiB,SAAUC,OAE9BC,EAAUrH,KAAajO,QAEtBc,UAAUhF,WAGc,iBAAduZ,GAA0BC,EAAQjS,SAASgS,GAClDxH,GAAOwH,QACJ,GAAI/X,MAAMwH,QAAQuQ,IAAcA,EAAUvZ,WACxC,IAAI6D,EAAI,EAAGA,EAAI0V,EAAUvZ,OAAQ6D,IAC9B2V,EAAQjS,SAASgS,EAAU1V,KAC3BkO,GAAOwH,EAAU1V,SAP7B2V,EAAQxZ,QAAU+R,GAAOyH,SAmBb,kBACT9H,GAAY9B,KAAKC,UAAUmC,cAAchS,iBCjUrC,IAAI0Y,GCkHNe,GAAU,SAAUzO,GAC7BA,sEACAyO,GAAU,cClHd,SAASC,UACCzR,gBAAgByR,IAAW,MAAM,IAAIxR,UAAU,qCAEzDwR,GAASvR,oDDTkB,eA0BfwR,EACAC,EACAC,EA3BJC,EAAK/N,OAAOgO,UAAUC,UACtBC,EAAO,kBAAmBlO,OAC1BmO,EAAWJ,EAAGjY,MAAM,WACpBsY,KAAcL,EAAGjY,MAAM,wBAA0BiY,EAAGjY,MAAM,aAAeiY,EAAGjY,MAAM,mBAAqBiY,EAAGjY,MAAM,cAChHuY,IAAUN,EAAGjY,MAAM,uBACnBwY,IAAcP,EAAGjY,MAAM,YACvByY,EAAgD,kBAA/BR,EAAGjY,MAAM,mBAC1B0Y,EAAOD,GAAyC,UAAvBR,EAAGjY,MAAM,WAClC2Y,EAAaF,GAAyC,UAAvBR,EAAGjY,MAAM,YAAiD,UAAvBiY,EAAGjY,MAAM,WAC3E4Y,EAASH,GAAyC,UAAvBR,EAAGjY,MAAM,YAAiD,UAAvBiY,EAAGjY,MAAM,WACvE6Y,EAAWJ,GAAyC,UAAvBR,EAAGjY,MAAM,WACtC8Y,EAAiBL,GAAyC,UAAvBR,EAAGjY,MAAM,YAAiD,UAAvBiY,EAAGjY,MAAM,WAC/E+Y,EAAaN,GAAyC,UAAvBR,EAAGjY,MAAM,YAAiD,UAAvBiY,EAAGjY,MAAM,WAE3EgZ,EAAY,YAEhBC,EAAQnB,EAAQC,EAASC,GAAS,EAEnB,+BADDE,UAAUgB,UACwBd,IACxCrY,EAAMkY,EAAGjY,MAAM,uBAGfgZ,EADIG,EAAUpZ,EAAI,GAGlBkZ,EAAgB,KADZrP,EAAM7G,SAASoW,EAAS,KAE5BrB,EAAe,GAAPlO,EACRmO,EAAgB,IAAPnO,EACToO,EAAgB,IAAPpO,GAGV,CACHyO,SAAAA,EACAD,KAAAA,EACAE,SAAAA,EACAU,UAAAA,EACAC,MAAAA,EACAnB,MAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAO,MAAAA,EACAC,UAAAA,EACAE,KAAAA,EACAC,WAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,eAAAA,EACAC,WAAAA,iBAOoB,eACpBK,EAAO/J,SAASyB,KACpBsI,EAAKC,wBACCD,EAAKC,0BACLD,EAAKE,qBACLF,EAAKE,uBACLF,EAAKG,oBACLH,EAAKG,sBACLH,EAAKI,kBACLJ,EAAKI,oBACLC,MAAM,4BAMc,eACtBL,EAAOM,OAAOrK,SAClB+J,EAAKO,uBACCP,EAAKO,yBACLP,EAAKQ,oBACLR,EAAKQ,sBACLR,EAAKS,iBACLT,EAAKS,mBACLT,EAAKU,iBACLV,EAAKU,mBACLV,EAAKW,eACLX,EAAKW,iBACLN,MAAM,uBAEI,mBACP,iBAAkBvP,kBAGP,iBACb,iBAAkBA,kBAGJ,eACjB8P,EAAI9B,UAAUC,iBACa,EAAxB6B,EAAErc,QAAQ,aAAuC,EAApBqc,EAAErc,QAAQ,cAG7B,mBACTua,UAAUC,UACPnY,MAAM,8CAIM,eACnBqC,EAAO,YACF4X,EAAM9X,EAAK0L,UAEW,EAAvBxL,EAAK2F,KAAK7F,EAAM,aAET8X,EAAM5X,EAAK6X,SAIdD,EAAM9X,EAAM,KAAO0L,SAExBoM,uCASe,SAAChQ,EAAKkQ,EAAOC,EAAOC,EAAQC,EAAMC,EAAKC,GACzC,iBAATJ,IAA4C,GAAvBA,EAAMzc,QAAQ,OAC1Cyc,EAAQ/Y,KAAK6D,MAAMuV,OAAOC,YAAcrR,WAAW+Q,EAAMxc,QAAQ,IAAK,KAAO,OAE5D,iBAAVyc,IAA8C,GAAxBA,EAAO1c,QAAQ,OAC5C0c,EAAShZ,KAAK6D,MAAMuV,OAAOC,YAAcrR,WAAWgR,EAAOzc,QAAQ,IAAK,KAAO,OAExE0c,EAANA,IAAcG,OAAOC,WAAaN,GAAS,EACtCG,EAALA,IAAYE,OAAOE,YAAcN,GAAU,GAC9B,IAAdG,IAAqBA,GAAY,GACjCI,EAAa,CACb,SAAWvZ,KAAKwH,IAAIuR,EAAOK,OAAOC,WAAa,KAC/C,UAAYrZ,KAAKwH,IAAIwR,EAAQI,OAAOE,YAAc,KAClD,QAAUL,EACV,OAASC,EACT,cAAgBC,EAAY,MAAQ,MACpC,8DAEAL,IACAlQ,EAAMA,IAA6B,IAAtBA,EAAItM,QAAQ,KAAc,IAAM,KAAO,eAAiBkd,UAAUV,QAG/ElY,EAAKiI,OAAO4Q,KAAK7Q,EAAKkQ,EAAOS,EAAWhb,KAAK,iBAE7CqC,EAAG8Y,QACI9Y,EACT,MAAO8H,GACL0P,MAAM,0CEvJE,SAAVuB,GAAoBzT,UACfnF,OAAOkE,UAAUM,SAASQ,KAAKG,GAAG9E,MAAM,GAAI,GAAGwY,gBDS3C,IAAIpD,GEJnB,SAASqD,UACC9U,gBAAgB8U,IAAQ,MAAM,IAAI7U,UAAU,qCAEtD6U,GAAM5U,2CDLY,SAAUkD,EAAKwC,UACtBgP,GAAQxR,KAASwC,YAGJ,SAAUzE,SACR,WAAfyT,GAAQzT,aAGK,SAAUA,SACR,WAAfyT,GAAQzT,aAGK,SAAUA,SACR,WAAfyT,GAAQzT,aAGK,SAAUA,SACV,iBAANA,WAGK,SAAUA,UACtB5H,MAAMwH,QAAQI,WAGH,SAAUA,UACf,OAANA,eAGgB,SAAUA,eACpB1E,IAAN0E,aAGc,SAAUA,SACxB,EAAC,GAAO,GAAM7B,SAAS6B,eAGR,SAAUA,SACV,aAAfyT,GAAQzT,WAGG,SAAUA,SACN,SAAfyT,GAAQzT,YASI,SAAA,OAACkE,+BAAD,EAAA,EAAQ,YAGN,MAAC5I,EAAW,MAAM,EAAO,GAAI,EAAGuT,KACpC1Q,SAAS+F,GAAO,OAAO,KAChCA,aAAgBnE,MAAO,MAAwB,KAAjBmE,EAAK0P,eAG/BH,GAAQvP,QACP,aACA,eACOA,EAAKtN,WACZ,WACA,UACA,aACOsN,EAAKwH,SACZ,gBACO7Q,OAAOC,KAAKoJ,GAAMtN,sBAEnB,GAEjB,MAAO4L,UACE,QClEA,IAAImR,GCTnB,SAASE,UACChV,gBAAgBgV,IAAO,MAAM,IAAI/U,UAAU,qCAErD+U,GAAK9U,UAAY+U,GCAU,SAAdC,GAAwBrR,UAC1B,IAAIsR,QAAQ,SAAAC,OACXC,EAAM,IAAIC,MACdD,EAAIE,IAAM1R,EACVwR,EAAIG,YAAc,GAClBH,EAAI1G,OAAS,eAELrU,EAAI0F,KAAKgU,MACTjV,EAAIiB,KAAKiU,OAGTwB,EAASxM,SAASkF,cAAc,UAChCuH,EAAMD,EAAOE,WAAW,MAE5BF,EAAOrH,aAAa,QAAS9T,GAC7Bmb,EAAOrH,aAAa,SAAUrP,GAC9B2W,EAAIE,UAAU5V,KAAM,EAAG,EAAG1F,EAAGyE,GAEzB8W,EAASJ,EAAOK,UAAU,YAThB,KAWdV,EAAQS,MAUQ,SAAfE,GAAyBC,EAAU3Q,OACxC4Q,EAAehN,SAASkF,cAAc,KACtC8H,IACAhN,SAASyB,KAAK4D,YAAY2H,GAC1BA,EAAatJ,MAAQ,gBACrBsJ,EAAaC,SAAWF,EACxBC,EAAajS,KAAOqB,EAChB4D,SAASqE,cACL6I,EAAclN,SAASqE,YAAY,gBAC3BC,UAAU,SAAS,GAAM,GACrC0I,EAAazI,cAAc2I,IACpBlN,SAASmN,kBAChBH,EAAaI,UAAU,WACe,mBAAxBJ,EAAalI,SAC3BkI,EAAalI,UAEjB9E,SAASyB,KAAK4L,YAAYL,MD7CnB,IAAIjB,GEJnB,SAASuB,UACCvW,gBAAgBuW,IAAW,MAAM,IAAItW,UAAU,qCAEzDsW,GAASrW,oFDuDmB,SAAUsW,UAC3B,IAAIrB,QAAQ,SAAAC,OAGXqB,GAFY3S,OAAOS,KAAOT,OAAO4S,WAEbC,gBAAgBH,GAEpCI,EAAS,IAAIC,WACjBD,EAAOE,cAAcN,GACrBI,EAAOjI,OAAS,SAAUhL,GAClBkS,EAASlS,EAAEzF,OAAO+J,OACtBmN,EAAQ,CAAES,OAAAA,EAAQY,QAAAA,EAAS7Q,KAAMiQ,EAAOxZ,MAAMwZ,EAAOte,QAAQ,KAAO,EAAGse,EAAOte,QAAQ,0BAUrE,SAAUsM,EAAV,OAAepC,+BAAf,EAAA,EAAsB,OAC/CyT,GAAYrR,GAAKkT,KAAK,SAAAzV,GAClByU,GAAatU,EAAMH,sBASI,SAAUsN,EAAUnN,OAC3CuV,EAAQ,IAAI1B,MAEhB0B,EAAM5I,aAAa,cAAe,aAClC4I,EAAMrI,OAAS,eAEP8G,EAASxM,SAASkF,cAAc,UAEpCsH,EAAOzB,MAAQgD,EAAMhD,MACrByB,EAAOxB,OAAS+C,EAAM/C,OAERwB,EAAOE,WAAW,MAExBC,UAAUoB,EAAO,EAAG,EAAGvB,EAAOzB,MAAOyB,EAAOxB,YAEhDpQ,EAAM4R,EAAOK,UAAU,aAEvBle,EAAIqR,SAASkF,cAAc,KAE3Bd,EAAQ,IAAI4J,WAAW,SAG3Brf,EAAEse,SAAWzU,GAAQ,SAErB7J,EAAEoM,KAAOH,EAETjM,EAAE4V,cAAcH,IAGpB2J,EAAMzB,KAA0B,iBAAb3G,EAAwB3F,SAASC,cAAc0F,GAAgBA,GAAN2G,kBAQpD,oBAAY2B,SAAAA,aAAW,QAAOrT,IAAAA,QAAKsT,OAAAA,oBAAgBC,SAAAA,aAAW,oBAC/E,IAAIjC,QAAQ,SAACC,EAASiC,OAOnBC,EALK,CACHC,SAAU,GACVC,MAAO,IAITC,EAAO,IAAIC,eACbjW,EAAO,GACXgW,EAAK/C,KAAKwC,EAAUrT,GACpB4T,EAAKE,iBAAiB,QAASL,EAAQE,OACvCC,EAAKE,iBAAiB,eAAgB,oBACtCF,EAAKG,aAAe,OACpBH,EAAKI,mBAAqB,eAGZjB,EAFc,IAApBa,EAAKK,YAAoC,MAAhBL,EAAKM,UAExBnB,EAAS,IAAIC,YAEZmB,WAAWP,EAAKQ,UACvBrB,EAAOjI,OAAS,mBAEFuJ,EAAOtB,EAAO3O,OACpBoP,EAAO1P,KAAK/I,MAAMsZ,IACpB,MAAO1H,GAGD/O,EAFA0V,EACiBM,EAAKU,kBAAkB,uBAAuB/a,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGjFga,MAELgB,EAAO,IAAItL,KAAK,CAAC2K,EAAKQ,WACtBI,EAAS9T,IAAIoS,gBAAgByB,GAC7BnW,EAAOgH,SAASkF,cAAc,KACpClF,SAASyB,KAAK4D,YAAYrM,GAC1BA,EAAK+B,KAAOqU,EACZpW,EAAK/D,OAAS,SACd+D,EAAKD,GAAK,SACVC,EAAKqW,UAAY,SACjBrW,EAAKiU,SAAW3Q,UAAU9D,GAC1BwH,SAAS2E,eAAe,UAAU2K,QAClCtW,EAAK6H,SACLsL,OAIY,IAApBqC,EAAKK,YAAoC,MAAhBL,EAAKM,QAC9BV,EAAO1P,KAAK/I,MAAM6Y,EAAKQ,YAG/BR,EAAKe,KAAK,aC7KH,IAAIjC,GCLnB,SAASkC,UACCzY,gBAAgByY,IAAO,MAAM,IAAIxY,UAAU,qCAErDwY,GAAKvY,UAAY2B,IACF,IAAI4W,GCHnB,SAASC,UACC1Y,gBAAgB0Y,IAAO,MAAM,IAAIzY,UAAU,qCAErDyY,GAAKxY,iDCAmB,SAAAuH,SAAS,gBAAgB7C,KAAK6C,eAM5B,SAAAA,SACtB,yVAAyV7C,KACrV6C,eAMkB,SAAAA,SAAS,+EAA+E7C,KAAK6C,gBAM5F,SAAAA,SAAS,iCAAiC7C,KAAK6C,cAMjD,SAAAA,SAAS,uCAAuC7C,KAAK6C,eAMpD,SAAAA,SAAS,6BAA6B7C,KAAK6C,kBAMxC,SAAAA,SAAS,oDAAoD7C,KAAK6C,mBAMjE,SAAAA,SAAS,gFAAgF7C,KAAK6C,iBAMhG,SAAAA,SAAS,wDAAwD7C,KAAK6C,cAMzE,SAAAA,SAAS,qBAAqB7C,KAAK6C,eAMlC,SAAAA,SAAS,qEAAqE7C,KAAK6C,kBAMhF,SAAAA,SAAS,gCAAgC7C,KAAK6C,kBAM9C,SAAAA,SAAS,8CAA8C7C,KAAK6C,4BAMlD,SAAAA,SAAS,0GAA0G7C,KAAK6C,6BAMvH,SAAAA,SAAS,yFAAyF7C,KAAK6C,yBAM3G,SAAAA,SAChC,wNAAwN7C,KACpN6C,eAOkB,SAAAA,SAAS,kHAAkH7C,KAAK6C,gBAM/H,SAAAA,SAAS,iCAAiC7C,KAAK6C,YAMnD,SAAUA,SACjB,04BACD7C,KAAK6C,wBAMe,SAAAA,SAAS,2BAA2B7C,KAAK6C,eAMlD,SAAAA,SAAS,oGAAoG7C,KAAK6C,uBAM1G,SAAAA,SAC9B,kVAAkV7C,KAC9U6C,cAOiB,SAAAA,SAAS,cAAc7C,KAAK6C,aAM7B,SAAAA,SAAS,YAAY7C,KAAK6C,YAO3B,SAAAA,SAAS,sBAAsB7C,KAAK6C,gBAMhC,SAAAA,SAAS,kBAAkB7C,KAAK6C,cAMlC,SAAAA,SAAS,eAAe7C,KAAK6C,cAM7B,SAAAA,SAAS,YAAY7C,KAAK6C,gBAMxB,SAAAA,SAAS,YAAY7C,KAAK6C,SDlLtC,IAAIiR,GELnB,SAASC,UACC3Y,gBAAgB2Y,IAAO,MAAM,IAAI1Y,UAAU,qCAErD0Y,GAAKzY,+CCHiB,SAAU0Y,OACtBC,EAAaD,EAAbC,IAAKC,EAAQF,EAARE,IACPC,EAAQ,kBACRC,EAAI/d,KAAKge,KAAKJ,EAAMA,EAAMC,EAAMA,GAAO,KAAU7d,KAAKie,IAAIJ,EAAMC,GAChEI,EAAQle,KAAKme,MAAMN,EAAKD,GAAO,KAAW5d,KAAKoe,IAAIR,EAAME,SAGtD,CAAEF,IAFIG,EAAI/d,KAAKoe,IAAIF,GAAS,MAEbL,IADTE,EAAI/d,KAAKie,IAAIC,GAAS,SCPtB,SAAXjgB,GAAYC,EAAQpB,EAAQqB,OACxBC,EAAIC,OAAOH,UACZE,GAAKA,EAAEtB,QAAUA,EAAeuB,OAAOH,aAClCI,MAAMxB,EAAS,EAAIsB,EAAEtB,QAAQyB,KAAKJ,WAAOD,MFExC,IAAIwf,GECnB,SAASW,GAAcpU,QACd1G,MAAQ,UACR1G,OAASoN,EAAIpN,QAAU,oBACvBwN,KAAOJ,EAAII,MAAQ,QACnBvJ,IAAMmJ,EAAIqU,aACVC,QAAUtU,EAAIuU,gBACd7T,KAAOV,EAAIU,MAAQ,OACnB8T,SAOTJ,GAAcpZ,UAAUwZ,OAAS,gBACxBC,UAAU,IAOnBL,GAAcpZ,UAAUoM,OAAS,gBACxBqN,UAAU,IAOnBL,GAAcpZ,UAAUyF,KAAO,SAAUxI,OACjCmS,EAAOnS,EAAK6C,KAAKjE,KACjB4H,GAAK,IAAIrM,MAAMgY,EAAKlH,OAAO9I,SAAS,KAAOgQ,EAAKlH,OAASkH,EAAKlH,OAAS,aAAa5Q,QAAQ,KAAM,MAAQ,IAAIF,MAAU,IAC5HqM,GAAK,IAAMxG,EAAKyc,UAAW,OACvBphB,EAAO,CACPJ,EAAGuL,GAAK,EAAI,KAAO1I,KAAK6D,MAAM6E,EAAI,OAClC5E,EAAG4E,GAAK,EAAI,KAAOzK,GAASyD,SAAS1B,KAAK6D,MAAO6E,EAAI,MAAS,OAAQ,EAAG,GACzE7H,EAAG6H,GAAK,EAAI,KAAOzK,GAASyD,SAAS1B,KAAK6D,MAAO6E,EAAI,MAAS,MAAQ,IAAK,EAAG,GAC9EtK,EAAGsK,GAAK,EAAI,KAAOzK,GAASyD,SAASgH,EAAI,IAAK,EAAG,OAEpC,GAAb3D,KAAK4F,YACE5F,KAAKlI,OAAON,QAAQ,iCAAkC,SAAAI,SAAsB,MAAhBA,EAAEuE,OAAO,IAA2B,IAAbvE,EAAEG,OAAeS,EAAKZ,EAAEuE,OAAO,IAAMqD,OAAOhH,EAAKZ,EAAEuE,OAAO,OAElJgB,EAAK/E,EAAII,EAAKJ,EAAK+E,EAAK4B,EAAIvG,EAAKuG,EAAK5B,EAAKrB,EAAItD,EAAKsD,EAAKqB,EAAK9D,EAAIb,EAAKa,GAQjFigB,GAAcpZ,UAAUyZ,UAAY,SAAU/T,cACrC5F,KAAKsF,KAAKvN,SACf8G,cAAcmB,KAAKxB,YACdA,MAAQ,KACD,GAARoH,SACKpH,MAAQC,YAAY,eAChB,IAAI7C,EAAI,EAAGyD,EAAMwa,EAAKvU,KAAKvN,OAAQ6D,EAAIyD,EAAKzD,IAC5B,GAAbie,EAAKjU,KACLiU,EAAKvU,KAAK1J,GAAGie,EAAKL,SAAWK,EAAKlU,KAAKkU,EAAKvU,KAAK1J,IAEjDie,EAAKlU,KAAKkU,EAAKvU,KAAK1J,KAG7B,QCrEX,SAASke,UACC9Z,gBAAgB8Z,IAAW,MAAM,IAAI7Z,UAAU,qCAEzD6Z,GAAS5Z,4CCEU,SAAUjE,OACrBtC,EAAM,MAENJ,MAAMwH,QAAQ9E,GAAO,KAChB,IAAIqL,EAAI,EAAGA,EAAIrL,EAAKlE,OAAQuP,OACN,iBAAZrL,EAAKqL,IAAmByS,eAAexJ,QAAQtU,EAAKqL,QAEvD3N,EAAIsC,EAAKqL,IAAMK,KAAK/I,MAAMmb,eAAexJ,QAAQtU,EAAKqL,KACxD,MAAOkJ,GACL7W,EAAIsC,EAAKqL,IAAMyS,eAAexJ,QAAQtU,EAAKqL,YAIhDtL,OAAOC,KAAKtC,GAAK5B,QAAS4B,EAC9B,GAAoB,iBAATsC,GAAqB8d,eAAexJ,QAAQtU,cAE/C0L,KAAK/I,MAAMmb,eAAexJ,QAAQtU,IAC3C,MAAOuU,UACEuJ,eAAexJ,QAAQtU,SASvB,SAAUF,EAAKqH,MACX,iBAARrH,GAAwC,GAApBgB,UAAUhF,OAErCgiB,eAAerJ,QAAQ3U,EAAK4L,KAAKC,UAAUxE,SACxC,GAAI7J,MAAMwH,QAAQhF,QAEhB,IAAIH,EAAI,EAAGA,EAAIG,EAAIhE,OAAQ6D,OACgC,WAAxDI,OAAOkE,UAAUM,SAASQ,KAAKjF,EAAIH,IAAIS,MAAM,GAAI,OAC5C,IAAI+C,KAAKrD,EAAIH,GACdme,eAAerJ,QAAQtR,EAAGuI,KAAKC,UAAU7L,EAAIH,GAAGwD,kBAMxD1H,6BAAWqF,WACNnB,EAAI,EAAGA,EAAIlE,EAAKK,OAAQ6D,OACgC,WAAzDI,OAAOkE,UAAUM,SAASQ,KAAKtJ,EAAKkE,IAAIS,MAAM,GAAI,OAC7C,IAAI+C,KAAK1H,EAAKkE,GACfme,eAAerJ,QAAQtR,EAAGuI,KAAKC,UAAUlQ,EAAKkE,GAAGwD,aAW/C,mBACd1H,6BAAWqF,WACNnB,EAAI,EAAGA,EAAIlE,EAAKK,OAAQ6D,IACV,iBAAZlE,EAAKkE,IAAmBme,eAAe/P,WAAWtS,EAAKkE,IAC9DrC,MAAMwH,QAAQrJ,EAAKkE,KAAOoE,KAAK8J,oBAAUpS,EAAKkE,YAQjC,WACjBme,eAAepJ,gBAOG,6BACX3U,OAAOC,KAAK8d,gBAAgBlc,OAAO,SAACC,EAAGC,UAAQD,EAAEC,GAAK8b,EAAKG,IAAIjc,GAAKD,GAAI,SD/EpE,IAAIgc,GELnB,SAASG,UACAC,KAAO,oCAEhBD,GAAS/Z,UAAUia,OAAS,SAAUhZ,MAC9B5H,MAAMwH,QAAQI,QACT,IAAIvF,EAAI,EAAGA,EAAIuF,EAAEpJ,OAAQ6D,OACgC,WAAtDI,OAAOkE,UAAUM,SAASQ,KAAKG,EAAEvF,IAAIS,MAAM,GAAI,OAC1C,IAAI+C,KAAK+B,EAAEvF,GACZqe,GAAS/Z,UAAUd,GAAK+B,EAAEvF,GAAGwD,QAItC,GAAuD,WAAnDpD,OAAOkE,UAAUM,SAASQ,KAAKG,GAAG9E,MAAM,GAAI,OAC9C,IAAI+C,KAAK+B,EACV8Y,GAAS/Z,UAAUd,GAAK+B,EAAE/B,ICGvB,CACX2T,QAAS,QACTva,KAAAA,EACAuJ,IAAAA,EACA8B,IAAAA,GACAL,IAAAA,GACA9J,IAAAA,GACA0gB,MAAAA,EACAC,QAAAA,EACAC,KAAAA,EACArF,IAAAA,EACApT,IAAAA,EACA0Y,IAAAA,GACAtd,IAAAA,GACAiZ,SAAAA,EACAsE,QAAAA,EACAC,SDdW,IAAIR,GCefX,cAAAA"}