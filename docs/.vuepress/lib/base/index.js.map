{"version":3,"file":"index.js","sources":["../../../src/lib/base/lib/core.js","../../../src/lib/base/index.js"],"sourcesContent":["/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-11-12 09:30:02\r\n * @LastEditTime: 2020-12-10 18:34:04\r\n * @LastEditors: shufei\r\n */\r\n// 获取数据类型\r\nconst getType = function (o) {\r\n    return Object.prototype.toString.call(o).slice(8, -1).toLowerCase()\r\n}\r\n// 获取数据类型\r\nexport const is = function (val, type) {\r\n    return getType(val) === type\r\n}\r\n// 是否正则\r\nexport const isRegExp = function (o) {\r\n    return getType(o) === 'regexp'\r\n}\r\n//是否数字\r\nexport const isNumber = function (o) {\r\n    return getType(o) === 'number'\r\n}\r\n//是否对象\r\nexport const isObject = function (o) {\r\n    return getType(o) === 'object'\r\n}\r\n//是否字符串\r\nexport const isString = function (o) {\r\n    return typeof o === 'string'\r\n}\r\n//是否数组\r\nexport const isArray = function (o) {\r\n    return Array.isArray(o)\r\n}\r\n//是否null\r\nexport const isNull = function (o) {\r\n    return o === null\r\n}\r\n//是否undefined\r\nexport const isUndefined = function (o) {\r\n    return o === undefined\r\n}\r\n//是否布尔值\r\nexport const isBoolean = function (o) {\r\n    return [false, true].includes(o)\r\n}\r\n//是否函数\r\nexport const isFunction = function (o) {\r\n    return getType(o) === 'function'\r\n}\r\n//是否时间\r\nexport const isDate = function (o) {\r\n    return getType(o) === 'date'\r\n}\r\n\r\n//是否为空\r\n/**\r\n * 检测是否为空\r\n * @param {Any} data\r\n * @return {Boolean}\r\n */\r\nexport const isEmpty = (data = null) => {\r\n    try {\r\n        //base type\r\n        const baseType = [undefined, null, false, '', 0, NaN]\r\n        if (baseType.includes(data)) return true\r\n        if (data instanceof Error) return data.message === ''\r\n\r\n        //reference type\r\n        switch (getType(data)) {\r\n            case 'string':\r\n            case 'array':\r\n                return !data.length\r\n            case 'file':\r\n            case 'map':\r\n            case 'set':\r\n                return !data.size\r\n            case 'object':\r\n                return !Object.keys(data).length\r\n            default:\r\n                return false\r\n        }\r\n    } catch (e) {\r\n        return true\r\n    }\r\n}\r\n","/*\r\n * @Description:\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:59:30\r\n * @LastEditors: shufei\r\n */\r\n/**\r\n * 基类\r\n * 被其他类所继承\r\n * 基类身上的属性和方法被其他类所需要\r\n */\r\n\r\nimport * as base from './lib/core'\r\nfunction Rbase() {\r\n    if (!(this instanceof Rbase)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRbase.prototype = base\r\nexport default new Rbase()\r\n"],"names":["getType","o","Object","prototype","toString","call","slice","toLowerCase","Rbase","this","TypeError","val","type","Array","isArray","undefined","includes","data","NaN","Error","message","length","size","keys","e"],"mappings":"oOAQgB,SAAVA,EAAoBC,UACfC,OAAOC,UAAUC,SAASC,KAAKJ,GAAGK,MAAM,GAAI,GAAGC,cCK1D,SAASC,SACCC,gBAAgBD,GAAQ,MAAM,IAAIE,UAAU,4CAEtDF,EAAML,2CDLY,SAAUQ,EAAKC,UACtBZ,EAAQW,KAASC,YAGJ,SAAUX,SACR,WAAfD,EAAQC,aAGK,SAAUA,SACR,WAAfD,EAAQC,aAGK,SAAUA,SACR,WAAfD,EAAQC,aAGK,SAAUA,SACV,iBAANA,WAGK,SAAUA,UACtBY,MAAMC,QAAQb,WAGH,SAAUA,UACf,OAANA,eAGgB,SAAUA,eACpBc,IAANd,aAGc,SAAUA,SACxB,EAAC,GAAO,GAAMe,SAASf,eAGR,SAAUA,SACV,aAAfD,EAAQC,WAGG,SAAUA,SACN,SAAfD,EAAQC,YASI,SAAA,OAACgB,+BAAD,EAAA,EAAQ,YAGN,MAACF,EAAW,MAAM,EAAO,GAAI,EAAGG,KACpCF,SAASC,GAAO,OAAO,KAChCA,aAAgBE,MAAO,MAAwB,KAAjBF,EAAKG,eAG/BpB,EAAQiB,QACP,aACA,eACOA,EAAKI,WACZ,WACA,UACA,aACOJ,EAAKK,SACZ,gBACOpB,OAAOqB,KAAKN,GAAMI,sBAEnB,GAEjB,MAAOG,UACE,MClEA,IAAIhB"}