{"version":3,"file":"index.js","sources":["../../../src/lib/obj/lib/core.js","../../../src/lib/obj/index.js"],"sourcesContent":["/*\r\n * @Description: Obejct 相关的工具函数\r\n * @Author: shufei\r\n * @Date: 2020-11-11 19:20:15\r\n * @LastEditTime: 2020-12-16 11:40:45\r\n * @LastEditors: shufei\r\n */\r\n\r\n/**\r\n * 合并两个对象\r\n * @param { Object } f : 需要合并的第一个对象\r\n * @param { Object } s ：需要合并的第二个对象\r\n * @return Object 合并后的对象\r\n */\r\nexport const merge = function (f, s) {\r\n    for (var i in s) {\r\n        f[i] = f[i] && f[i].toString() === '[object Object]' ? merge(f[i], s[i]) : (f[i] = s[i])\r\n    }\r\n    return f\r\n}\r\n/**\r\n * 深度合并多个对象\r\n * @param  {Object} a\r\n */\r\nexport const mergeMultiple = function (...a) {\r\n    //参数长度\r\n    let l = a.length\r\n    //没有传参 抛出错误\r\n    if (l == 0) throw Error('Pass at least one object parameter')\r\n    //参数传一个 直接返回这个\r\n    if (l == 1) return a[0]\r\n    //参数传一个 直接返回合并后的对象\r\n    if (l == 2) return merge(a[0], a[1])\r\n    //参数大于2，则执行递归合并，并在长度为2时，返回合并对象\r\n    while (a.length > 2) {\r\n        a.splice(0, 2, merge(a[0], a[1]))\r\n        if (a.length == 2) return merge(a[0], a[1])\r\n    }\r\n}\r\n\r\n/**\r\n * 在两个变量之间进行深度比较以确定它们是否全等。\r\n * @param {Object} a\r\n * @param {Object} b\r\n */\r\nexport const equals = function (a, b) {\r\n    if (a === b) return true\r\n    if (a instanceof Date && b instanceof Date) return a.getTime() === b.getTime()\r\n    if (!a || !b || (typeof a !== 'object' && typeof b !== 'object')) return a === b\r\n    if (a.prototype !== b.prototype) return false\r\n    let keys = Object.keys(a)\r\n    if (keys.length !== Object.keys(b).length) return false\r\n    return keys.every(k => equals(a[k], b[k]))\r\n}\r\n\r\n/**\r\n * 浅拷贝\r\n * @param {*} p\r\n */\r\nexport const copy = function (p) {\r\n    var o = {}\r\n    for (var i in p) {\r\n        o[i] = p[i]\r\n    }\r\n    return o\r\n}\r\n\r\n/**\r\n * 递归深拷贝\r\n */\r\nexport const deepCopy = function (p, c) {\r\n    var c = c || {}\r\n    for (var i in p) {\r\n        if (Array.isArray(p[i]) || Object.prototype.toString.call(p[i]).slice(8, -1) === 'Object') {\r\n            deepCopy(p[i], (c[i] = Array.isArray(p[i]) ? [] : {}))\r\n        } else {\r\n            c[i] = p[i]\r\n        }\r\n    }\r\n    return c\r\n}\r\n\r\n/**\r\n * @description: 树转数组\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const treeToArr = function (json, splitFlag) {\r\n    let res = []\r\n    let carry = function (_arr, name) {\r\n        for (let i = 0; i < _arr.length; i++) {\r\n            let _name = name ? name + splitFlag + _arr[i].name : _arr[i].name\r\n            if (_arr[i].children) {\r\n                carry(_arr[i].children, _name)\r\n            } else {\r\n                if (name) {\r\n                    res.push(_name)\r\n                } else {\r\n                    res.push(_arr[i].name)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    carry([json])\r\n    return res\r\n}\r\n\r\n/**\r\n * @description: 根据条件删除数组中的值 并改变该对象\r\n * @param :\r\n * @return {*}\r\n */\r\nexport const delObjBy = function (obj, cb) {\r\n    if (typeof cb === 'string') delete obj[cb]\r\n    for (let k in obj) {\r\n        if (typeof cb === 'function' && cb(obj[k])) {\r\n            delete obj[k]\r\n        } else if (Array.isArray(cb)) {\r\n            cb.includes(k) && delete obj[k]\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Description: Object\r\n * @Author: shufei\r\n * @Date: 2020-08-24 08:26:55\r\n * @LastEditTime: 2020-12-04 09:54:42\r\n * @LastEditors: shufei\r\n */\r\nimport * as obj from './lib/core'\r\nfunction Robj() {\r\n    if (!(this instanceof Robj)) throw new TypeError('Cannot call a class as a function')\r\n}\r\nRobj.prototype = obj\r\nexport default new Robj()\r\n"],"names":["merge","f","s","i","toString","equals","a","b","Date","getTime","_typeof","prototype","keys","Object","length","every","k","deepCopy","p","c","Array","isArray","call","slice","Robj","this","TypeError","l","Error","splice","o","json","splitFlag","res","carry","_arr","name","_name","children","push","obj","cb","includes"],"mappings":"wcAcqB,SAARA,EAAkBC,EAAGC,OACzB,IAAIC,KAAKD,EACVD,EAAEE,GAAKF,EAAEE,IAA0B,oBAApBF,EAAEE,GAAGC,WAAmCJ,EAAMC,EAAEE,GAAID,EAAEC,IAAOF,EAAEE,GAAKD,EAAEC,UAElFF,EA2BW,SAATI,EAAmBC,EAAGC,MAC3BD,IAAMC,EAAG,OAAO,KAChBD,aAAaE,MAAQD,aAAaC,KAAM,OAAOF,EAAEG,YAAcF,EAAEE,cAChEH,IAAMC,GAAmB,WAAbG,EAAOJ,IAA+B,WAAbI,EAAOH,GAAiB,OAAOD,IAAMC,KAC3ED,EAAEK,YAAcJ,EAAEI,UAAW,OAAO,MACpCC,EAAOC,OAAOD,KAAKN,UACnBM,EAAKE,SAAWD,OAAOD,KAAKL,GAAGO,QAC5BF,EAAKG,MAAM,SAAAC,UAAKX,EAAOC,EAAEU,GAAIT,EAAES,MAkBlB,SAAXC,EAAqBC,EAAGC,OAExBhB,EADLgB,EAAIA,GAAK,OACJhB,KAAKe,EACNE,MAAMC,QAAQH,EAAEf,KAA6D,WAAtDU,OAAOF,UAAUP,SAASkB,KAAKJ,EAAEf,IAAIoB,MAAM,GAAI,GACtEN,EAASC,EAAEf,GAAKgB,EAAEhB,GAAKiB,MAAMC,QAAQH,EAAEf,IAAM,GAAK,IAElDgB,EAAEhB,GAAKe,EAAEf,UAGVgB,ECvEX,SAASK,SACCC,gBAAgBD,GAAO,MAAM,IAAIE,UAAU,4CAErDF,EAAKb,8DDawB,sCAAaL,2BAAAA,sBAElCqB,EAAIrB,EAAEQ,UAED,GAALa,EAAQ,MAAMC,MAAM,yCAEf,GAALD,EAAQ,OAAOrB,EAAE,MAEZ,GAALqB,EAAQ,OAAO3B,EAAMM,EAAE,GAAIA,EAAE,SAEf,EAAXA,EAAEQ,WACLR,EAAEuB,OAAO,EAAG,EAAG7B,EAAMM,EAAE,GAAIA,EAAE,KACb,GAAZA,EAAEQ,OAAa,OAAOd,EAAMM,EAAE,GAAIA,EAAE,mBAuB5B,SAAUY,OAEjBf,EADL2B,EAAI,OACC3B,KAAKe,EACVY,EAAE3B,GAAKe,EAAEf,UAEN2B,wBAuBc,SAAUC,EAAMC,OACjCC,EAAM,UACE,SAARC,EAAkBC,EAAMC,OACnB,IAAIjC,EAAI,EAAGA,EAAIgC,EAAKrB,OAAQX,IAAK,KAC9BkC,EAAQD,EAAOA,EAAOJ,EAAYG,EAAKhC,GAAGiC,KAAOD,EAAKhC,GAAGiC,KACzDD,EAAKhC,GAAGmC,SACRJ,EAAMC,EAAKhC,GAAGmC,SAAUD,GAEpBD,EACAH,EAAIM,KAAKF,GAETJ,EAAIM,KAAKJ,EAAKhC,GAAGiC,OAKjCF,CAAM,CAACH,IACAE,YAQa,SAAUO,EAAKC,OAE9B,IAAIzB,IADS,iBAAPyB,UAAwBD,EAAIC,GACzBD,GACQ,mBAAPC,GAAqBA,EAAGD,EAAIxB,KAE5BI,MAAMC,QAAQoB,IACrBA,EAAGC,SAAS1B,YAFLwB,EAAIxB,MCxGR,IAAIQ"}