{"version":3,"file":"index.js","sources":["../../../src/lib/string/guid.js","../../../src/lib/string/escape.js","../../../src/lib/string/index.js","../../../src/lib/string/camelCase.js","../../../src/lib/string/randomHexColorCode.js"],"sourcesContent":["const S4 = function () {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n}\n/**\n * @description: 生成GUID的方法\n * @return {string}:guid\n */\nconst guid = function () {\n    return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4()\n}\nexport default guid\n","/*\n * @Author: your name\n * @Date: 2021-06-06 14:57:02\n * @LastEditTime: 2021-06-06 15:01:09\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\rutils\\src\\lib\\string\\escape.js\n */\n\nconst htmlEscapes = {\n    '&': '&amp',\n    '<': '&lt',\n    '>': '&gt',\n    '\"': '&quot',\n    \"'\": '&#39'\n}\nconst reUnescapedHtml = /[&<>\"']/g\nconst reHasUnescapedHtml = RegExp(reUnescapedHtml.source)\nconst escape = function (string) {\n    return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, chr => htmlEscapes[chr]) : string\n}\n\nexport default escape\n","/*\n * @Author: your name\n * @Date: 2021-06-06 14:23:44\n * @LastEditTime: 2021-06-08 22:25:47\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\rutils\\src\\lib\\string\\index.js\n */\nimport guid from './guid'\nimport camelCase from './camelCase'\nimport escape from './escape'\nimport randomHexColorCode from './randomHexColorCode'\n\nexport default {\n    guid,\n    camelCase,\n    escape,\n    randomHexColorCode\n}\n","/**\n * @description: 转换字符串string为驼峰写法。\n * @param {String} str [string=''] (string): 要转换的字符串。\n * @return {String} (string): 返回驼峰写法的字符串。\n */\nconst camelCase = function (str) {\n    return str.match(/[a-zA-Z]+/g).reduce((p, c) => {\n        c = c.toLowerCase()\n        p += c.replace(c[0], c[0].toUpperCase())\n        return p\n    }, '')\n}\nexport default camelCase\n","/**\n * 随机十六进制颜色\n */\nconst randomHexColorCode = function () {\n    let n = (Math.random() * 0xfffff * 1000000).toString(16)\n    return '#' + n.slice(0, 6)\n}\nexport default randomHexColorCode\n"],"names":["S4","Math","random","toString","substring","htmlEscapes","reUnescapedHtml","reHasUnescapedHtml","RegExp","source","guid","camelCase","str","match","reduce","p","c","toLowerCase","replace","toUpperCase","escape","string","test","chr","randomHexColorCode","slice"],"mappings":"sOAAW,SAALA,WAC6B,OAArB,EAAIC,KAAKC,UAAuB,GAAGC,SAAS,IAAIC,UAAU,GADxE,ICSMC,EAAc,KACX,WACA,UACA,UACA,YACA,QAEHC,EAAkB,WAClBC,EAAqBC,OAAOF,EAAgBG,cCJnC,CACXC,KFPS,kBACFV,IAAOA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAO,IAAMA,IAAOA,IAAOA,KEOhFW,UCVc,SAAUC,UACjBA,EAAIC,MAAM,cAAcC,OAAO,SAACC,EAAGC,UAEtCD,IADAC,EAAIA,EAAEC,eACCC,QAAQF,EAAE,GAAIA,EAAE,GAAGG,gBAE3B,KDMHC,ODEW,SAAUC,UACdA,GAAUd,EAAmBe,KAAKD,GAAUA,EAAOH,QAAQZ,EAAiB,SAAAiB,UAAOlB,EAAYkB,KAAQF,GCF9GG,mBEduB,iBAEhB,KADkB,QAAhBvB,KAAKC,SAAqB,KAASC,SAAS,IACtCsB,MAAM,EAAG"}